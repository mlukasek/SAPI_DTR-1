ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	USBUART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_Init, %function
  25              	USBUART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC5/USBUART.c **** 
  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 2


  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART.c ****     {
  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 3


  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 4


 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
 195:Generated_Source\PSoC5/USBUART.c **** }
 196:Generated_Source\PSoC5/USBUART.c **** 
 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 5


 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  28              		.loc 1 212 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  33              		.cfi_def_cfa_offset 24
  34              		.cfi_offset 3, -24
  35              		.cfi_offset 4, -20
  36              		.cfi_offset 5, -16
  37              		.cfi_offset 6, -12
  38              		.cfi_offset 7, -8
  39              		.cfi_offset 14, -4
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 6


 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
  40              		.loc 1 250 0
  41 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  42              	.LVL0:
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
  43              		.loc 1 257 0
  44 0006 404A     		ldr	r2, .L2
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
  45              		.loc 1 262 0
  46 0008 0127     		movs	r7, #1
 257:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
  47              		.loc 1 257 0
  48 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
  49              		.loc 1 264 0
  50 000c 0226     		movs	r6, #2
 257:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
  51              		.loc 1 257 0
  52 000e 43F00103 		orr	r3, r3, #1
  53 0012 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/USBUART.c **** 
  54              		.loc 1 259 0
  55 0014 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
  56              		.loc 1 274 0
  57 0016 3D4C     		ldr	r4, .L2+4
 259:Generated_Source\PSoC5/USBUART.c **** 
  58              		.loc 1 259 0
  59 0018 43F00103 		orr	r3, r3, #1
  60 001c 1374     		strb	r3, [r2, #16]
 262:Generated_Source\PSoC5/USBUART.c **** 
  61              		.loc 1 262 0
  62 001e 3C4B     		ldr	r3, .L2+8
 268:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 7


  63              		.loc 1 268 0
  64 0020 02F5E352 		add	r2, r2, #7264
 262:Generated_Source\PSoC5/USBUART.c **** 
  65              		.loc 1 262 0
  66 0024 1F70     		strb	r7, [r3]
 268:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  67              		.loc 1 268 0
  68 0026 0B32     		adds	r2, r2, #11
 264:Generated_Source\PSoC5/USBUART.c **** 
  69              		.loc 1 264 0
  70 0028 03F8946C 		strb	r6, [r3, #-148]
 268:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  71              		.loc 1 268 0
  72 002c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 250:Generated_Source\PSoC5/USBUART.c **** 
  73              		.loc 1 250 0
  74 002e 0546     		mov	r5, r0
  75              	.LVL1:
 268:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
  76              		.loc 1 268 0
  77 0030 03F07F03 		and	r3, r3, #127
  78 0034 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
  79              		.loc 1 269 0
  80 0036 0020     		movs	r0, #0
  81 0038 FFF7FEFF 		bl	CyDelayUs
  82              	.LVL2:
  83              		.loc 1 274 0
  84 003c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
  85              		.loc 1 278 0
  86 003e 354A     		ldr	r2, .L2+12
 274:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
  87              		.loc 1 274 0
  88 0040 03F0F903 		and	r3, r3, #249
  89 0044 2370     		strb	r3, [r4]
  90              		.loc 1 278 0
  91 0046 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
  92              		.loc 1 283 0
  93 0048 3846     		mov	r0, r7
 278:Generated_Source\PSoC5/USBUART.c **** 
  94              		.loc 1 278 0
  95 004a 03F0DF03 		and	r3, r3, #223
  96 004e 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
  97              		.loc 1 281 0
  98 0050 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  99 0052 3B43     		orrs	r3, r3, r7
 100 0054 2370     		strb	r3, [r4]
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 8


 101              		.loc 1 283 0
 102 0056 FFF7FEFF 		bl	CyDelayUs
 103              	.LVL3:
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 104              		.loc 1 285 0
 105 005a 2820     		movs	r0, #40
 106 005c FFF7FEFF 		bl	CyDelayUs
 107              	.LVL4:
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
 108              		.loc 1 287 0
 109 0060 2D4B     		ldr	r3, .L2+16
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 110              		.loc 1 292 0
 111 0062 3046     		mov	r0, r6
 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 112              		.loc 1 287 0
 113 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 114 0066 02F07F02 		and	r2, r2, #127
 115 006a 1A70     		strb	r2, [r3]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 116              		.loc 1 288 0
 117 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 118 006e 02F0BF02 		and	r2, r2, #191
 119 0072 1A70     		strb	r2, [r3]
 291:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 120              		.loc 1 291 0
 121 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 122 0076 3343     		orrs	r3, r3, r6
 123 0078 2370     		strb	r3, [r4]
 124              		.loc 1 292 0
 125 007a FFF7FEFF 		bl	CyDelayUs
 126              	.LVL5:
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 127              		.loc 1 294 0
 128 007e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 129              		.loc 1 297 0
 130 0080 264A     		ldr	r2, .L2+20
 294:Generated_Source\PSoC5/USBUART.c **** 
 131              		.loc 1 294 0
 132 0082 43F00403 		orr	r3, r3, #4
 133 0086 2370     		strb	r3, [r4]
 134              		.loc 1 297 0
 135 0088 0023     		movs	r3, #0
 136 008a 1370     		strb	r3, [r2]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 9


 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 137              		.loc 1 312 0
 138 008c 2846     		mov	r0, r5
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 139              		.loc 1 298 0
 140 008e 5370     		strb	r3, [r2, #1]
 141              		.loc 1 312 0
 142 0090 FFF7FEFF 		bl	CyExitCriticalSection
 143              	.LVL6:
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 144              		.loc 1 331 0
 145 0094 0721     		movs	r1, #7
 146 0096 1720     		movs	r0, #23
 147 0098 FFF7FEFF 		bl	CyIntSetPriority
 148              	.LVL7:
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 149              		.loc 1 332 0
 150 009c 2049     		ldr	r1, .L2+24
 151 009e 1720     		movs	r0, #23
 152 00a0 FFF7FEFF 		bl	CyIntSetVector
 153              	.LVL8:
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 154              		.loc 1 335 0
 155 00a4 0721     		movs	r1, #7
 156 00a6 1820     		movs	r0, #24
 157 00a8 FFF7FEFF 		bl	CyIntSetPriority
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 10


 158              	.LVL9:
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 159              		.loc 1 336 0
 160 00ac 1D49     		ldr	r1, .L2+28
 161 00ae 1820     		movs	r0, #24
 162 00b0 FFF7FEFF 		bl	CyIntSetVector
 163              	.LVL10:
 337:Generated_Source\PSoC5/USBUART.c **** 
 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 164              		.loc 1 340 0
 165 00b4 0721     		movs	r1, #7
 166 00b6 1520     		movs	r0, #21
 167 00b8 FFF7FEFF 		bl	CyIntSetPriority
 168              	.LVL11:
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 169              		.loc 1 341 0
 170 00bc 1A49     		ldr	r1, .L2+32
 171 00be 1520     		movs	r0, #21
 172 00c0 FFF7FEFF 		bl	CyIntSetVector
 173              	.LVL12:
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 174              		.loc 1 346 0
 175 00c4 0721     		movs	r1, #7
 176 00c6 0620     		movs	r0, #6
 177 00c8 FFF7FEFF 		bl	CyIntSetPriority
 178              	.LVL13:
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 179              		.loc 1 347 0
 180 00cc 1749     		ldr	r1, .L2+36
 181 00ce 0620     		movs	r0, #6
 182 00d0 FFF7FEFF 		bl	CyIntSetVector
 183              	.LVL14:
 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 184              		.loc 1 352 0
 185 00d4 0721     		movs	r1, #7
 186 00d6 0846     		mov	r0, r1
 187 00d8 FFF7FEFF 		bl	CyIntSetPriority
 188              	.LVL15:
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 189              		.loc 1 353 0
 190 00dc 1449     		ldr	r1, .L2+40
 191 00de 0720     		movs	r0, #7
 192 00e0 FFF7FEFF 		bl	CyIntSetVector
 193              	.LVL16:
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 11


 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 194              		.loc 1 358 0
 195 00e4 0721     		movs	r1, #7
 196 00e6 0820     		movs	r0, #8
 197 00e8 FFF7FEFF 		bl	CyIntSetPriority
 198              	.LVL17:
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 199              		.loc 1 359 0
 200 00ec 1149     		ldr	r1, .L2+44
 201 00ee 0820     		movs	r0, #8
 202 00f0 FFF7FEFF 		bl	CyIntSetVector
 203              	.LVL18:
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 204              		.loc 1 401 0
 205 00f4 0721     		movs	r1, #7
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 12


 206 00f6 0C20     		movs	r0, #12
 207 00f8 FFF7FEFF 		bl	CyIntSetPriority
 208              	.LVL19:
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
 209              		.loc 1 409 0
 210 00fc BDE8F840 		pop	{r3, r4, r5, r6, r7, lr}
 211              		.cfi_restore 14
 212              		.cfi_restore 7
 213              		.cfi_restore 6
 214              		.cfi_restore 5
 215              		.cfi_restore 4
 216              		.cfi_restore 3
 217              		.cfi_def_cfa_offset 0
 218              	.LVL20:
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 219              		.loc 1 402 0
 220 0100 0D49     		ldr	r1, .L2+48
 221 0102 0C20     		movs	r0, #12
 222 0104 FFF7FEBF 		b	CyIntSetVector
 223              	.LVL21:
 224              	.L3:
 225              		.align	2
 226              	.L2:
 227 0108 A5430040 		.word	1073759141
 228 010c 94430040 		.word	1073759124
 229 0110 9D600040 		.word	1073766557
 230 0114 12600040 		.word	1073766418
 231 0118 F8510040 		.word	1073762808
 232 011c 84600040 		.word	1073766532
 233 0120 00000000 		.word	USBUART_BUS_RESET_ISR
 234 0124 00000000 		.word	USBUART_EP_0_ISR
 235 0128 00000000 		.word	USBUART_SOF_ISR
 236 012c 00000000 		.word	USBUART_EP_1_ISR
 237 0130 00000000 		.word	USBUART_EP_2_ISR
 238 0134 00000000 		.word	USBUART_EP_3_ISR
 239 0138 00000000 		.word	USBUART_DP_ISR
 240              		.cfi_endproc
 241              	.LFE1:
 242              		.size	USBUART_Init, .-USBUART_Init
 243              		.section	.text.USBUART_InitComponent,"ax",%progbits
 244              		.align	1
 245              		.global	USBUART_InitComponent
 246              		.thumb
 247              		.thumb_func
 248              		.type	USBUART_InitComponent, %function
 249              	USBUART_InitComponent:
 250              	.LFB2:
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 13


 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 251              		.loc 1 461 0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              	.LVL22:
 256 0000 08B5     		push	{r3, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 3, -8
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 14


 259              		.cfi_offset 14, -4
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBUART.c ****     {
 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 260              		.loc 1 476 0
 261 0002 1C4B     		ldr	r3, .L13
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 262              		.loc 1 479 0
 263 0004 1C4A     		ldr	r2, .L13+4
 476:Generated_Source\PSoC5/USBUART.c **** 
 264              		.loc 1 476 0
 265 0006 1870     		strb	r0, [r3]
 266              		.loc 1 479 0
 267 0008 0023     		movs	r3, #0
 268 000a 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 269              		.loc 1 480 0
 270 000c 1B4A     		ldr	r2, .L13+8
 271 000e 1370     		strb	r3, [r2]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 272              		.loc 1 481 0
 273 0010 1B4A     		ldr	r2, .L13+12
 274 0012 1370     		strb	r3, [r2]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 275              		.loc 1 482 0
 276 0014 1B4A     		ldr	r2, .L13+16
 277 0016 1370     		strb	r3, [r2]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 278              		.loc 1 483 0
 279 0018 1B4A     		ldr	r2, .L13+20
 280 001a 1370     		strb	r3, [r2]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 281              		.loc 1 484 0
 282 001c 1B4A     		ldr	r2, .L13+24
 283 001e 1370     		strb	r3, [r2]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 284              		.loc 1 485 0
 285 0020 1B4A     		ldr	r2, .L13+28
 286 0022 1370     		strb	r3, [r2]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 15


 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 287              		.loc 1 493 0
 288 0024 1B4B     		ldr	r3, .L13+32
 289 0026 4FF40002 		mov	r2, #8388608
 290 002a 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 291              		.loc 1 494 0
 292 002c 4FF08072 		mov	r2, #16777216
 293 0030 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 294              		.loc 1 497 0
 295 0032 4FF40012 		mov	r2, #2097152
 296 0036 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 297              		.loc 1 501 0
 298 0038 4022     		movs	r2, #64
 299 003a 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 300              		.loc 1 505 0
 301 003c 8022     		movs	r2, #128
 302 003e 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 303              		.loc 1 509 0
 304 0040 4FF48072 		mov	r2, #256
 305 0044 1A60     		str	r2, [r3]
 306 0046 144B     		ldr	r3, .L13+36
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 16


 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 307              		.loc 1 573 0
 308 0048 19B9     		cbnz	r1, .L12
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 309              		.loc 1 577 0
 310 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 311 004c 02F0FE02 		and	r2, r2, #254
 312 0050 02E0     		b	.L10
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 17


 313              	.L12:
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 314              		.loc 1 591 0
 315 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 316 0054 42F00102 		orr	r2, r2, #1
 317              	.L10:
 318 0058 1A70     		strb	r2, [r3]
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 319              		.loc 1 627 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 18


 320 005a 104B     		ldr	r3, .L13+40
 321 005c 0322     		movs	r2, #3
 322 005e 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 323              		.loc 1 630 0
 324 0060 8022     		movs	r2, #128
 325 0062 03F8202C 		strb	r2, [r3, #-32]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 326              		.loc 1 631 0
 327 0066 0120     		movs	r0, #1
 328              	.LVL23:
 329 0068 FFF7FEFF 		bl	CyDelayCycles
 330              	.LVL24:
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 331              		.loc 1 635 0
 332 006c 0C4B     		ldr	r3, .L13+44
 333 006e 0422     		movs	r2, #4
 334 0070 1A70     		strb	r2, [r3]
 335 0072 08BD     		pop	{r3, pc}
 336              	.L14:
 337              		.align	2
 338              	.L13:
 339 0074 00000000 		.word	USBUART_device
 340 0078 00000000 		.word	USBUART_transferState
 341 007c 00000000 		.word	USBUART_configurationChanged
 342 0080 00000000 		.word	USBUART_configuration
 343 0084 00000000 		.word	USBUART_interfaceNumber
 344 0088 00000000 		.word	USBUART_deviceAddress
 345 008c 00000000 		.word	USBUART_deviceStatus
 346 0090 00000000 		.word	USBUART_lastPacketSize
 347 0094 00E100E0 		.word	-536813312
 348 0098 09600040 		.word	1073766409
 349 009c 28600040 		.word	1073766440
 350 00a0 12600040 		.word	1073766418
 351              		.cfi_endproc
 352              	.LFE2:
 353              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 354              		.section	.text.USBUART_Start,"ax",%progbits
 355              		.align	1
 356              		.global	USBUART_Start
 357              		.thumb
 358              		.thumb_func
 359              		.type	USBUART_Start, %function
 360              	USBUART_Start:
 361              	.LFB0:
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 362              		.loc 1 187 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 0
 365              		@ frame_needed = 0, uses_anonymous_args = 0
 366              	.LVL25:
 367 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 19


 368              		.cfi_def_cfa_offset 16
 369              		.cfi_offset 4, -16
 370              		.cfi_offset 5, -12
 371              		.cfi_offset 6, -8
 372              		.cfi_offset 14, -4
 188:Generated_Source\PSoC5/USBUART.c ****     {
 373              		.loc 1 188 0
 374 0002 074C     		ldr	r4, .L17
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 375              		.loc 1 187 0
 376 0004 0546     		mov	r5, r0
 188:Generated_Source\PSoC5/USBUART.c ****     {
 377              		.loc 1 188 0
 378 0006 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 187:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
 379              		.loc 1 187 0
 380 0008 0E46     		mov	r6, r1
 188:Generated_Source\PSoC5/USBUART.c ****     {
 381              		.loc 1 188 0
 382 000a 1BB9     		cbnz	r3, .L16
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
 383              		.loc 1 190 0
 384 000c FFF7FEFF 		bl	USBUART_Init
 385              	.LVL26:
 191:Generated_Source\PSoC5/USBUART.c ****     }
 386              		.loc 1 191 0
 387 0010 0123     		movs	r3, #1
 388 0012 2370     		strb	r3, [r4]
 389              	.L16:
 194:Generated_Source\PSoC5/USBUART.c **** }
 390              		.loc 1 194 0
 391 0014 3146     		mov	r1, r6
 392 0016 2846     		mov	r0, r5
 195:Generated_Source\PSoC5/USBUART.c **** 
 393              		.loc 1 195 0
 394 0018 BDE87040 		pop	{r4, r5, r6, lr}
 395              		.cfi_restore 14
 396              		.cfi_restore 6
 397              		.cfi_restore 5
 398              		.cfi_restore 4
 399              		.cfi_def_cfa_offset 0
 194:Generated_Source\PSoC5/USBUART.c **** }
 400              		.loc 1 194 0
 401 001c FFF7FEBF 		b	USBUART_InitComponent
 402              	.LVL27:
 403              	.L18:
 404              		.align	2
 405              	.L17:
 406 0020 00000000 		.word	.LANCHOR0
 407              		.cfi_endproc
 408              	.LFE0:
 409              		.size	USBUART_Start, .-USBUART_Start
 410              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 411              		.align	1
 412              		.global	USBUART_ReInitComponent
 413              		.thumb
 414              		.thumb_func
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 20


 415              		.type	USBUART_ReInitComponent, %function
 416              	USBUART_ReInitComponent:
 417              	.LFB3:
 636:Generated_Source\PSoC5/USBUART.c **** }
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 418              		.loc 1 672 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
 422              		@ link register save eliminated.
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 21


 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 423              		.loc 1 686 0
 424 0000 0A4A     		ldr	r2, .L20
 425 0002 0023     		movs	r3, #0
 426 0004 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 427              		.loc 1 687 0
 428 0006 0A4A     		ldr	r2, .L20+4
 429 0008 1370     		strb	r3, [r2]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 430              		.loc 1 688 0
 431 000a 0A4A     		ldr	r2, .L20+8
 432 000c 1370     		strb	r3, [r2]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 433              		.loc 1 689 0
 434 000e 0A4A     		ldr	r2, .L20+12
 435 0010 1370     		strb	r3, [r2]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 436              		.loc 1 690 0
 437 0012 0A4A     		ldr	r2, .L20+16
 438 0014 1370     		strb	r3, [r2]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 439              		.loc 1 691 0
 440 0016 0A4A     		ldr	r2, .L20+20
 441 0018 1370     		strb	r3, [r2]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 442              		.loc 1 692 0
 443 001a 0A4A     		ldr	r2, .L20+24
 444 001c 1370     		strb	r3, [r2]
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 445              		.loc 1 699 0
 446 001e 0A4B     		ldr	r3, .L20+28
 447 0020 0322     		movs	r2, #3
 448 0022 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 449              		.loc 1 703 0
 450 0024 8022     		movs	r2, #128
 451 0026 03F8202C 		strb	r2, [r3, #-32]
 452 002a 7047     		bx	lr
 453              	.L21:
 454              		.align	2
 455              	.L20:
 456 002c 00000000 		.word	USBUART_transferState
 457 0030 00000000 		.word	USBUART_configurationChanged
 458 0034 00000000 		.word	USBUART_configuration
 459 0038 00000000 		.word	USBUART_interfaceNumber
 460 003c 00000000 		.word	USBUART_deviceAddress
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 22


 461 0040 00000000 		.word	USBUART_deviceStatus
 462 0044 00000000 		.word	USBUART_lastPacketSize
 463 0048 28600040 		.word	1073766440
 464              		.cfi_endproc
 465              	.LFE3:
 466              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 467              		.section	.text.USBUART_Stop,"ax",%progbits
 468              		.align	1
 469              		.global	USBUART_Stop
 470              		.thumb
 471              		.thumb_func
 472              		.type	USBUART_Stop, %function
 473              	USBUART_Stop:
 474              	.LFB4:
 704:Generated_Source\PSoC5/USBUART.c **** }
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 475              		.loc 1 730 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479 0000 08B5     		push	{r3, lr}
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 23


 483              		.loc 1 738 0
 484 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 485              	.LVL28:
 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 486              		.loc 1 741 0
 487 0006 224A     		ldr	r2, .L23
 488 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 489 000a 03F07F03 		and	r3, r3, #127
 490 000e 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 491              		.loc 1 744 0
 492 0010 937A     		ldrb	r3, [r2, #10]	@ zero_extendqisi2
 493 0012 03F0FB03 		and	r3, r3, #251
 494 0016 9372     		strb	r3, [r2, #10]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 495              		.loc 1 751 0
 496 0018 A2F5E352 		sub	r2, r2, #7264
 497 001c 033A     		subs	r2, r2, #3
 498 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 499 0020 03F0FE03 		and	r3, r3, #254
 500 0024 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 501              		.loc 1 752 0
 502 0026 137C     		ldrb	r3, [r2, #16]	@ zero_extendqisi2
 503 0028 03F0FE03 		and	r3, r3, #254
 504 002c 1374     		strb	r3, [r2, #16]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 505              		.loc 1 756 0
 506 002e 194B     		ldr	r3, .L23+4
 507 0030 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 508 0032 42F08002 		orr	r2, r2, #128
 509 0036 1A70     		strb	r2, [r3]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 510              		.loc 1 757 0
 511 0038 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 512 003a 42F04002 		orr	r2, r2, #64
 513 003e 1A70     		strb	r2, [r3]
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 514              		.loc 1 761 0
 515 0040 FFF7FEFF 		bl	CyExitCriticalSection
 516              	.LVL29:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 24


 762:Generated_Source\PSoC5/USBUART.c **** 
 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 517              		.loc 1 770 0
 518 0044 144B     		ldr	r3, .L23+8
 519 0046 4FF40002 		mov	r2, #8388608
 520 004a 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 521              		.loc 1 771 0
 522 004c 4FF08072 		mov	r2, #16777216
 523 0050 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 524              		.loc 1 774 0
 525 0052 4FF40012 		mov	r2, #2097152
 526 0056 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 527              		.loc 1 778 0
 528 0058 4022     		movs	r2, #64
 529 005a 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 530              		.loc 1 782 0
 531 005c 8022     		movs	r2, #128
 532 005e 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 533              		.loc 1 786 0
 534 0060 4FF48072 		mov	r2, #256
 535 0064 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 25


 800:Generated_Source\PSoC5/USBUART.c **** 
 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 536              		.loc 1 811 0
 537 0066 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 538              	.LVL30:
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 539              		.loc 1 812 0
 540 006a 0C4B     		ldr	r3, .L23+12
 541 006c 4FF48052 		mov	r2, #4096
 542 0070 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 543              		.loc 1 818 0
 544 0072 0B4A     		ldr	r2, .L23+16
 545 0074 0023     		movs	r3, #0
 546 0076 1370     		strb	r3, [r2]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 547              		.loc 1 819 0
 548 0078 0A4A     		ldr	r2, .L23+20
 549 007a 1370     		strb	r3, [r2]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 550              		.loc 1 820 0
 551 007c 0A4A     		ldr	r2, .L23+24
 552 007e 1370     		strb	r3, [r2]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 553              		.loc 1 821 0
 554 0080 0A4A     		ldr	r2, .L23+28
 555 0082 1370     		strb	r3, [r2]
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 556              		.loc 1 822 0
 557 0084 0A4A     		ldr	r2, .L23+32
 558 0086 1370     		strb	r3, [r2]
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 559              		.loc 1 825 0
 560 0088 0A4A     		ldr	r2, .L23+36
 561 008a 1370     		strb	r3, [r2]
 562 008c 08BD     		pop	{r3, pc}
 563              	.L24:
 564 008e 00BF     		.align	2
 565              	.L23:
 566 0090 08600040 		.word	1073766408
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 26


 567 0094 F8510040 		.word	1073762808
 568 0098 80E100E0 		.word	-536813184
 569 009c 80E200E0 		.word	-536812928
 570 00a0 00000000 		.word	USBUART_configurationChanged
 571 00a4 00000000 		.word	USBUART_configuration
 572 00a8 00000000 		.word	USBUART_interfaceNumber
 573 00ac 00000000 		.word	USBUART_deviceAddress
 574 00b0 00000000 		.word	USBUART_deviceStatus
 575 00b4 00000000 		.word	.LANCHOR0
 576              		.cfi_endproc
 577              	.LFE4:
 578              		.size	USBUART_Stop, .-USBUART_Stop
 579              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 580              		.align	1
 581              		.global	USBUART_CheckActivity
 582              		.thumb
 583              		.thumb_func
 584              		.type	USBUART_CheckActivity, %function
 585              	USBUART_CheckActivity:
 586              	.LFB5:
 826:Generated_Source\PSoC5/USBUART.c **** }
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 587              		.loc 1 850 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 0
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591              		@ link register save eliminated.
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 592              		.loc 1 851 0
 593 0000 044B     		ldr	r3, .L26
 594 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 595 0004 C0B2     		uxtb	r0, r0
 596              	.LVL31:
 852:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 27


 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 597              		.loc 1 854 0
 598 0006 00F0FB02 		and	r2, r0, #251
 599 000a 1A70     		strb	r2, [r3]
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 858:Generated_Source\PSoC5/USBUART.c **** }
 600              		.loc 1 858 0
 601 000c C0F38000 		ubfx	r0, r0, #2, #1
 602              	.LVL32:
 603 0010 7047     		bx	lr
 604              	.L27:
 605 0012 00BF     		.align	2
 606              	.L26:
 607 0014 09600040 		.word	1073766409
 608              		.cfi_endproc
 609              	.LFE5:
 610              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 611              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 612              		.align	1
 613              		.global	USBUART_GetConfiguration
 614              		.thumb
 615              		.thumb_func
 616              		.type	USBUART_GetConfiguration, %function
 617              	USBUART_GetConfiguration:
 618              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 619              		.loc 1 873 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 624              		.loc 1 874 0
 625 0000 014B     		ldr	r3, .L29
 626 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 875:Generated_Source\PSoC5/USBUART.c **** }
 627              		.loc 1 875 0
 628 0004 7047     		bx	lr
 629              	.L30:
 630 0006 00BF     		.align	2
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 28


 631              	.L29:
 632 0008 00000000 		.word	USBUART_configuration
 633              		.cfi_endproc
 634              	.LFE6:
 635              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 636              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 637              		.align	1
 638              		.global	USBUART_IsConfigurationChanged
 639              		.thumb
 640              		.thumb_func
 641              		.type	USBUART_IsConfigurationChanged, %function
 642              	USBUART_IsConfigurationChanged:
 643              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 644              		.loc 1 899 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              		@ link register save eliminated.
 649              	.LVL33:
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 650              		.loc 1 902 0
 651 0000 044B     		ldr	r3, .L34
 652 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 653 0004 02F0FF00 		and	r0, r2, #255
 654 0008 1AB1     		cbz	r2, .L32
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 655              		.loc 1 904 0
 656 000a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 657              		.loc 1 905 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 29


 658 000c 0022     		movs	r2, #0
 904:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 659              		.loc 1 904 0
 660 000e C0B2     		uxtb	r0, r0
 661              	.LVL34:
 662              		.loc 1 905 0
 663 0010 1A70     		strb	r2, [r3]
 664              	.LVL35:
 665              	.L32:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 909:Generated_Source\PSoC5/USBUART.c **** }
 666              		.loc 1 909 0
 667 0012 7047     		bx	lr
 668              	.L35:
 669              		.align	2
 670              	.L34:
 671 0014 00000000 		.word	USBUART_configurationChanged
 672              		.cfi_endproc
 673              	.LFE7:
 674              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 675              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 676              		.align	1
 677              		.global	USBUART_GetInterfaceSetting
 678              		.thumb
 679              		.thumb_func
 680              		.type	USBUART_GetInterfaceSetting, %function
 681              	USBUART_GetInterfaceSetting:
 682              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
 683              		.loc 1 929 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688              	.LVL36:
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 30


 689              		.loc 1 930 0
 690 0000 014B     		ldr	r3, .L37
 691 0002 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 692              	.LVL37:
 931:Generated_Source\PSoC5/USBUART.c **** }
 693              		.loc 1 931 0
 694 0004 7047     		bx	lr
 695              	.L38:
 696 0006 00BF     		.align	2
 697              	.L37:
 698 0008 00000000 		.word	USBUART_interfaceSetting
 699              		.cfi_endproc
 700              	.LFE8:
 701              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 702              		.section	.text.USBUART_GetEPState,"ax",%progbits
 703              		.align	1
 704              		.global	USBUART_GetEPState
 705              		.thumb
 706              		.thumb_func
 707              		.type	USBUART_GetEPState, %function
 708              	USBUART_GetEPState:
 709              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART.c **** {
 710              		.loc 1 960 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 0
 713              		@ frame_needed = 0, uses_anonymous_args = 0
 714              		@ link register save eliminated.
 715              	.LVL38:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 31


 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 716              		.loc 1 961 0
 717 0000 024A     		ldr	r2, .L40
 718 0002 0C23     		movs	r3, #12
 719 0004 03FB0020 		mla	r0, r3, r0, r2
 720              	.LVL39:
 721 0008 4078     		ldrb	r0, [r0, #1]	@ zero_extendqisi2
 962:Generated_Source\PSoC5/USBUART.c **** }
 722              		.loc 1 962 0
 723 000a 7047     		bx	lr
 724              	.L41:
 725              		.align	2
 726              	.L40:
 727 000c 00000000 		.word	USBUART_EP
 728              		.cfi_endproc
 729              	.LFE9:
 730              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 731              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 732              		.align	1
 733              		.global	USBUART_GetEPCount
 734              		.thumb
 735              		.thumb_func
 736              		.type	USBUART_GetEPCount, %function
 737              	USBUART_GetEPCount:
 738              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 739              		.loc 1 983 0
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 0
 742              		@ frame_needed = 0, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744              	.LVL40:
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 745              		.loc 1 986 0
 746 0000 431E     		subs	r3, r0, #1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 32


 747 0002 072B     		cmp	r3, #7
 748 0004 0CD8     		bhi	.L44
 749              	.LVL41:
 750              	.LBB4:
 751              	.LBB5:
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 752              		.loc 1 989 0
 753 0006 074A     		ldr	r2, .L45
 754 0008 064B     		ldr	r3, .L45
 755 000a 0001     		lsls	r0, r0, #4
 756              	.LVL42:
 757 000c 0344     		add	r3, r3, r0
 758 000e 805C     		ldrb	r0, [r0, r2]	@ zero_extendqisi2
 759              	.LVL43:
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 760              		.loc 1 990 0
 761 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 762 0012 00F00F00 		and	r0, r0, #15
 763              	.LVL44:
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 764              		.loc 1 991 0
 765 0016 43EA0020 		orr	r0, r3, r0, lsl #8
 766              	.LVL45:
 767 001a 0238     		subs	r0, r0, #2
 768 001c 80B2     		uxth	r0, r0
 769              	.LVL46:
 770 001e 7047     		bx	lr
 771              	.LVL47:
 772              	.L44:
 773              	.LBE5:
 774              	.LBE4:
 984:Generated_Source\PSoC5/USBUART.c **** 
 775              		.loc 1 984 0
 776 0020 0020     		movs	r0, #0
 777              	.LVL48:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 995:Generated_Source\PSoC5/USBUART.c **** }
 778              		.loc 1 995 0
 779 0022 7047     		bx	lr
 780              	.L46:
 781              		.align	2
 782              	.L45:
 783 0024 FC5F0040 		.word	1073766396
 784              		.cfi_endproc
 785              	.LFE10:
 786              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 787              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 788              		.align	1
 789              		.global	USBUART_LoadInEP
 790              		.thumb
 791              		.thumb_func
 792              		.type	USBUART_LoadInEP, %function
 793              	USBUART_LoadInEP:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 33


 794              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 34


1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 35


1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 36


1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 37


1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 38


1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 39


1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 795              		.loc 1 1344 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 0
 798              		@ frame_needed = 0, uses_anonymous_args = 0
 799              	.LVL49:
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 800              		.loc 1 1345 0
 801 0000 431E     		subs	r3, r0, #1
 802 0002 072B     		cmp	r3, #7
1344:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 803              		.loc 1 1344 0
 804 0004 F0B5     		push	{r4, r5, r6, r7, lr}
 805              		.cfi_def_cfa_offset 20
 806              		.cfi_offset 4, -20
 807              		.cfi_offset 5, -16
 808              		.cfi_offset 6, -12
 809              		.cfi_offset 7, -8
 810              		.cfi_offset 14, -4
 811              		.loc 1 1345 0
 812 0006 31D8     		bhi	.L47
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 813              		.loc 1 1349 0
 814 0008 194B     		ldr	r3, .L54
 815 000a 0C25     		movs	r5, #12
 816 000c 05FB0035 		mla	r5, r5, r0, r3
 817 0010 EC88     		ldrh	r4, [r5, #6]
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 818              		.loc 1 1356 0
 819 0012 184F     		ldr	r7, .L54+4
1349:Generated_Source\PSoC5/USBUART.c ****         {
 820              		.loc 1 1349 0
 821 0014 A4B2     		uxth	r4, r4
 822 0016 C4F50074 		rsb	r4, r4, #512
 823 001a A242     		cmp	r2, r4
 824              		.loc 1 1356 0
 825 001c 4FF00C04 		mov	r4, #12
 826 0020 04FB0034 		mla	r4, r4, r0, r3
1351:Generated_Source\PSoC5/USBUART.c ****         }
 827              		.loc 1 1351 0
 828 0024 88BF     		it	hi
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 40


 829 0026 EA88     		ldrhhi	r2, [r5, #6]
 830              	.LVL50:
 831              		.loc 1 1356 0
 832 0028 E678     		ldrb	r6, [r4, #3]	@ zero_extendqisi2
1351:Generated_Source\PSoC5/USBUART.c ****         }
 833              		.loc 1 1351 0
 834 002a 84BF     		itt	hi
 835 002c C2F50072 		rsbhi	r2, r2, #512
 836 0030 92B2     		uxthhi	r2, r2
 837              	.LVL51:
 838 0032 104C     		ldr	r4, .L54+4
 839              		.loc 1 1356 0
 840 0034 46EA1226 		orr	r6, r6, r2, lsr #8
 841 0038 0501     		lsls	r5, r0, #4
 842 003a EE55     		strb	r6, [r5, r7]
 843 003c 2C44     		add	r4, r4, r5
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 844              		.loc 1 1357 0
 845 003e D6B2     		uxtb	r6, r2
 846 0040 6670     		strb	r6, [r4, #1]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 847              		.loc 1 1360 0
 848 0042 41B9     		cbnz	r1, .L50
 849              	.L53:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 850              		.loc 1 1371 0
 851 0044 0C22     		movs	r2, #12
 852              	.LVL52:
 853 0046 02FB0030 		mla	r0, r2, r0, r3
 854              	.LVL53:
 855 004a 0023     		movs	r3, #0
 856 004c 4370     		strb	r3, [r0, #1]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 857              		.loc 1 1374 0
 858 004e 4379     		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 859 0050 DBB2     		uxtb	r3, r3
 860 0052 A370     		strb	r3, [r4, #2]
 861 0054 F0BD     		pop	{r4, r5, r6, r7, pc}
 862              	.LVL54:
 863              	.L50:
1360:Generated_Source\PSoC5/USBUART.c ****         {
 864              		.loc 1 1360 0
 865 0056 0E46     		mov	r6, r1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 41


 866              	.LBB6:
1366:Generated_Source\PSoC5/USBUART.c ****             }
 867              		.loc 1 1366 0
 868 0058 074F     		ldr	r7, .L54+8
 869 005a 2F44     		add	r7, r7, r5
 870              	.L51:
 871              	.LVL55:
1364:Generated_Source\PSoC5/USBUART.c ****             {
 872              		.loc 1 1364 0 discriminator 1
 873 005c 751A     		subs	r5, r6, r1
 874 005e ADB2     		uxth	r5, r5
 875 0060 AA42     		cmp	r2, r5
 876 0062 EFD9     		bls	.L53
1366:Generated_Source\PSoC5/USBUART.c ****             }
 877              		.loc 1 1366 0 discriminator 3
 878 0064 16F8015B 		ldrb	r5, [r6], #1	@ zero_extendqisi2
 879              	.LVL56:
 880 0068 3D72     		strb	r5, [r7, #8]
 881              	.LVL57:
 882 006a F7E7     		b	.L51
 883              	.LVL58:
 884              	.L47:
 885 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 886              	.L55:
 887 006e 00BF     		.align	2
 888              	.L54:
 889 0070 00000000 		.word	USBUART_EP
 890 0074 FC5F0040 		.word	1073766396
 891 0078 70600040 		.word	1073766512
 892              	.LBE6:
 893              		.cfi_endproc
 894              	.LFE11:
 895              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 896              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 897              		.align	1
 898              		.global	USBUART_EnableOutEP
 899              		.thumb
 900              		.thumb_func
 901              		.type	USBUART_EnableOutEP, %function
 902              	USBUART_EnableOutEP:
 903              	.LFB13:
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 42


1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 43


1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 44


1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 45


1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 46


1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
1670:Generated_Source\PSoC5/USBUART.c ****             }
1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
1675:Generated_Source\PSoC5/USBUART.c ****     #else
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 47


1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 48


1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 49


1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
1824:Generated_Source\PSoC5/USBUART.c **** }
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 50


1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 51


1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 52


1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 53


2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 54


2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 55


2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 56


2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 57


2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 904              		.loc 1 2277 0
 905              		.cfi_startproc
 906              		@ args = 0, pretend = 0, frame = 0
 907              		@ frame_needed = 0, uses_anonymous_args = 0
 908              		@ link register save eliminated.
 909              	.LVL59:
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 910              		.loc 1 2278 0
 911 0000 431E     		subs	r3, r0, #1
 912 0002 072B     		cmp	r3, #7
 913 0004 0AD8     		bhi	.L56
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 914              		.loc 1 2280 0
 915 0006 064A     		ldr	r2, .L58
 916 0008 0C23     		movs	r3, #12
 917 000a 03FB0023 		mla	r3, r3, r0, r2
 918 000e 0022     		movs	r2, #0
 919 0010 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 920              		.loc 1 2283 0
 921 0012 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 922 0014 034B     		ldr	r3, .L58+4
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 58


 923 0016 D2B2     		uxtb	r2, r2
 924 0018 0001     		lsls	r0, r0, #4
 925              	.LVL60:
 926 001a 1A54     		strb	r2, [r3, r0]
 927              	.L56:
 928 001c 7047     		bx	lr
 929              	.L59:
 930 001e 00BF     		.align	2
 931              	.L58:
 932 0020 00000000 		.word	USBUART_EP
 933 0024 FE5F0040 		.word	1073766398
 934              		.cfi_endproc
 935              	.LFE13:
 936              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 937              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 938              		.align	1
 939              		.global	USBUART_ReadOutEP
 940              		.thumb
 941              		.thumb_func
 942              		.type	USBUART_ReadOutEP, %function
 943              	USBUART_ReadOutEP:
 944              	.LFB12:
1655:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 945              		.loc 1 1655 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              	.LVL61:
 950 0000 38B5     		push	{r3, r4, r5, lr}
 951              		.cfi_def_cfa_offset 16
 952              		.cfi_offset 3, -16
 953              		.cfi_offset 4, -12
 954              		.cfi_offset 5, -8
 955              		.cfi_offset 14, -4
1655:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 956              		.loc 1 1655 0
 957 0002 0546     		mov	r5, r0
 958 0004 1446     		mov	r4, r2
1656:Generated_Source\PSoC5/USBUART.c ****     {
 959              		.loc 1 1656 0
 960 0006 D1B1     		cbz	r1, .L65
1656:Generated_Source\PSoC5/USBUART.c ****     {
 961              		.loc 1 1656 0 is_stmt 0 discriminator 1
 962 0008 431E     		subs	r3, r0, #1
 963 000a 072B     		cmp	r3, #7
 964 000c 19D8     		bhi	.L66
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 965              		.loc 1 1660 0 is_stmt 1
 966 000e FFF7FEFF 		bl	USBUART_GetEPCount
 967              	.LVL62:
 968 0012 A042     		cmp	r0, r4
 969 0014 03D2     		bcs	.L62
1660:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
 970              		.loc 1 1660 0 is_stmt 0 discriminator 1
 971 0016 2846     		mov	r0, r5
 972 0018 FFF7FEFF 		bl	USBUART_GetEPCount
 973              	.LVL63:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 59


 974 001c 0446     		mov	r4, r0
 975              	.L62:
 976              	.LVL64:
 977              	.LBB7:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 978              		.loc 1 1667 0 is_stmt 1 discriminator 4
 979 001e 0A46     		mov	r2, r1
1669:Generated_Source\PSoC5/USBUART.c ****             }
 980              		.loc 1 1669 0 discriminator 4
 981 0020 0948     		ldr	r0, .L68
 982 0022 2B01     		lsls	r3, r5, #4
 983 0024 1844     		add	r0, r0, r3
 984              	.LVL65:
 985              	.L63:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 986              		.loc 1 1667 0 discriminator 1
 987 0026 531A     		subs	r3, r2, r1
 988 0028 9BB2     		uxth	r3, r3
 989 002a 9C42     		cmp	r4, r3
 990 002c 03D9     		bls	.L67
1669:Generated_Source\PSoC5/USBUART.c ****             }
 991              		.loc 1 1669 0 discriminator 3
 992 002e 037A     		ldrb	r3, [r0, #8]	@ zero_extendqisi2
 993 0030 02F8013B 		strb	r3, [r2], #1
 994              	.LVL66:
 995 0034 F7E7     		b	.L63
 996              	.L67:
 997              	.LBE7:
1674:Generated_Source\PSoC5/USBUART.c ****     #else
 998              		.loc 1 1674 0
 999 0036 2846     		mov	r0, r5
 1000 0038 FFF7FEFF 		bl	USBUART_EnableOutEP
 1001              	.LVL67:
 1002 003c 02E0     		b	.L61
 1003              	.LVL68:
 1004              	.L65:
1820:Generated_Source\PSoC5/USBUART.c ****     }
 1005              		.loc 1 1820 0
 1006 003e 0C46     		mov	r4, r1
 1007 0040 00E0     		b	.L61
 1008              	.L66:
 1009 0042 0024     		movs	r4, #0
 1010              	.LVL69:
 1011              	.L61:
1824:Generated_Source\PSoC5/USBUART.c **** 
 1012              		.loc 1 1824 0
 1013 0044 2046     		mov	r0, r4
 1014 0046 38BD     		pop	{r3, r4, r5, pc}
 1015              	.LVL70:
 1016              	.L69:
 1017              		.align	2
 1018              	.L68:
 1019 0048 70600040 		.word	1073766512
 1020              		.cfi_endproc
 1021              	.LFE12:
 1022              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1023              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 60


 1024              		.align	1
 1025              		.global	USBUART_DisableOutEP
 1026              		.thumb
 1027              		.thumb_func
 1028              		.type	USBUART_DisableOutEP, %function
 1029              	USBUART_DisableOutEP:
 1030              	.LFB14:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USBUART.c **** {
 1031              		.loc 1 2301 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 0
 1034              		@ frame_needed = 0, uses_anonymous_args = 0
 1035              		@ link register save eliminated.
 1036              	.LVL71:
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1037              		.loc 1 2302 0
 1038 0000 431E     		subs	r3, r0, #1
 1039 0002 072B     		cmp	r3, #7
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1040              		.loc 1 2305 0
 1041 0004 9FBF     		itttt	ls
 1042 0006 024B     		ldrls	r3, .L72
 1043 0008 0001     		lslls	r0, r0, #4
 1044              	.LVL72:
 1045 000a 0822     		movls	r2, #8
 1046 000c 1A54     		strbls	r2, [r3, r0]
 1047 000e 7047     		bx	lr
 1048              	.L73:
 1049              		.align	2
 1050              	.L72:
 1051 0010 FE5F0040 		.word	1073766398
 1052              		.cfi_endproc
 1053              	.LFE14:
 1054              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1055              		.section	.text.USBUART_Force,"ax",%progbits
 1056              		.align	1
 1057              		.global	USBUART_Force
 1058              		.thumb
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 61


 1059              		.thumb_func
 1060              		.type	USBUART_Force, %function
 1061              	USBUART_Force:
 1062              	.LFB15:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1063              		.loc 1 2331 0
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 0, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068              	.LVL73:
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1069              		.loc 1 2335 0
 1070 0000 014B     		ldr	r3, .L75
 1071 0002 1870     		strb	r0, [r3]
 1072 0004 7047     		bx	lr
 1073              	.L76:
 1074 0006 00BF     		.align	2
 1075              	.L75:
 1076 0008 10600040 		.word	1073766416
 1077              		.cfi_endproc
 1078              	.LFE15:
 1079              		.size	USBUART_Force, .-USBUART_Force
 1080              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1081              		.align	1
 1082              		.global	USBUART_GetEPAckState
 1083              		.thumb
 1084              		.thumb_func
 1085              		.type	USBUART_GetEPAckState, %function
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 62


 1086              	USBUART_GetEPAckState:
 1087              	.LFB16:
2336:Generated_Source\PSoC5/USBUART.c **** }
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1088              		.loc 1 2356 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 0, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
 1093              	.LVL74:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1094              		.loc 1 2359 0
 1095 0000 431E     		subs	r3, r0, #1
 1096 0002 072B     		cmp	r3, #7
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1097              		.loc 1 2361 0
 1098 0004 9FBF     		itttt	ls
 1099 0006 044B     		ldrls	r3, .L80
 1100 0008 0001     		lslls	r0, r0, #4
 1101              	.LVL75:
 1102 000a 185C     		ldrbls	r0, [r3, r0]	@ zero_extendqisi2
 1103 000c 00F01000 		andls	r0, r0, #16
 1104 0010 94BF     		ite	ls
 1105 0012 C0B2     		uxtbls	r0, r0
 1106              	.LVL76:
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1107              		.loc 1 2357 0
 1108 0014 0020     		movhi	r0, #0
 1109              	.LVL77:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
2365:Generated_Source\PSoC5/USBUART.c **** }
 1110              		.loc 1 2365 0
 1111 0016 7047     		bx	lr
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 63


 1112              	.L81:
 1113              		.align	2
 1114              	.L80:
 1115 0018 FE5F0040 		.word	1073766398
 1116              		.cfi_endproc
 1117              	.LFE16:
 1118              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1119              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1120              		.align	1
 1121              		.global	USBUART_SetPowerStatus
 1122              		.thumb
 1123              		.thumb_func
 1124              		.type	USBUART_SetPowerStatus, %function
 1125              	USBUART_SetPowerStatus:
 1126              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1127              		.loc 1 2397 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              		@ link register save eliminated.
 1132              	.LVL78:
 1133 0000 044B     		ldr	r3, .L86
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 64


 1134              		.loc 1 2400 0
 1135 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1136              		.loc 1 2398 0
 1137 0004 10B1     		cbz	r0, .L83
 1138              		.loc 1 2400 0
 1139 0006 42F00102 		orr	r2, r2, #1
 1140 000a 01E0     		b	.L85
 1141              	.L83:
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
 1142              		.loc 1 2404 0
 1143 000c 02F0FE02 		and	r2, r2, #254
 1144              	.L85:
 1145 0010 1A70     		strb	r2, [r3]
 1146 0012 7047     		bx	lr
 1147              	.L87:
 1148              		.align	2
 1149              	.L86:
 1150 0014 00000000 		.word	USBUART_deviceStatus
 1151              		.cfi_endproc
 1152              	.LFE17:
 1153              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1154              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1155              		.align	1
 1156              		.global	USBUART_RWUEnabled
 1157              		.thumb
 1158              		.thumb_func
 1159              		.type	USBUART_RWUEnabled, %function
 1160              	USBUART_RWUEnabled:
 1161              	.LFB18:
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 65


2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1162              		.loc 1 2454 0
 1163              		.cfi_startproc
 1164              		@ args = 0, pretend = 0, frame = 0
 1165              		@ frame_needed = 0, uses_anonymous_args = 0
 1166              		@ link register save eliminated.
 1167              	.LVL79:
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1168              		.loc 1 2457 0
 1169 0000 024B     		ldr	r3, .L89
 1170 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1171              	.LVL80:
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
2463:Generated_Source\PSoC5/USBUART.c **** }
 1172              		.loc 1 2463 0
 1173 0004 C0F34000 		ubfx	r0, r0, #1, #1
 1174              	.LVL81:
 1175 0008 7047     		bx	lr
 1176              	.L90:
 1177 000a 00BF     		.align	2
 1178              	.L89:
 1179 000c 00000000 		.word	USBUART_deviceStatus
 1180              		.cfi_endproc
 1181              	.LFE18:
 1182              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1183              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 66


 1184              		.align	1
 1185              		.global	USBUART_GetDeviceAddress
 1186              		.thumb
 1187              		.thumb_func
 1188              		.type	USBUART_GetDeviceAddress, %function
 1189              	USBUART_GetDeviceAddress:
 1190              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
 1191              		.loc 1 2478 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              		@ link register save eliminated.
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1196              		.loc 1 2479 0
 1197 0000 024B     		ldr	r3, .L92
 1198 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
2480:Generated_Source\PSoC5/USBUART.c **** }
 1199              		.loc 1 2480 0
 1200 0004 00F07F00 		and	r0, r0, #127
 1201 0008 7047     		bx	lr
 1202              	.L93:
 1203 000a 00BF     		.align	2
 1204              	.L92:
 1205 000c 08600040 		.word	1073766408
 1206              		.cfi_endproc
 1207              	.LFE19:
 1208              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1209              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1210              		.align	1
 1211              		.global	USBUART_EnableSofInt
 1212              		.thumb
 1213              		.thumb_func
 1214              		.type	USBUART_EnableSofInt, %function
 1215              	USBUART_EnableSofInt:
 1216              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 67


2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1217              		.loc 1 2492 0
 1218              		.cfi_startproc
 1219              		@ args = 0, pretend = 0, frame = 0
 1220              		@ frame_needed = 0, uses_anonymous_args = 0
 1221              		@ link register save eliminated.
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1222              		.loc 1 2499 0
 1223 0000 024B     		ldr	r3, .L95
 1224 0002 4FF40012 		mov	r2, #2097152
 1225 0006 1A60     		str	r2, [r3]
 1226 0008 7047     		bx	lr
 1227              	.L96:
 1228 000a 00BF     		.align	2
 1229              	.L95:
 1230 000c 00E100E0 		.word	-536813312
 1231              		.cfi_endproc
 1232              	.LFE20:
 1233              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1234              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1235              		.align	1
 1236              		.global	USBUART_DisableSofInt
 1237              		.thumb
 1238              		.thumb_func
 1239              		.type	USBUART_DisableSofInt, %function
 1240              	USBUART_DisableSofInt:
 1241              	.LFB21:
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1242              		.loc 1 2514 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 0
 1245              		@ frame_needed = 0, uses_anonymous_args = 0
 1246              		@ link register save eliminated.
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 68


2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1247              		.loc 1 2521 0
 1248 0000 024B     		ldr	r3, .L98
 1249 0002 4FF40012 		mov	r2, #2097152
 1250 0006 1A60     		str	r2, [r3]
 1251 0008 7047     		bx	lr
 1252              	.L99:
 1253 000a 00BF     		.align	2
 1254              	.L98:
 1255 000c 80E100E0 		.word	-536813184
 1256              		.cfi_endproc
 1257              	.LFE21:
 1258              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1259              		.global	USBUART_initVar
 1260              		.bss
 1261              		.set	.LANCHOR0,. + 0
 1262              		.type	USBUART_initVar, %object
 1263              		.size	USBUART_initVar, 1
 1264              	USBUART_initVar:
 1265 0000 00       		.space	1
 1266              		.text
 1267              	.Letext0:
 1268              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1269              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1270              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1271              		.file 5 "Generated_Source\\PSoC5\\CyLib.h"
 1272              		.file 6 "Generated_Source\\PSoC5\\USBUART_Dp.h"
 1273              		.section	.debug_info,"",%progbits
 1274              	.Ldebug_info0:
 1275 0000 BD090000 		.4byte	0x9bd
 1276 0004 0400     		.2byte	0x4
 1277 0006 00000000 		.4byte	.Ldebug_abbrev0
 1278 000a 04       		.byte	0x4
 1279 000b 01       		.uleb128 0x1
 1280 000c 91030000 		.4byte	.LASF97
 1281 0010 0C       		.byte	0xc
 1282 0011 71020000 		.4byte	.LASF98
 1283 0015 53000000 		.4byte	.LASF99
 1284 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1285 001d 00000000 		.4byte	0
 1286 0021 00000000 		.4byte	.Ldebug_line0
 1287 0025 02       		.uleb128 0x2
 1288 0026 01       		.byte	0x1
 1289 0027 06       		.byte	0x6
 1290 0028 1B030000 		.4byte	.LASF0
 1291 002c 02       		.uleb128 0x2
 1292 002d 01       		.byte	0x1
 1293 002e 08       		.byte	0x8
 1294 002f FB020000 		.4byte	.LASF1
 1295 0033 02       		.uleb128 0x2
 1296 0034 02       		.byte	0x2
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 69


 1297 0035 05       		.byte	0x5
 1298 0036 AE000000 		.4byte	.LASF2
 1299 003a 02       		.uleb128 0x2
 1300 003b 02       		.byte	0x2
 1301 003c 07       		.byte	0x7
 1302 003d 3C040000 		.4byte	.LASF3
 1303 0041 02       		.uleb128 0x2
 1304 0042 04       		.byte	0x4
 1305 0043 05       		.byte	0x5
 1306 0044 74040000 		.4byte	.LASF4
 1307 0048 02       		.uleb128 0x2
 1308 0049 04       		.byte	0x4
 1309 004a 07       		.byte	0x7
 1310 004b DF040000 		.4byte	.LASF5
 1311 004f 02       		.uleb128 0x2
 1312 0050 08       		.byte	0x8
 1313 0051 05       		.byte	0x5
 1314 0052 3A020000 		.4byte	.LASF6
 1315 0056 02       		.uleb128 0x2
 1316 0057 08       		.byte	0x8
 1317 0058 07       		.byte	0x7
 1318 0059 3F030000 		.4byte	.LASF7
 1319 005d 03       		.uleb128 0x3
 1320 005e 04       		.byte	0x4
 1321 005f 05       		.byte	0x5
 1322 0060 696E7400 		.ascii	"int\000"
 1323 0064 02       		.uleb128 0x2
 1324 0065 04       		.byte	0x4
 1325 0066 07       		.byte	0x7
 1326 0067 6C030000 		.4byte	.LASF8
 1327 006b 04       		.uleb128 0x4
 1328 006c B5040000 		.4byte	.LASF9
 1329 0070 02       		.byte	0x2
 1330 0071 E901     		.2byte	0x1e9
 1331 0073 2C000000 		.4byte	0x2c
 1332 0077 04       		.uleb128 0x4
 1333 0078 68010000 		.4byte	.LASF10
 1334 007c 02       		.byte	0x2
 1335 007d EA01     		.2byte	0x1ea
 1336 007f 3A000000 		.4byte	0x3a
 1337 0083 04       		.uleb128 0x4
 1338 0084 D3040000 		.4byte	.LASF11
 1339 0088 02       		.byte	0x2
 1340 0089 EB01     		.2byte	0x1eb
 1341 008b 48000000 		.4byte	0x48
 1342 008f 02       		.uleb128 0x2
 1343 0090 04       		.byte	0x4
 1344 0091 04       		.byte	0x4
 1345 0092 F1010000 		.4byte	.LASF12
 1346 0096 02       		.uleb128 0x2
 1347 0097 08       		.byte	0x8
 1348 0098 04       		.byte	0x4
 1349 0099 F1040000 		.4byte	.LASF13
 1350 009d 02       		.uleb128 0x2
 1351 009e 01       		.byte	0x1
 1352 009f 08       		.byte	0x8
 1353 00a0 6F040000 		.4byte	.LASF14
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 70


 1354 00a4 04       		.uleb128 0x4
 1355 00a5 DA040000 		.4byte	.LASF15
 1356 00a9 02       		.byte	0x2
 1357 00aa 9302     		.2byte	0x293
 1358 00ac B0000000 		.4byte	0xb0
 1359 00b0 05       		.uleb128 0x5
 1360 00b1 6B000000 		.4byte	0x6b
 1361 00b5 04       		.uleb128 0x4
 1362 00b6 1F040000 		.4byte	.LASF16
 1363 00ba 02       		.byte	0x2
 1364 00bb 9502     		.2byte	0x295
 1365 00bd C1000000 		.4byte	0xc1
 1366 00c1 05       		.uleb128 0x5
 1367 00c2 83000000 		.4byte	0x83
 1368 00c6 02       		.uleb128 0x2
 1369 00c7 08       		.byte	0x8
 1370 00c8 04       		.byte	0x4
 1371 00c9 F1000000 		.4byte	.LASF17
 1372 00cd 02       		.uleb128 0x2
 1373 00ce 04       		.byte	0x4
 1374 00cf 07       		.byte	0x7
 1375 00d0 B8000000 		.4byte	.LASF18
 1376 00d4 06       		.uleb128 0x6
 1377 00d5 0C       		.byte	0xc
 1378 00d6 03       		.byte	0x3
 1379 00d7 8D       		.byte	0x8d
 1380 00d8 49010000 		.4byte	0x149
 1381 00dc 07       		.uleb128 0x7
 1382 00dd 57040000 		.4byte	.LASF19
 1383 00e1 03       		.byte	0x3
 1384 00e2 8F       		.byte	0x8f
 1385 00e3 6B000000 		.4byte	0x6b
 1386 00e7 00       		.byte	0
 1387 00e8 07       		.uleb128 0x7
 1388 00e9 2D050000 		.4byte	.LASF20
 1389 00ed 03       		.byte	0x3
 1390 00ee 90       		.byte	0x90
 1391 00ef 6B000000 		.4byte	0x6b
 1392 00f3 01       		.byte	0x1
 1393 00f4 07       		.uleb128 0x7
 1394 00f5 C9040000 		.4byte	.LASF21
 1395 00f9 03       		.byte	0x3
 1396 00fa 91       		.byte	0x91
 1397 00fb 6B000000 		.4byte	0x6b
 1398 00ff 02       		.byte	0x2
 1399 0100 07       		.uleb128 0x7
 1400 0101 00000000 		.4byte	.LASF22
 1401 0105 03       		.byte	0x3
 1402 0106 92       		.byte	0x92
 1403 0107 6B000000 		.4byte	0x6b
 1404 010b 03       		.byte	0x3
 1405 010c 07       		.uleb128 0x7
 1406 010d A9040000 		.4byte	.LASF23
 1407 0111 03       		.byte	0x3
 1408 0112 93       		.byte	0x93
 1409 0113 6B000000 		.4byte	0x6b
 1410 0117 04       		.byte	0x4
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 71


 1411 0118 07       		.uleb128 0x7
 1412 0119 D8000000 		.4byte	.LASF24
 1413 011d 03       		.byte	0x3
 1414 011e 94       		.byte	0x94
 1415 011f 6B000000 		.4byte	0x6b
 1416 0123 05       		.byte	0x5
 1417 0124 07       		.uleb128 0x7
 1418 0125 E6020000 		.4byte	.LASF25
 1419 0129 03       		.byte	0x3
 1420 012a 95       		.byte	0x95
 1421 012b 77000000 		.4byte	0x77
 1422 012f 06       		.byte	0x6
 1423 0130 07       		.uleb128 0x7
 1424 0131 52050000 		.4byte	.LASF26
 1425 0135 03       		.byte	0x3
 1426 0136 96       		.byte	0x96
 1427 0137 77000000 		.4byte	0x77
 1428 013b 08       		.byte	0x8
 1429 013c 07       		.uleb128 0x7
 1430 013d 10060000 		.4byte	.LASF27
 1431 0141 03       		.byte	0x3
 1432 0142 97       		.byte	0x97
 1433 0143 6B000000 		.4byte	0x6b
 1434 0147 0A       		.byte	0xa
 1435 0148 00       		.byte	0
 1436 0149 08       		.uleb128 0x8
 1437 014a 73050000 		.4byte	.LASF28
 1438 014e 03       		.byte	0x3
 1439 014f 98       		.byte	0x98
 1440 0150 D4000000 		.4byte	0xd4
 1441 0154 06       		.uleb128 0x6
 1442 0155 10       		.byte	0x10
 1443 0156 03       		.byte	0x3
 1444 0157 D4       		.byte	0xd4
 1445 0158 8D010000 		.4byte	0x18d
 1446 015c 07       		.uleb128 0x7
 1447 015d AE040000 		.4byte	.LASF29
 1448 0161 03       		.byte	0x3
 1449 0162 D6       		.byte	0xd6
 1450 0163 6B000000 		.4byte	0x6b
 1451 0167 00       		.byte	0
 1452 0168 07       		.uleb128 0x7
 1453 0169 C2040000 		.4byte	.LASF30
 1454 016d 03       		.byte	0x3
 1455 016e D7       		.byte	0xd7
 1456 016f 6B000000 		.4byte	0x6b
 1457 0173 01       		.byte	0x1
 1458 0174 07       		.uleb128 0x7
 1459 0175 65020000 		.4byte	.LASF31
 1460 0179 03       		.byte	0x3
 1461 017a D8       		.byte	0xd8
 1462 017b 6B000000 		.4byte	0x6b
 1463 017f 02       		.byte	0x2
 1464 0180 09       		.uleb128 0x9
 1465 0181 67617000 		.ascii	"gap\000"
 1466 0185 03       		.byte	0x3
 1467 0186 D9       		.byte	0xd9
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 72


 1468 0187 8D010000 		.4byte	0x18d
 1469 018b 03       		.byte	0x3
 1470 018c 00       		.byte	0
 1471 018d 0A       		.uleb128 0xa
 1472 018e 6B000000 		.4byte	0x6b
 1473 0192 9D010000 		.4byte	0x19d
 1474 0196 0B       		.uleb128 0xb
 1475 0197 CD000000 		.4byte	0xcd
 1476 019b 0C       		.byte	0xc
 1477 019c 00       		.byte	0
 1478 019d 08       		.uleb128 0x8
 1479 019e 8B010000 		.4byte	.LASF32
 1480 01a2 03       		.byte	0x3
 1481 01a3 DA       		.byte	0xda
 1482 01a4 54010000 		.4byte	0x154
 1483 01a8 06       		.uleb128 0x6
 1484 01a9 10       		.byte	0x10
 1485 01aa 03       		.byte	0x3
 1486 01ab E6       		.byte	0xe6
 1487 01ac 29020000 		.4byte	0x229
 1488 01b0 07       		.uleb128 0x7
 1489 01b1 6B020000 		.4byte	.LASF33
 1490 01b5 03       		.byte	0x3
 1491 01b6 E8       		.byte	0xe8
 1492 01b7 6B000000 		.4byte	0x6b
 1493 01bb 00       		.byte	0
 1494 01bc 07       		.uleb128 0x7
 1495 01bd A6000000 		.4byte	.LASF34
 1496 01c1 03       		.byte	0x3
 1497 01c2 E9       		.byte	0xe9
 1498 01c3 6B000000 		.4byte	0x6b
 1499 01c7 01       		.byte	0x1
 1500 01c8 07       		.uleb128 0x7
 1501 01c9 09030000 		.4byte	.LASF35
 1502 01cd 03       		.byte	0x3
 1503 01ce EA       		.byte	0xea
 1504 01cf 6B000000 		.4byte	0x6b
 1505 01d3 02       		.byte	0x2
 1506 01d4 07       		.uleb128 0x7
 1507 01d5 07060000 		.4byte	.LASF36
 1508 01d9 03       		.byte	0x3
 1509 01da EB       		.byte	0xeb
 1510 01db 6B000000 		.4byte	0x6b
 1511 01df 03       		.byte	0x3
 1512 01e0 07       		.uleb128 0x7
 1513 01e1 7E030000 		.4byte	.LASF37
 1514 01e5 03       		.byte	0x3
 1515 01e6 EC       		.byte	0xec
 1516 01e7 6B000000 		.4byte	0x6b
 1517 01eb 04       		.byte	0x4
 1518 01ec 07       		.uleb128 0x7
 1519 01ed F1050000 		.4byte	.LASF38
 1520 01f1 03       		.byte	0x3
 1521 01f2 ED       		.byte	0xed
 1522 01f3 6B000000 		.4byte	0x6b
 1523 01f7 05       		.byte	0x5
 1524 01f8 07       		.uleb128 0x7
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 73


 1525 01f9 6F010000 		.4byte	.LASF39
 1526 01fd 03       		.byte	0x3
 1527 01fe EE       		.byte	0xee
 1528 01ff 6B000000 		.4byte	0x6b
 1529 0203 06       		.byte	0x6
 1530 0204 07       		.uleb128 0x7
 1531 0205 4F040000 		.4byte	.LASF40
 1532 0209 03       		.byte	0x3
 1533 020a EF       		.byte	0xef
 1534 020b 6B000000 		.4byte	0x6b
 1535 020f 07       		.byte	0x7
 1536 0210 07       		.uleb128 0x7
 1537 0211 79030000 		.4byte	.LASF41
 1538 0215 03       		.byte	0x3
 1539 0216 F0       		.byte	0xf0
 1540 0217 6B000000 		.4byte	0x6b
 1541 021b 08       		.byte	0x8
 1542 021c 09       		.uleb128 0x9
 1543 021d 67617000 		.ascii	"gap\000"
 1544 0221 03       		.byte	0x3
 1545 0222 F1       		.byte	0xf1
 1546 0223 29020000 		.4byte	0x229
 1547 0227 09       		.byte	0x9
 1548 0228 00       		.byte	0
 1549 0229 0A       		.uleb128 0xa
 1550 022a 6B000000 		.4byte	0x6b
 1551 022e 39020000 		.4byte	0x239
 1552 0232 0B       		.uleb128 0xb
 1553 0233 CD000000 		.4byte	0xcd
 1554 0237 06       		.byte	0x6
 1555 0238 00       		.byte	0
 1556 0239 08       		.uleb128 0x8
 1557 023a 56030000 		.4byte	.LASF42
 1558 023e 03       		.byte	0x3
 1559 023f F2       		.byte	0xf2
 1560 0240 A8010000 		.4byte	0x1a8
 1561 0244 0C       		.uleb128 0xc
 1562 0245 90       		.byte	0x90
 1563 0246 03       		.byte	0x3
 1564 0247 0E01     		.2byte	0x10e
 1565 0249 5B020000 		.4byte	0x25b
 1566 024d 0D       		.uleb128 0xd
 1567 024e B2010000 		.4byte	.LASF43
 1568 0252 03       		.byte	0x3
 1569 0253 1001     		.2byte	0x110
 1570 0255 5B020000 		.4byte	0x25b
 1571 0259 00       		.byte	0
 1572 025a 00       		.byte	0
 1573 025b 0A       		.uleb128 0xa
 1574 025c 9D010000 		.4byte	0x19d
 1575 0260 6B020000 		.4byte	0x26b
 1576 0264 0B       		.uleb128 0xb
 1577 0265 CD000000 		.4byte	0xcd
 1578 0269 08       		.byte	0x8
 1579 026a 00       		.byte	0
 1580 026b 04       		.uleb128 0x4
 1581 026c 15010000 		.4byte	.LASF44
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 74


 1582 0270 03       		.byte	0x3
 1583 0271 1101     		.2byte	0x111
 1584 0273 44020000 		.4byte	0x244
 1585 0277 0C       		.uleb128 0xc
 1586 0278 90       		.byte	0x90
 1587 0279 03       		.byte	0x3
 1588 027a 1401     		.2byte	0x114
 1589 027c 8E020000 		.4byte	0x28e
 1590 0280 0D       		.uleb128 0xd
 1591 0281 DF000000 		.4byte	.LASF45
 1592 0285 03       		.byte	0x3
 1593 0286 1601     		.2byte	0x116
 1594 0288 8E020000 		.4byte	0x28e
 1595 028c 00       		.byte	0
 1596 028d 00       		.byte	0
 1597 028e 0A       		.uleb128 0xa
 1598 028f 39020000 		.4byte	0x239
 1599 0293 9E020000 		.4byte	0x29e
 1600 0297 0B       		.uleb128 0xb
 1601 0298 CD000000 		.4byte	0xcd
 1602 029c 08       		.byte	0x8
 1603 029d 00       		.byte	0
 1604 029e 04       		.uleb128 0x4
 1605 029f C1000000 		.4byte	.LASF46
 1606 02a3 03       		.byte	0x3
 1607 02a4 1701     		.2byte	0x117
 1608 02a6 77020000 		.4byte	0x277
 1609 02aa 0E       		.uleb128 0xe
 1610 02ab AF050000 		.4byte	.LASF100
 1611 02af 01       		.byte	0x1
 1612 02b0 D603     		.2byte	0x3d6
 1613 02b2 77000000 		.4byte	0x77
 1614 02b6 01       		.byte	0x1
 1615 02b7 D4020000 		.4byte	0x2d4
 1616 02bb 0F       		.uleb128 0xf
 1617 02bc 90040000 		.4byte	.LASF60
 1618 02c0 01       		.byte	0x1
 1619 02c1 D603     		.2byte	0x3d6
 1620 02c3 6B000000 		.4byte	0x6b
 1621 02c7 10       		.uleb128 0x10
 1622 02c8 19000000 		.4byte	.LASF101
 1623 02cc 01       		.byte	0x1
 1624 02cd D803     		.2byte	0x3d8
 1625 02cf 77000000 		.4byte	0x77
 1626 02d3 00       		.byte	0
 1627 02d4 11       		.uleb128 0x11
 1628 02d5 0E030000 		.4byte	.LASF47
 1629 02d9 01       		.byte	0x1
 1630 02da D3       		.byte	0xd3
 1631 02db 00000000 		.4byte	.LFB1
 1632 02df 3C010000 		.4byte	.LFE1-.LFB1
 1633 02e3 01       		.uleb128 0x1
 1634 02e4 9C       		.byte	0x9c
 1635 02e5 8E040000 		.4byte	0x48e
 1636 02e9 12       		.uleb128 0x12
 1637 02ea 21060000 		.4byte	.LASF53
 1638 02ee 01       		.byte	0x1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 75


 1639 02ef FA       		.byte	0xfa
 1640 02f0 6B000000 		.4byte	0x6b
 1641 02f4 00000000 		.4byte	.LLST0
 1642 02f8 13       		.uleb128 0x13
 1643 02f9 06000000 		.4byte	.LVL0
 1644 02fd 73090000 		.4byte	0x973
 1645 0301 14       		.uleb128 0x14
 1646 0302 3C000000 		.4byte	.LVL2
 1647 0306 7E090000 		.4byte	0x97e
 1648 030a 14030000 		.4byte	0x314
 1649 030e 15       		.uleb128 0x15
 1650 030f 01       		.uleb128 0x1
 1651 0310 50       		.byte	0x50
 1652 0311 01       		.uleb128 0x1
 1653 0312 30       		.byte	0x30
 1654 0313 00       		.byte	0
 1655 0314 14       		.uleb128 0x14
 1656 0315 5A000000 		.4byte	.LVL3
 1657 0319 7E090000 		.4byte	0x97e
 1658 031d 28030000 		.4byte	0x328
 1659 0321 15       		.uleb128 0x15
 1660 0322 01       		.uleb128 0x1
 1661 0323 50       		.byte	0x50
 1662 0324 02       		.uleb128 0x2
 1663 0325 77       		.byte	0x77
 1664 0326 00       		.sleb128 0
 1665 0327 00       		.byte	0
 1666 0328 14       		.uleb128 0x14
 1667 0329 60000000 		.4byte	.LVL4
 1668 032d 7E090000 		.4byte	0x97e
 1669 0331 3C030000 		.4byte	0x33c
 1670 0335 15       		.uleb128 0x15
 1671 0336 01       		.uleb128 0x1
 1672 0337 50       		.byte	0x50
 1673 0338 02       		.uleb128 0x2
 1674 0339 08       		.byte	0x8
 1675 033a 28       		.byte	0x28
 1676 033b 00       		.byte	0
 1677 033c 14       		.uleb128 0x14
 1678 033d 7E000000 		.4byte	.LVL5
 1679 0341 7E090000 		.4byte	0x97e
 1680 0345 50030000 		.4byte	0x350
 1681 0349 15       		.uleb128 0x15
 1682 034a 01       		.uleb128 0x1
 1683 034b 50       		.byte	0x50
 1684 034c 02       		.uleb128 0x2
 1685 034d 76       		.byte	0x76
 1686 034e 00       		.sleb128 0
 1687 034f 00       		.byte	0
 1688 0350 14       		.uleb128 0x14
 1689 0351 94000000 		.4byte	.LVL6
 1690 0355 89090000 		.4byte	0x989
 1691 0359 64030000 		.4byte	0x364
 1692 035d 15       		.uleb128 0x15
 1693 035e 01       		.uleb128 0x1
 1694 035f 50       		.byte	0x50
 1695 0360 02       		.uleb128 0x2
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 76


 1696 0361 75       		.byte	0x75
 1697 0362 00       		.sleb128 0
 1698 0363 00       		.byte	0
 1699 0364 14       		.uleb128 0x14
 1700 0365 9C000000 		.4byte	.LVL7
 1701 0369 94090000 		.4byte	0x994
 1702 036d 7C030000 		.4byte	0x37c
 1703 0371 15       		.uleb128 0x15
 1704 0372 01       		.uleb128 0x1
 1705 0373 50       		.byte	0x50
 1706 0374 01       		.uleb128 0x1
 1707 0375 47       		.byte	0x47
 1708 0376 15       		.uleb128 0x15
 1709 0377 01       		.uleb128 0x1
 1710 0378 51       		.byte	0x51
 1711 0379 01       		.uleb128 0x1
 1712 037a 37       		.byte	0x37
 1713 037b 00       		.byte	0
 1714 037c 14       		.uleb128 0x14
 1715 037d A4000000 		.4byte	.LVL8
 1716 0381 9F090000 		.4byte	0x99f
 1717 0385 8F030000 		.4byte	0x38f
 1718 0389 15       		.uleb128 0x15
 1719 038a 01       		.uleb128 0x1
 1720 038b 50       		.byte	0x50
 1721 038c 01       		.uleb128 0x1
 1722 038d 47       		.byte	0x47
 1723 038e 00       		.byte	0
 1724 038f 14       		.uleb128 0x14
 1725 0390 AC000000 		.4byte	.LVL9
 1726 0394 94090000 		.4byte	0x994
 1727 0398 A7030000 		.4byte	0x3a7
 1728 039c 15       		.uleb128 0x15
 1729 039d 01       		.uleb128 0x1
 1730 039e 50       		.byte	0x50
 1731 039f 01       		.uleb128 0x1
 1732 03a0 48       		.byte	0x48
 1733 03a1 15       		.uleb128 0x15
 1734 03a2 01       		.uleb128 0x1
 1735 03a3 51       		.byte	0x51
 1736 03a4 01       		.uleb128 0x1
 1737 03a5 37       		.byte	0x37
 1738 03a6 00       		.byte	0
 1739 03a7 14       		.uleb128 0x14
 1740 03a8 B4000000 		.4byte	.LVL10
 1741 03ac 9F090000 		.4byte	0x99f
 1742 03b0 BA030000 		.4byte	0x3ba
 1743 03b4 15       		.uleb128 0x15
 1744 03b5 01       		.uleb128 0x1
 1745 03b6 50       		.byte	0x50
 1746 03b7 01       		.uleb128 0x1
 1747 03b8 48       		.byte	0x48
 1748 03b9 00       		.byte	0
 1749 03ba 14       		.uleb128 0x14
 1750 03bb BC000000 		.4byte	.LVL11
 1751 03bf 94090000 		.4byte	0x994
 1752 03c3 D2030000 		.4byte	0x3d2
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 77


 1753 03c7 15       		.uleb128 0x15
 1754 03c8 01       		.uleb128 0x1
 1755 03c9 50       		.byte	0x50
 1756 03ca 01       		.uleb128 0x1
 1757 03cb 45       		.byte	0x45
 1758 03cc 15       		.uleb128 0x15
 1759 03cd 01       		.uleb128 0x1
 1760 03ce 51       		.byte	0x51
 1761 03cf 01       		.uleb128 0x1
 1762 03d0 37       		.byte	0x37
 1763 03d1 00       		.byte	0
 1764 03d2 14       		.uleb128 0x14
 1765 03d3 C4000000 		.4byte	.LVL12
 1766 03d7 9F090000 		.4byte	0x99f
 1767 03db E5030000 		.4byte	0x3e5
 1768 03df 15       		.uleb128 0x15
 1769 03e0 01       		.uleb128 0x1
 1770 03e1 50       		.byte	0x50
 1771 03e2 01       		.uleb128 0x1
 1772 03e3 45       		.byte	0x45
 1773 03e4 00       		.byte	0
 1774 03e5 14       		.uleb128 0x14
 1775 03e6 CC000000 		.4byte	.LVL13
 1776 03ea 94090000 		.4byte	0x994
 1777 03ee FD030000 		.4byte	0x3fd
 1778 03f2 15       		.uleb128 0x15
 1779 03f3 01       		.uleb128 0x1
 1780 03f4 50       		.byte	0x50
 1781 03f5 01       		.uleb128 0x1
 1782 03f6 36       		.byte	0x36
 1783 03f7 15       		.uleb128 0x15
 1784 03f8 01       		.uleb128 0x1
 1785 03f9 51       		.byte	0x51
 1786 03fa 01       		.uleb128 0x1
 1787 03fb 37       		.byte	0x37
 1788 03fc 00       		.byte	0
 1789 03fd 14       		.uleb128 0x14
 1790 03fe D4000000 		.4byte	.LVL14
 1791 0402 9F090000 		.4byte	0x99f
 1792 0406 10040000 		.4byte	0x410
 1793 040a 15       		.uleb128 0x15
 1794 040b 01       		.uleb128 0x1
 1795 040c 50       		.byte	0x50
 1796 040d 01       		.uleb128 0x1
 1797 040e 36       		.byte	0x36
 1798 040f 00       		.byte	0
 1799 0410 14       		.uleb128 0x14
 1800 0411 DC000000 		.4byte	.LVL15
 1801 0415 94090000 		.4byte	0x994
 1802 0419 28040000 		.4byte	0x428
 1803 041d 15       		.uleb128 0x15
 1804 041e 01       		.uleb128 0x1
 1805 041f 50       		.byte	0x50
 1806 0420 01       		.uleb128 0x1
 1807 0421 37       		.byte	0x37
 1808 0422 15       		.uleb128 0x15
 1809 0423 01       		.uleb128 0x1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 78


 1810 0424 51       		.byte	0x51
 1811 0425 01       		.uleb128 0x1
 1812 0426 37       		.byte	0x37
 1813 0427 00       		.byte	0
 1814 0428 14       		.uleb128 0x14
 1815 0429 E4000000 		.4byte	.LVL16
 1816 042d 9F090000 		.4byte	0x99f
 1817 0431 3B040000 		.4byte	0x43b
 1818 0435 15       		.uleb128 0x15
 1819 0436 01       		.uleb128 0x1
 1820 0437 50       		.byte	0x50
 1821 0438 01       		.uleb128 0x1
 1822 0439 37       		.byte	0x37
 1823 043a 00       		.byte	0
 1824 043b 14       		.uleb128 0x14
 1825 043c EC000000 		.4byte	.LVL17
 1826 0440 94090000 		.4byte	0x994
 1827 0444 53040000 		.4byte	0x453
 1828 0448 15       		.uleb128 0x15
 1829 0449 01       		.uleb128 0x1
 1830 044a 50       		.byte	0x50
 1831 044b 01       		.uleb128 0x1
 1832 044c 38       		.byte	0x38
 1833 044d 15       		.uleb128 0x15
 1834 044e 01       		.uleb128 0x1
 1835 044f 51       		.byte	0x51
 1836 0450 01       		.uleb128 0x1
 1837 0451 37       		.byte	0x37
 1838 0452 00       		.byte	0
 1839 0453 14       		.uleb128 0x14
 1840 0454 F4000000 		.4byte	.LVL18
 1841 0458 9F090000 		.4byte	0x99f
 1842 045c 66040000 		.4byte	0x466
 1843 0460 15       		.uleb128 0x15
 1844 0461 01       		.uleb128 0x1
 1845 0462 50       		.byte	0x50
 1846 0463 01       		.uleb128 0x1
 1847 0464 38       		.byte	0x38
 1848 0465 00       		.byte	0
 1849 0466 14       		.uleb128 0x14
 1850 0467 FC000000 		.4byte	.LVL19
 1851 046b 94090000 		.4byte	0x994
 1852 046f 7E040000 		.4byte	0x47e
 1853 0473 15       		.uleb128 0x15
 1854 0474 01       		.uleb128 0x1
 1855 0475 50       		.byte	0x50
 1856 0476 01       		.uleb128 0x1
 1857 0477 3C       		.byte	0x3c
 1858 0478 15       		.uleb128 0x15
 1859 0479 01       		.uleb128 0x1
 1860 047a 51       		.byte	0x51
 1861 047b 01       		.uleb128 0x1
 1862 047c 37       		.byte	0x37
 1863 047d 00       		.byte	0
 1864 047e 16       		.uleb128 0x16
 1865 047f 08010000 		.4byte	.LVL21
 1866 0483 9F090000 		.4byte	0x99f
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 79


 1867 0487 15       		.uleb128 0x15
 1868 0488 01       		.uleb128 0x1
 1869 0489 50       		.byte	0x50
 1870 048a 01       		.uleb128 0x1
 1871 048b 3C       		.byte	0x3c
 1872 048c 00       		.byte	0
 1873 048d 00       		.byte	0
 1874 048e 17       		.uleb128 0x17
 1875 048f 5D050000 		.4byte	.LASF48
 1876 0493 01       		.byte	0x1
 1877 0494 CC01     		.2byte	0x1cc
 1878 0496 00000000 		.4byte	.LFB2
 1879 049a A4000000 		.4byte	.LFE2-.LFB2
 1880 049e 01       		.uleb128 0x1
 1881 049f 9C       		.byte	0x9c
 1882 04a0 D4040000 		.4byte	0x4d4
 1883 04a4 18       		.uleb128 0x18
 1884 04a5 EA010000 		.4byte	.LASF49
 1885 04a9 01       		.byte	0x1
 1886 04aa CC01     		.2byte	0x1cc
 1887 04ac 6B000000 		.4byte	0x6b
 1888 04b0 13000000 		.4byte	.LLST1
 1889 04b4 18       		.uleb128 0x18
 1890 04b5 10010000 		.4byte	.LASF50
 1891 04b9 01       		.byte	0x1
 1892 04ba CC01     		.2byte	0x1cc
 1893 04bc 6B000000 		.4byte	0x6b
 1894 04c0 34000000 		.4byte	.LLST2
 1895 04c4 19       		.uleb128 0x19
 1896 04c5 6C000000 		.4byte	.LVL24
 1897 04c9 AA090000 		.4byte	0x9aa
 1898 04cd 15       		.uleb128 0x15
 1899 04ce 01       		.uleb128 0x1
 1900 04cf 50       		.byte	0x50
 1901 04d0 01       		.uleb128 0x1
 1902 04d1 31       		.byte	0x31
 1903 04d2 00       		.byte	0
 1904 04d3 00       		.byte	0
 1905 04d4 11       		.uleb128 0x11
 1906 04d5 41010000 		.4byte	.LASF51
 1907 04d9 01       		.byte	0x1
 1908 04da BA       		.byte	0xba
 1909 04db 00000000 		.4byte	.LFB0
 1910 04df 24000000 		.4byte	.LFE0-.LFB0
 1911 04e3 01       		.uleb128 0x1
 1912 04e4 9C       		.byte	0x9c
 1913 04e5 1A050000 		.4byte	0x51a
 1914 04e9 1A       		.uleb128 0x1a
 1915 04ea EA010000 		.4byte	.LASF49
 1916 04ee 01       		.byte	0x1
 1917 04ef BA       		.byte	0xba
 1918 04f0 6B000000 		.4byte	0x6b
 1919 04f4 55000000 		.4byte	.LLST3
 1920 04f8 1A       		.uleb128 0x1a
 1921 04f9 10010000 		.4byte	.LASF50
 1922 04fd 01       		.byte	0x1
 1923 04fe BA       		.byte	0xba
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 80


 1924 04ff 6B000000 		.4byte	0x6b
 1925 0503 76000000 		.4byte	.LLST4
 1926 0507 13       		.uleb128 0x13
 1927 0508 10000000 		.4byte	.LVL26
 1928 050c D4020000 		.4byte	0x2d4
 1929 0510 1B       		.uleb128 0x1b
 1930 0511 20000000 		.4byte	.LVL27
 1931 0515 8E040000 		.4byte	0x48e
 1932 0519 00       		.byte	0
 1933 051a 1C       		.uleb128 0x1c
 1934 051b 27030000 		.4byte	.LASF76
 1935 051f 01       		.byte	0x1
 1936 0520 9F02     		.2byte	0x29f
 1937 0522 00000000 		.4byte	.LFB3
 1938 0526 4C000000 		.4byte	.LFE3-.LFB3
 1939 052a 01       		.uleb128 0x1
 1940 052b 9C       		.byte	0x9c
 1941 052c 17       		.uleb128 0x17
 1942 052d 52060000 		.4byte	.LASF52
 1943 0531 01       		.byte	0x1
 1944 0532 D902     		.2byte	0x2d9
 1945 0534 00000000 		.4byte	.LFB4
 1946 0538 B8000000 		.4byte	.LFE4-.LFB4
 1947 053c 01       		.uleb128 0x1
 1948 053d 9C       		.byte	0x9c
 1949 053e 6E050000 		.4byte	0x56e
 1950 0542 1D       		.uleb128 0x1d
 1951 0543 21060000 		.4byte	.LASF53
 1952 0547 01       		.byte	0x1
 1953 0548 DB02     		.2byte	0x2db
 1954 054a 6B000000 		.4byte	0x6b
 1955 054e 97000000 		.4byte	.LLST5
 1956 0552 13       		.uleb128 0x13
 1957 0553 06000000 		.4byte	.LVL28
 1958 0557 73090000 		.4byte	0x973
 1959 055b 13       		.uleb128 0x13
 1960 055c 44000000 		.4byte	.LVL29
 1961 0560 89090000 		.4byte	0x989
 1962 0564 13       		.uleb128 0x13
 1963 0565 6A000000 		.4byte	.LVL30
 1964 0569 B5090000 		.4byte	0x9b5
 1965 056d 00       		.byte	0
 1966 056e 1E       		.uleb128 0x1e
 1967 056f 99050000 		.4byte	.LASF55
 1968 0573 01       		.byte	0x1
 1969 0574 5103     		.2byte	0x351
 1970 0576 6B000000 		.4byte	0x6b
 1971 057a 00000000 		.4byte	.LFB5
 1972 057e 18000000 		.4byte	.LFE5-.LFB5
 1973 0582 01       		.uleb128 0x1
 1974 0583 9C       		.byte	0x9c
 1975 0584 99050000 		.4byte	0x599
 1976 0588 1D       		.uleb128 0x1d
 1977 0589 BB040000 		.4byte	.LASF54
 1978 058d 01       		.byte	0x1
 1979 058e 5303     		.2byte	0x353
 1980 0590 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 81


 1981 0594 AA000000 		.4byte	.LLST6
 1982 0598 00       		.byte	0
 1983 0599 1F       		.uleb128 0x1f
 1984 059a F7010000 		.4byte	.LASF74
 1985 059e 01       		.byte	0x1
 1986 059f 6803     		.2byte	0x368
 1987 05a1 6B000000 		.4byte	0x6b
 1988 05a5 00000000 		.4byte	.LFB6
 1989 05a9 0C000000 		.4byte	.LFE6-.LFB6
 1990 05ad 01       		.uleb128 0x1
 1991 05ae 9C       		.byte	0x9c
 1992 05af 1E       		.uleb128 0x1e
 1993 05b0 1E000000 		.4byte	.LASF56
 1994 05b4 01       		.byte	0x1
 1995 05b5 8203     		.2byte	0x382
 1996 05b7 6B000000 		.4byte	0x6b
 1997 05bb 00000000 		.4byte	.LFB7
 1998 05bf 18000000 		.4byte	.LFE7-.LFB7
 1999 05c3 01       		.uleb128 0x1
 2000 05c4 9C       		.byte	0x9c
 2001 05c5 DA050000 		.4byte	0x5da
 2002 05c9 20       		.uleb128 0x20
 2003 05ca 72657300 		.ascii	"res\000"
 2004 05ce 01       		.byte	0x1
 2005 05cf 8403     		.2byte	0x384
 2006 05d1 6B000000 		.4byte	0x6b
 2007 05d5 BD000000 		.4byte	.LLST7
 2008 05d9 00       		.byte	0
 2009 05da 1E       		.uleb128 0x1e
 2010 05db 11050000 		.4byte	.LASF57
 2011 05df 01       		.byte	0x1
 2012 05e0 9F03     		.2byte	0x39f
 2013 05e2 6B000000 		.4byte	0x6b
 2014 05e6 00000000 		.4byte	.LFB8
 2015 05ea 0C000000 		.4byte	.LFE8-.LFB8
 2016 05ee 01       		.uleb128 0x1
 2017 05ef 9C       		.byte	0x9c
 2018 05f0 05060000 		.4byte	0x605
 2019 05f4 18       		.uleb128 0x18
 2020 05f5 09000000 		.4byte	.LASF58
 2021 05f9 01       		.byte	0x1
 2022 05fa 9F03     		.2byte	0x39f
 2023 05fc 6B000000 		.4byte	0x6b
 2024 0600 DC000000 		.4byte	.LLST8
 2025 0604 00       		.byte	0
 2026 0605 1E       		.uleb128 0x1e
 2027 0606 7D040000 		.4byte	.LASF59
 2028 060a 01       		.byte	0x1
 2029 060b BF03     		.2byte	0x3bf
 2030 060d 6B000000 		.4byte	0x6b
 2031 0611 00000000 		.4byte	.LFB9
 2032 0615 10000000 		.4byte	.LFE9-.LFB9
 2033 0619 01       		.uleb128 0x1
 2034 061a 9C       		.byte	0x9c
 2035 061b 30060000 		.4byte	0x630
 2036 061f 18       		.uleb128 0x18
 2037 0620 90040000 		.4byte	.LASF60
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 82


 2038 0624 01       		.byte	0x1
 2039 0625 BF03     		.2byte	0x3bf
 2040 0627 6B000000 		.4byte	0x6b
 2041 062b FD000000 		.4byte	.LLST9
 2042 062f 00       		.byte	0
 2043 0630 21       		.uleb128 0x21
 2044 0631 AA020000 		.4byte	0x2aa
 2045 0635 00000000 		.4byte	.LFB10
 2046 0639 28000000 		.4byte	.LFE10-.LFB10
 2047 063d 01       		.uleb128 0x1
 2048 063e 9C       		.byte	0x9c
 2049 063f 7C060000 		.4byte	0x67c
 2050 0643 22       		.uleb128 0x22
 2051 0644 BB020000 		.4byte	0x2bb
 2052 0648 1E010000 		.4byte	.LLST10
 2053 064c 23       		.uleb128 0x23
 2054 064d C7020000 		.4byte	0x2c7
 2055 0651 58010000 		.4byte	.LLST11
 2056 0655 24       		.uleb128 0x24
 2057 0656 06000000 		.4byte	.LBB4
 2058 065a 1A000000 		.4byte	.LBE4-.LBB4
 2059 065e 22       		.uleb128 0x22
 2060 065f BB020000 		.4byte	0x2bb
 2061 0663 77010000 		.4byte	.LLST12
 2062 0667 24       		.uleb128 0x24
 2063 0668 06000000 		.4byte	.LBB5
 2064 066c 1A000000 		.4byte	.LBE5-.LBB5
 2065 0670 23       		.uleb128 0x23
 2066 0671 C7020000 		.4byte	0x2c7
 2067 0675 98010000 		.4byte	.LLST13
 2068 0679 00       		.byte	0
 2069 067a 00       		.byte	0
 2070 067b 00       		.byte	0
 2071 067c 17       		.uleb128 0x17
 2072 067d 5E040000 		.4byte	.LASF61
 2073 0681 01       		.byte	0x1
 2074 0682 3E05     		.2byte	0x53e
 2075 0684 00000000 		.4byte	.LFB11
 2076 0688 7C000000 		.4byte	.LFE11-.LFB11
 2077 068c 01       		.uleb128 0x1
 2078 068d 9C       		.byte	0x9c
 2079 068e D9060000 		.4byte	0x6d9
 2080 0692 18       		.uleb128 0x18
 2081 0693 90040000 		.4byte	.LASF60
 2082 0697 01       		.byte	0x1
 2083 0698 3E05     		.2byte	0x53e
 2084 069a 6B000000 		.4byte	0x6b
 2085 069e C7010000 		.4byte	.LLST14
 2086 06a2 25       		.uleb128 0x25
 2087 06a3 A0000000 		.4byte	.LASF62
 2088 06a7 01       		.byte	0x1
 2089 06a8 3E05     		.2byte	0x53e
 2090 06aa D9060000 		.4byte	0x6d9
 2091 06ae 01       		.uleb128 0x1
 2092 06af 51       		.byte	0x51
 2093 06b0 18       		.uleb128 0x18
 2094 06b1 E3010000 		.4byte	.LASF63
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 83


 2095 06b5 01       		.byte	0x1
 2096 06b6 3E05     		.2byte	0x53e
 2097 06b8 77000000 		.4byte	0x77
 2098 06bc F3010000 		.4byte	.LLST15
 2099 06c0 24       		.uleb128 0x24
 2100 06c1 58000000 		.4byte	.LBB6
 2101 06c5 24000000 		.4byte	.LBE6-.LBB6
 2102 06c9 20       		.uleb128 0x20
 2103 06ca 6900     		.ascii	"i\000"
 2104 06cc 01       		.byte	0x1
 2105 06cd 5305     		.2byte	0x553
 2106 06cf 77000000 		.4byte	0x77
 2107 06d3 2A020000 		.4byte	.LLST16
 2108 06d7 00       		.byte	0
 2109 06d8 00       		.byte	0
 2110 06d9 26       		.uleb128 0x26
 2111 06da 04       		.byte	0x4
 2112 06db DF060000 		.4byte	0x6df
 2113 06df 27       		.uleb128 0x27
 2114 06e0 6B000000 		.4byte	0x6b
 2115 06e4 17       		.uleb128 0x17
 2116 06e5 10020000 		.4byte	.LASF64
 2117 06e9 01       		.byte	0x1
 2118 06ea E408     		.2byte	0x8e4
 2119 06ec 00000000 		.4byte	.LFB13
 2120 06f0 28000000 		.4byte	.LFE13-.LFB13
 2121 06f4 01       		.uleb128 0x1
 2122 06f5 9C       		.byte	0x9c
 2123 06f6 0B070000 		.4byte	0x70b
 2124 06fa 18       		.uleb128 0x18
 2125 06fb 90040000 		.4byte	.LASF60
 2126 06ff 01       		.byte	0x1
 2127 0700 E408     		.2byte	0x8e4
 2128 0702 6B000000 		.4byte	0x6b
 2129 0706 52020000 		.4byte	.LLST17
 2130 070a 00       		.byte	0
 2131 070b 1E       		.uleb128 0x1e
 2132 070c A8020000 		.4byte	.LASF65
 2133 0710 01       		.byte	0x1
 2134 0711 7506     		.2byte	0x675
 2135 0713 77000000 		.4byte	0x77
 2136 0717 00000000 		.4byte	.LFB12
 2137 071b 4C000000 		.4byte	.LFE12-.LFB12
 2138 071f 01       		.uleb128 0x1
 2139 0720 9C       		.byte	0x9c
 2140 0721 AA070000 		.4byte	0x7aa
 2141 0725 18       		.uleb128 0x18
 2142 0726 90040000 		.4byte	.LASF60
 2143 072a 01       		.byte	0x1
 2144 072b 7506     		.2byte	0x675
 2145 072d 6B000000 		.4byte	0x6b
 2146 0731 73020000 		.4byte	.LLST18
 2147 0735 18       		.uleb128 0x18
 2148 0736 A0000000 		.4byte	.LASF62
 2149 073a 01       		.byte	0x1
 2150 073b 7506     		.2byte	0x675
 2151 073d AA070000 		.4byte	0x7aa
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 84


 2152 0741 AD020000 		.4byte	.LLST19
 2153 0745 18       		.uleb128 0x18
 2154 0746 E3010000 		.4byte	.LASF63
 2155 074a 01       		.byte	0x1
 2156 074b 7506     		.2byte	0x675
 2157 074d 77000000 		.4byte	0x77
 2158 0751 E7020000 		.4byte	.LLST20
 2159 0755 28       		.uleb128 0x28
 2160 0756 1E000000 		.4byte	.LBB7
 2161 075a 18000000 		.4byte	.LBE7-.LBB7
 2162 075e 71070000 		.4byte	0x771
 2163 0762 20       		.uleb128 0x20
 2164 0763 6900     		.ascii	"i\000"
 2165 0765 01       		.byte	0x1
 2166 0766 8206     		.2byte	0x682
 2167 0768 77000000 		.4byte	0x77
 2168 076c 29030000 		.4byte	.LLST21
 2169 0770 00       		.byte	0
 2170 0771 14       		.uleb128 0x14
 2171 0772 12000000 		.4byte	.LVL62
 2172 0776 AA020000 		.4byte	0x2aa
 2173 077a 85070000 		.4byte	0x785
 2174 077e 15       		.uleb128 0x15
 2175 077f 01       		.uleb128 0x1
 2176 0780 50       		.byte	0x50
 2177 0781 02       		.uleb128 0x2
 2178 0782 75       		.byte	0x75
 2179 0783 00       		.sleb128 0
 2180 0784 00       		.byte	0
 2181 0785 14       		.uleb128 0x14
 2182 0786 1C000000 		.4byte	.LVL63
 2183 078a AA020000 		.4byte	0x2aa
 2184 078e 99070000 		.4byte	0x799
 2185 0792 15       		.uleb128 0x15
 2186 0793 01       		.uleb128 0x1
 2187 0794 50       		.byte	0x50
 2188 0795 02       		.uleb128 0x2
 2189 0796 75       		.byte	0x75
 2190 0797 00       		.sleb128 0
 2191 0798 00       		.byte	0
 2192 0799 19       		.uleb128 0x19
 2193 079a 3C000000 		.4byte	.LVL67
 2194 079e E4060000 		.4byte	0x6e4
 2195 07a2 15       		.uleb128 0x15
 2196 07a3 01       		.uleb128 0x1
 2197 07a4 50       		.byte	0x50
 2198 07a5 02       		.uleb128 0x2
 2199 07a6 75       		.byte	0x75
 2200 07a7 00       		.sleb128 0
 2201 07a8 00       		.byte	0
 2202 07a9 00       		.byte	0
 2203 07aa 26       		.uleb128 0x26
 2204 07ab 04       		.byte	0x4
 2205 07ac 6B000000 		.4byte	0x6b
 2206 07b0 17       		.uleb128 0x17
 2207 07b1 32060000 		.4byte	.LASF66
 2208 07b5 01       		.byte	0x1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 85


 2209 07b6 FC08     		.2byte	0x8fc
 2210 07b8 00000000 		.4byte	.LFB14
 2211 07bc 14000000 		.4byte	.LFE14-.LFB14
 2212 07c0 01       		.uleb128 0x1
 2213 07c1 9C       		.byte	0x9c
 2214 07c2 D7070000 		.4byte	0x7d7
 2215 07c6 18       		.uleb128 0x18
 2216 07c7 90040000 		.4byte	.LASF60
 2217 07cb 01       		.byte	0x1
 2218 07cc FC08     		.2byte	0x8fc
 2219 07ce 6B000000 		.4byte	0x6b
 2220 07d2 4E030000 		.4byte	.LLST22
 2221 07d6 00       		.byte	0
 2222 07d7 17       		.uleb128 0x17
 2223 07d8 F9050000 		.4byte	.LASF67
 2224 07dc 01       		.byte	0x1
 2225 07dd 1A09     		.2byte	0x91a
 2226 07df 00000000 		.4byte	.LFB15
 2227 07e3 0C000000 		.4byte	.LFE15-.LFB15
 2228 07e7 01       		.uleb128 0x1
 2229 07e8 9C       		.byte	0x9c
 2230 07e9 FC070000 		.4byte	0x7fc
 2231 07ed 25       		.uleb128 0x25
 2232 07ee 1A060000 		.4byte	.LASF68
 2233 07f2 01       		.byte	0x1
 2234 07f3 1A09     		.2byte	0x91a
 2235 07f5 6B000000 		.4byte	0x6b
 2236 07f9 01       		.uleb128 0x1
 2237 07fa 50       		.byte	0x50
 2238 07fb 00       		.byte	0
 2239 07fc 1E       		.uleb128 0x1e
 2240 07fd BA020000 		.4byte	.LASF69
 2241 0801 01       		.byte	0x1
 2242 0802 3309     		.2byte	0x933
 2243 0804 6B000000 		.4byte	0x6b
 2244 0808 00000000 		.4byte	.LFB16
 2245 080c 1C000000 		.4byte	.LFE16-.LFB16
 2246 0810 01       		.uleb128 0x1
 2247 0811 9C       		.byte	0x9c
 2248 0812 36080000 		.4byte	0x836
 2249 0816 18       		.uleb128 0x18
 2250 0817 90040000 		.4byte	.LASF60
 2251 081b 01       		.byte	0x1
 2252 081c 3309     		.2byte	0x933
 2253 081e 6B000000 		.4byte	0x6b
 2254 0822 6F030000 		.4byte	.LLST23
 2255 0826 20       		.uleb128 0x20
 2256 0827 637200   		.ascii	"cr\000"
 2257 082a 01       		.byte	0x1
 2258 082b 3509     		.2byte	0x935
 2259 082d 6B000000 		.4byte	0x6b
 2260 0831 90030000 		.4byte	.LLST24
 2261 0835 00       		.byte	0
 2262 0836 17       		.uleb128 0x17
 2263 0837 74010000 		.4byte	.LASF70
 2264 083b 01       		.byte	0x1
 2265 083c 5C09     		.2byte	0x95c
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 86


 2266 083e 00000000 		.4byte	.LFB17
 2267 0842 18000000 		.4byte	.LFE17-.LFB17
 2268 0846 01       		.uleb128 0x1
 2269 0847 9C       		.byte	0x9c
 2270 0848 5B080000 		.4byte	0x85b
 2271 084c 25       		.uleb128 0x25
 2272 084d E5000000 		.4byte	.LASF71
 2273 0851 01       		.byte	0x1
 2274 0852 5C09     		.2byte	0x95c
 2275 0854 6B000000 		.4byte	0x6b
 2276 0858 01       		.uleb128 0x1
 2277 0859 50       		.byte	0x50
 2278 085a 00       		.byte	0
 2279 085b 1E       		.uleb128 0x1e
 2280 085c FD000000 		.4byte	.LASF72
 2281 0860 01       		.byte	0x1
 2282 0861 9509     		.2byte	0x995
 2283 0863 6B000000 		.4byte	0x6b
 2284 0867 00000000 		.4byte	.LFB18
 2285 086b 10000000 		.4byte	.LFE18-.LFB18
 2286 086f 01       		.uleb128 0x1
 2287 0870 9C       		.byte	0x9c
 2288 0871 86080000 		.4byte	0x886
 2289 0875 1D       		.uleb128 0x1d
 2290 0876 A1020000 		.4byte	.LASF73
 2291 087a 01       		.byte	0x1
 2292 087b 9709     		.2byte	0x997
 2293 087d 6B000000 		.4byte	0x6b
 2294 0881 AF030000 		.4byte	.LLST25
 2295 0885 00       		.byte	0
 2296 0886 1F       		.uleb128 0x1f
 2297 0887 F8040000 		.4byte	.LASF75
 2298 088b 01       		.byte	0x1
 2299 088c AD09     		.2byte	0x9ad
 2300 088e 6B000000 		.4byte	0x6b
 2301 0892 00000000 		.4byte	.LFB19
 2302 0896 10000000 		.4byte	.LFE19-.LFB19
 2303 089a 01       		.uleb128 0x1
 2304 089b 9C       		.byte	0x9c
 2305 089c 1C       		.uleb128 0x1c
 2306 089d 2C010000 		.4byte	.LASF77
 2307 08a1 01       		.byte	0x1
 2308 08a2 BB09     		.2byte	0x9bb
 2309 08a4 00000000 		.4byte	.LFB20
 2310 08a8 10000000 		.4byte	.LFE20-.LFB20
 2311 08ac 01       		.uleb128 0x1
 2312 08ad 9C       		.byte	0x9c
 2313 08ae 1C       		.uleb128 0x1c
 2314 08af 24020000 		.4byte	.LASF78
 2315 08b3 01       		.byte	0x1
 2316 08b4 D109     		.2byte	0x9d1
 2317 08b6 00000000 		.4byte	.LFB21
 2318 08ba 10000000 		.4byte	.LFE21-.LFB21
 2319 08be 01       		.uleb128 0x1
 2320 08bf 9C       		.byte	0x9c
 2321 08c0 29       		.uleb128 0x29
 2322 08c1 99040000 		.4byte	.LASF79
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 87


 2323 08c5 01       		.byte	0x1
 2324 08c6 28       		.byte	0x28
 2325 08c7 6B000000 		.4byte	0x6b
 2326 08cb 05       		.uleb128 0x5
 2327 08cc 03       		.byte	0x3
 2328 08cd 00000000 		.4byte	USBUART_initVar
 2329 08d1 2A       		.uleb128 0x2a
 2330 08d2 92020000 		.4byte	.LASF80
 2331 08d6 03       		.byte	0x3
 2332 08d7 D202     		.2byte	0x2d2
 2333 08d9 B0000000 		.4byte	0xb0
 2334 08dd 2A       		.uleb128 0x2a
 2335 08de CD010000 		.4byte	.LASF81
 2336 08e2 03       		.byte	0x3
 2337 08e3 D302     		.2byte	0x2d3
 2338 08e5 B0000000 		.4byte	0xb0
 2339 08e9 2A       		.uleb128 0x2a
 2340 08ea 3D000000 		.4byte	.LASF82
 2341 08ee 03       		.byte	0x3
 2342 08ef D402     		.2byte	0x2d4
 2343 08f1 B0000000 		.4byte	0xb0
 2344 08f5 2A       		.uleb128 0x2a
 2345 08f6 48020000 		.4byte	.LASF83
 2346 08fa 03       		.byte	0x3
 2347 08fb D502     		.2byte	0x2d5
 2348 08fd B0000000 		.4byte	0xb0
 2349 0901 2A       		.uleb128 0x2a
 2350 0902 B8010000 		.4byte	.LASF84
 2351 0906 03       		.byte	0x3
 2352 0907 D602     		.2byte	0x2d6
 2353 0909 B0000000 		.4byte	0xb0
 2354 090d 2B       		.uleb128 0x2b
 2355 090e D9050000 		.4byte	.LASF85
 2356 0912 04       		.byte	0x4
 2357 0913 72       		.byte	0x72
 2358 0914 B0000000 		.4byte	0xb0
 2359 0918 0A       		.uleb128 0xa
 2360 0919 B0000000 		.4byte	0xb0
 2361 091d 28090000 		.4byte	0x928
 2362 0921 0B       		.uleb128 0xb
 2363 0922 CD000000 		.4byte	0xcd
 2364 0926 01       		.byte	0x1
 2365 0927 00       		.byte	0
 2366 0928 2B       		.uleb128 0x2b
 2367 0929 4F010000 		.4byte	.LASF86
 2368 092d 04       		.byte	0x4
 2369 092e 73       		.byte	0x73
 2370 092f 33090000 		.4byte	0x933
 2371 0933 05       		.uleb128 0x5
 2372 0934 18090000 		.4byte	0x918
 2373 0938 2B       		.uleb128 0x2b
 2374 0939 D0020000 		.4byte	.LASF87
 2375 093d 04       		.byte	0x4
 2376 093e 75       		.byte	0x75
 2377 093f B0000000 		.4byte	0xb0
 2378 0943 0A       		.uleb128 0xa
 2379 0944 53090000 		.4byte	0x953
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 88


 2380 0948 53090000 		.4byte	0x953
 2381 094c 0B       		.uleb128 0xb
 2382 094d CD000000 		.4byte	0xcd
 2383 0951 08       		.byte	0x8
 2384 0952 00       		.byte	0
 2385 0953 05       		.uleb128 0x5
 2386 0954 49010000 		.4byte	0x149
 2387 0958 2B       		.uleb128 0x2b
 2388 0959 47060000 		.4byte	.LASF88
 2389 095d 04       		.byte	0x4
 2390 095e 79       		.byte	0x79
 2391 095f 63090000 		.4byte	0x963
 2392 0963 05       		.uleb128 0x5
 2393 0964 43090000 		.4byte	0x943
 2394 0968 2B       		.uleb128 0x2b
 2395 0969 25040000 		.4byte	.LASF89
 2396 096d 04       		.byte	0x4
 2397 096e 9B       		.byte	0x9b
 2398 096f B0000000 		.4byte	0xb0
 2399 0973 2C       		.uleb128 0x2c
 2400 0974 C2050000 		.4byte	.LASF90
 2401 0978 C2050000 		.4byte	.LASF90
 2402 097c 05       		.byte	0x5
 2403 097d 7D       		.byte	0x7d
 2404 097e 2C       		.uleb128 0x2c
 2405 097f F1020000 		.4byte	.LASF91
 2406 0983 F1020000 		.4byte	.LASF91
 2407 0987 05       		.byte	0x5
 2408 0988 77       		.byte	0x77
 2409 0989 2C       		.uleb128 0x2c
 2410 098a 8A000000 		.4byte	.LASF92
 2411 098e 8A000000 		.4byte	.LASF92
 2412 0992 05       		.byte	0x5
 2413 0993 7E       		.byte	0x7e
 2414 0994 2C       		.uleb128 0x2c
 2415 0995 A1010000 		.4byte	.LASF93
 2416 0999 A1010000 		.4byte	.LASF93
 2417 099d 05       		.byte	0x5
 2418 099e 8B       		.byte	0x8b
 2419 099f 2C       		.uleb128 0x2c
 2420 09a0 8A050000 		.4byte	.LASF94
 2421 09a4 8A050000 		.4byte	.LASF94
 2422 09a8 05       		.byte	0x5
 2423 09a9 88       		.byte	0x88
 2424 09aa 2C       		.uleb128 0x2c
 2425 09ab 83030000 		.4byte	.LASF95
 2426 09af 83030000 		.4byte	.LASF95
 2427 09b3 05       		.byte	0x5
 2428 09b4 79       		.byte	0x79
 2429 09b5 2C       		.uleb128 0x2c
 2430 09b6 38050000 		.4byte	.LASF96
 2431 09ba 38050000 		.4byte	.LASF96
 2432 09be 06       		.byte	0x6
 2433 09bf 2B       		.byte	0x2b
 2434 09c0 00       		.byte	0
 2435              		.section	.debug_abbrev,"",%progbits
 2436              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 89


 2437 0000 01       		.uleb128 0x1
 2438 0001 11       		.uleb128 0x11
 2439 0002 01       		.byte	0x1
 2440 0003 25       		.uleb128 0x25
 2441 0004 0E       		.uleb128 0xe
 2442 0005 13       		.uleb128 0x13
 2443 0006 0B       		.uleb128 0xb
 2444 0007 03       		.uleb128 0x3
 2445 0008 0E       		.uleb128 0xe
 2446 0009 1B       		.uleb128 0x1b
 2447 000a 0E       		.uleb128 0xe
 2448 000b 55       		.uleb128 0x55
 2449 000c 17       		.uleb128 0x17
 2450 000d 11       		.uleb128 0x11
 2451 000e 01       		.uleb128 0x1
 2452 000f 10       		.uleb128 0x10
 2453 0010 17       		.uleb128 0x17
 2454 0011 00       		.byte	0
 2455 0012 00       		.byte	0
 2456 0013 02       		.uleb128 0x2
 2457 0014 24       		.uleb128 0x24
 2458 0015 00       		.byte	0
 2459 0016 0B       		.uleb128 0xb
 2460 0017 0B       		.uleb128 0xb
 2461 0018 3E       		.uleb128 0x3e
 2462 0019 0B       		.uleb128 0xb
 2463 001a 03       		.uleb128 0x3
 2464 001b 0E       		.uleb128 0xe
 2465 001c 00       		.byte	0
 2466 001d 00       		.byte	0
 2467 001e 03       		.uleb128 0x3
 2468 001f 24       		.uleb128 0x24
 2469 0020 00       		.byte	0
 2470 0021 0B       		.uleb128 0xb
 2471 0022 0B       		.uleb128 0xb
 2472 0023 3E       		.uleb128 0x3e
 2473 0024 0B       		.uleb128 0xb
 2474 0025 03       		.uleb128 0x3
 2475 0026 08       		.uleb128 0x8
 2476 0027 00       		.byte	0
 2477 0028 00       		.byte	0
 2478 0029 04       		.uleb128 0x4
 2479 002a 16       		.uleb128 0x16
 2480 002b 00       		.byte	0
 2481 002c 03       		.uleb128 0x3
 2482 002d 0E       		.uleb128 0xe
 2483 002e 3A       		.uleb128 0x3a
 2484 002f 0B       		.uleb128 0xb
 2485 0030 3B       		.uleb128 0x3b
 2486 0031 05       		.uleb128 0x5
 2487 0032 49       		.uleb128 0x49
 2488 0033 13       		.uleb128 0x13
 2489 0034 00       		.byte	0
 2490 0035 00       		.byte	0
 2491 0036 05       		.uleb128 0x5
 2492 0037 35       		.uleb128 0x35
 2493 0038 00       		.byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 90


 2494 0039 49       		.uleb128 0x49
 2495 003a 13       		.uleb128 0x13
 2496 003b 00       		.byte	0
 2497 003c 00       		.byte	0
 2498 003d 06       		.uleb128 0x6
 2499 003e 13       		.uleb128 0x13
 2500 003f 01       		.byte	0x1
 2501 0040 0B       		.uleb128 0xb
 2502 0041 0B       		.uleb128 0xb
 2503 0042 3A       		.uleb128 0x3a
 2504 0043 0B       		.uleb128 0xb
 2505 0044 3B       		.uleb128 0x3b
 2506 0045 0B       		.uleb128 0xb
 2507 0046 01       		.uleb128 0x1
 2508 0047 13       		.uleb128 0x13
 2509 0048 00       		.byte	0
 2510 0049 00       		.byte	0
 2511 004a 07       		.uleb128 0x7
 2512 004b 0D       		.uleb128 0xd
 2513 004c 00       		.byte	0
 2514 004d 03       		.uleb128 0x3
 2515 004e 0E       		.uleb128 0xe
 2516 004f 3A       		.uleb128 0x3a
 2517 0050 0B       		.uleb128 0xb
 2518 0051 3B       		.uleb128 0x3b
 2519 0052 0B       		.uleb128 0xb
 2520 0053 49       		.uleb128 0x49
 2521 0054 13       		.uleb128 0x13
 2522 0055 38       		.uleb128 0x38
 2523 0056 0B       		.uleb128 0xb
 2524 0057 00       		.byte	0
 2525 0058 00       		.byte	0
 2526 0059 08       		.uleb128 0x8
 2527 005a 16       		.uleb128 0x16
 2528 005b 00       		.byte	0
 2529 005c 03       		.uleb128 0x3
 2530 005d 0E       		.uleb128 0xe
 2531 005e 3A       		.uleb128 0x3a
 2532 005f 0B       		.uleb128 0xb
 2533 0060 3B       		.uleb128 0x3b
 2534 0061 0B       		.uleb128 0xb
 2535 0062 49       		.uleb128 0x49
 2536 0063 13       		.uleb128 0x13
 2537 0064 00       		.byte	0
 2538 0065 00       		.byte	0
 2539 0066 09       		.uleb128 0x9
 2540 0067 0D       		.uleb128 0xd
 2541 0068 00       		.byte	0
 2542 0069 03       		.uleb128 0x3
 2543 006a 08       		.uleb128 0x8
 2544 006b 3A       		.uleb128 0x3a
 2545 006c 0B       		.uleb128 0xb
 2546 006d 3B       		.uleb128 0x3b
 2547 006e 0B       		.uleb128 0xb
 2548 006f 49       		.uleb128 0x49
 2549 0070 13       		.uleb128 0x13
 2550 0071 38       		.uleb128 0x38
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 91


 2551 0072 0B       		.uleb128 0xb
 2552 0073 00       		.byte	0
 2553 0074 00       		.byte	0
 2554 0075 0A       		.uleb128 0xa
 2555 0076 01       		.uleb128 0x1
 2556 0077 01       		.byte	0x1
 2557 0078 49       		.uleb128 0x49
 2558 0079 13       		.uleb128 0x13
 2559 007a 01       		.uleb128 0x1
 2560 007b 13       		.uleb128 0x13
 2561 007c 00       		.byte	0
 2562 007d 00       		.byte	0
 2563 007e 0B       		.uleb128 0xb
 2564 007f 21       		.uleb128 0x21
 2565 0080 00       		.byte	0
 2566 0081 49       		.uleb128 0x49
 2567 0082 13       		.uleb128 0x13
 2568 0083 2F       		.uleb128 0x2f
 2569 0084 0B       		.uleb128 0xb
 2570 0085 00       		.byte	0
 2571 0086 00       		.byte	0
 2572 0087 0C       		.uleb128 0xc
 2573 0088 13       		.uleb128 0x13
 2574 0089 01       		.byte	0x1
 2575 008a 0B       		.uleb128 0xb
 2576 008b 0B       		.uleb128 0xb
 2577 008c 3A       		.uleb128 0x3a
 2578 008d 0B       		.uleb128 0xb
 2579 008e 3B       		.uleb128 0x3b
 2580 008f 05       		.uleb128 0x5
 2581 0090 01       		.uleb128 0x1
 2582 0091 13       		.uleb128 0x13
 2583 0092 00       		.byte	0
 2584 0093 00       		.byte	0
 2585 0094 0D       		.uleb128 0xd
 2586 0095 0D       		.uleb128 0xd
 2587 0096 00       		.byte	0
 2588 0097 03       		.uleb128 0x3
 2589 0098 0E       		.uleb128 0xe
 2590 0099 3A       		.uleb128 0x3a
 2591 009a 0B       		.uleb128 0xb
 2592 009b 3B       		.uleb128 0x3b
 2593 009c 05       		.uleb128 0x5
 2594 009d 49       		.uleb128 0x49
 2595 009e 13       		.uleb128 0x13
 2596 009f 38       		.uleb128 0x38
 2597 00a0 0B       		.uleb128 0xb
 2598 00a1 00       		.byte	0
 2599 00a2 00       		.byte	0
 2600 00a3 0E       		.uleb128 0xe
 2601 00a4 2E       		.uleb128 0x2e
 2602 00a5 01       		.byte	0x1
 2603 00a6 3F       		.uleb128 0x3f
 2604 00a7 19       		.uleb128 0x19
 2605 00a8 03       		.uleb128 0x3
 2606 00a9 0E       		.uleb128 0xe
 2607 00aa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 92


 2608 00ab 0B       		.uleb128 0xb
 2609 00ac 3B       		.uleb128 0x3b
 2610 00ad 05       		.uleb128 0x5
 2611 00ae 27       		.uleb128 0x27
 2612 00af 19       		.uleb128 0x19
 2613 00b0 49       		.uleb128 0x49
 2614 00b1 13       		.uleb128 0x13
 2615 00b2 20       		.uleb128 0x20
 2616 00b3 0B       		.uleb128 0xb
 2617 00b4 01       		.uleb128 0x1
 2618 00b5 13       		.uleb128 0x13
 2619 00b6 00       		.byte	0
 2620 00b7 00       		.byte	0
 2621 00b8 0F       		.uleb128 0xf
 2622 00b9 05       		.uleb128 0x5
 2623 00ba 00       		.byte	0
 2624 00bb 03       		.uleb128 0x3
 2625 00bc 0E       		.uleb128 0xe
 2626 00bd 3A       		.uleb128 0x3a
 2627 00be 0B       		.uleb128 0xb
 2628 00bf 3B       		.uleb128 0x3b
 2629 00c0 05       		.uleb128 0x5
 2630 00c1 49       		.uleb128 0x49
 2631 00c2 13       		.uleb128 0x13
 2632 00c3 00       		.byte	0
 2633 00c4 00       		.byte	0
 2634 00c5 10       		.uleb128 0x10
 2635 00c6 34       		.uleb128 0x34
 2636 00c7 00       		.byte	0
 2637 00c8 03       		.uleb128 0x3
 2638 00c9 0E       		.uleb128 0xe
 2639 00ca 3A       		.uleb128 0x3a
 2640 00cb 0B       		.uleb128 0xb
 2641 00cc 3B       		.uleb128 0x3b
 2642 00cd 05       		.uleb128 0x5
 2643 00ce 49       		.uleb128 0x49
 2644 00cf 13       		.uleb128 0x13
 2645 00d0 00       		.byte	0
 2646 00d1 00       		.byte	0
 2647 00d2 11       		.uleb128 0x11
 2648 00d3 2E       		.uleb128 0x2e
 2649 00d4 01       		.byte	0x1
 2650 00d5 3F       		.uleb128 0x3f
 2651 00d6 19       		.uleb128 0x19
 2652 00d7 03       		.uleb128 0x3
 2653 00d8 0E       		.uleb128 0xe
 2654 00d9 3A       		.uleb128 0x3a
 2655 00da 0B       		.uleb128 0xb
 2656 00db 3B       		.uleb128 0x3b
 2657 00dc 0B       		.uleb128 0xb
 2658 00dd 27       		.uleb128 0x27
 2659 00de 19       		.uleb128 0x19
 2660 00df 11       		.uleb128 0x11
 2661 00e0 01       		.uleb128 0x1
 2662 00e1 12       		.uleb128 0x12
 2663 00e2 06       		.uleb128 0x6
 2664 00e3 40       		.uleb128 0x40
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 93


 2665 00e4 18       		.uleb128 0x18
 2666 00e5 9742     		.uleb128 0x2117
 2667 00e7 19       		.uleb128 0x19
 2668 00e8 01       		.uleb128 0x1
 2669 00e9 13       		.uleb128 0x13
 2670 00ea 00       		.byte	0
 2671 00eb 00       		.byte	0
 2672 00ec 12       		.uleb128 0x12
 2673 00ed 34       		.uleb128 0x34
 2674 00ee 00       		.byte	0
 2675 00ef 03       		.uleb128 0x3
 2676 00f0 0E       		.uleb128 0xe
 2677 00f1 3A       		.uleb128 0x3a
 2678 00f2 0B       		.uleb128 0xb
 2679 00f3 3B       		.uleb128 0x3b
 2680 00f4 0B       		.uleb128 0xb
 2681 00f5 49       		.uleb128 0x49
 2682 00f6 13       		.uleb128 0x13
 2683 00f7 02       		.uleb128 0x2
 2684 00f8 17       		.uleb128 0x17
 2685 00f9 00       		.byte	0
 2686 00fa 00       		.byte	0
 2687 00fb 13       		.uleb128 0x13
 2688 00fc 898201   		.uleb128 0x4109
 2689 00ff 00       		.byte	0
 2690 0100 11       		.uleb128 0x11
 2691 0101 01       		.uleb128 0x1
 2692 0102 31       		.uleb128 0x31
 2693 0103 13       		.uleb128 0x13
 2694 0104 00       		.byte	0
 2695 0105 00       		.byte	0
 2696 0106 14       		.uleb128 0x14
 2697 0107 898201   		.uleb128 0x4109
 2698 010a 01       		.byte	0x1
 2699 010b 11       		.uleb128 0x11
 2700 010c 01       		.uleb128 0x1
 2701 010d 31       		.uleb128 0x31
 2702 010e 13       		.uleb128 0x13
 2703 010f 01       		.uleb128 0x1
 2704 0110 13       		.uleb128 0x13
 2705 0111 00       		.byte	0
 2706 0112 00       		.byte	0
 2707 0113 15       		.uleb128 0x15
 2708 0114 8A8201   		.uleb128 0x410a
 2709 0117 00       		.byte	0
 2710 0118 02       		.uleb128 0x2
 2711 0119 18       		.uleb128 0x18
 2712 011a 9142     		.uleb128 0x2111
 2713 011c 18       		.uleb128 0x18
 2714 011d 00       		.byte	0
 2715 011e 00       		.byte	0
 2716 011f 16       		.uleb128 0x16
 2717 0120 898201   		.uleb128 0x4109
 2718 0123 01       		.byte	0x1
 2719 0124 11       		.uleb128 0x11
 2720 0125 01       		.uleb128 0x1
 2721 0126 9542     		.uleb128 0x2115
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 94


 2722 0128 19       		.uleb128 0x19
 2723 0129 31       		.uleb128 0x31
 2724 012a 13       		.uleb128 0x13
 2725 012b 00       		.byte	0
 2726 012c 00       		.byte	0
 2727 012d 17       		.uleb128 0x17
 2728 012e 2E       		.uleb128 0x2e
 2729 012f 01       		.byte	0x1
 2730 0130 3F       		.uleb128 0x3f
 2731 0131 19       		.uleb128 0x19
 2732 0132 03       		.uleb128 0x3
 2733 0133 0E       		.uleb128 0xe
 2734 0134 3A       		.uleb128 0x3a
 2735 0135 0B       		.uleb128 0xb
 2736 0136 3B       		.uleb128 0x3b
 2737 0137 05       		.uleb128 0x5
 2738 0138 27       		.uleb128 0x27
 2739 0139 19       		.uleb128 0x19
 2740 013a 11       		.uleb128 0x11
 2741 013b 01       		.uleb128 0x1
 2742 013c 12       		.uleb128 0x12
 2743 013d 06       		.uleb128 0x6
 2744 013e 40       		.uleb128 0x40
 2745 013f 18       		.uleb128 0x18
 2746 0140 9742     		.uleb128 0x2117
 2747 0142 19       		.uleb128 0x19
 2748 0143 01       		.uleb128 0x1
 2749 0144 13       		.uleb128 0x13
 2750 0145 00       		.byte	0
 2751 0146 00       		.byte	0
 2752 0147 18       		.uleb128 0x18
 2753 0148 05       		.uleb128 0x5
 2754 0149 00       		.byte	0
 2755 014a 03       		.uleb128 0x3
 2756 014b 0E       		.uleb128 0xe
 2757 014c 3A       		.uleb128 0x3a
 2758 014d 0B       		.uleb128 0xb
 2759 014e 3B       		.uleb128 0x3b
 2760 014f 05       		.uleb128 0x5
 2761 0150 49       		.uleb128 0x49
 2762 0151 13       		.uleb128 0x13
 2763 0152 02       		.uleb128 0x2
 2764 0153 17       		.uleb128 0x17
 2765 0154 00       		.byte	0
 2766 0155 00       		.byte	0
 2767 0156 19       		.uleb128 0x19
 2768 0157 898201   		.uleb128 0x4109
 2769 015a 01       		.byte	0x1
 2770 015b 11       		.uleb128 0x11
 2771 015c 01       		.uleb128 0x1
 2772 015d 31       		.uleb128 0x31
 2773 015e 13       		.uleb128 0x13
 2774 015f 00       		.byte	0
 2775 0160 00       		.byte	0
 2776 0161 1A       		.uleb128 0x1a
 2777 0162 05       		.uleb128 0x5
 2778 0163 00       		.byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 95


 2779 0164 03       		.uleb128 0x3
 2780 0165 0E       		.uleb128 0xe
 2781 0166 3A       		.uleb128 0x3a
 2782 0167 0B       		.uleb128 0xb
 2783 0168 3B       		.uleb128 0x3b
 2784 0169 0B       		.uleb128 0xb
 2785 016a 49       		.uleb128 0x49
 2786 016b 13       		.uleb128 0x13
 2787 016c 02       		.uleb128 0x2
 2788 016d 17       		.uleb128 0x17
 2789 016e 00       		.byte	0
 2790 016f 00       		.byte	0
 2791 0170 1B       		.uleb128 0x1b
 2792 0171 898201   		.uleb128 0x4109
 2793 0174 00       		.byte	0
 2794 0175 11       		.uleb128 0x11
 2795 0176 01       		.uleb128 0x1
 2796 0177 9542     		.uleb128 0x2115
 2797 0179 19       		.uleb128 0x19
 2798 017a 31       		.uleb128 0x31
 2799 017b 13       		.uleb128 0x13
 2800 017c 00       		.byte	0
 2801 017d 00       		.byte	0
 2802 017e 1C       		.uleb128 0x1c
 2803 017f 2E       		.uleb128 0x2e
 2804 0180 00       		.byte	0
 2805 0181 3F       		.uleb128 0x3f
 2806 0182 19       		.uleb128 0x19
 2807 0183 03       		.uleb128 0x3
 2808 0184 0E       		.uleb128 0xe
 2809 0185 3A       		.uleb128 0x3a
 2810 0186 0B       		.uleb128 0xb
 2811 0187 3B       		.uleb128 0x3b
 2812 0188 05       		.uleb128 0x5
 2813 0189 27       		.uleb128 0x27
 2814 018a 19       		.uleb128 0x19
 2815 018b 11       		.uleb128 0x11
 2816 018c 01       		.uleb128 0x1
 2817 018d 12       		.uleb128 0x12
 2818 018e 06       		.uleb128 0x6
 2819 018f 40       		.uleb128 0x40
 2820 0190 18       		.uleb128 0x18
 2821 0191 9742     		.uleb128 0x2117
 2822 0193 19       		.uleb128 0x19
 2823 0194 00       		.byte	0
 2824 0195 00       		.byte	0
 2825 0196 1D       		.uleb128 0x1d
 2826 0197 34       		.uleb128 0x34
 2827 0198 00       		.byte	0
 2828 0199 03       		.uleb128 0x3
 2829 019a 0E       		.uleb128 0xe
 2830 019b 3A       		.uleb128 0x3a
 2831 019c 0B       		.uleb128 0xb
 2832 019d 3B       		.uleb128 0x3b
 2833 019e 05       		.uleb128 0x5
 2834 019f 49       		.uleb128 0x49
 2835 01a0 13       		.uleb128 0x13
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 96


 2836 01a1 02       		.uleb128 0x2
 2837 01a2 17       		.uleb128 0x17
 2838 01a3 00       		.byte	0
 2839 01a4 00       		.byte	0
 2840 01a5 1E       		.uleb128 0x1e
 2841 01a6 2E       		.uleb128 0x2e
 2842 01a7 01       		.byte	0x1
 2843 01a8 3F       		.uleb128 0x3f
 2844 01a9 19       		.uleb128 0x19
 2845 01aa 03       		.uleb128 0x3
 2846 01ab 0E       		.uleb128 0xe
 2847 01ac 3A       		.uleb128 0x3a
 2848 01ad 0B       		.uleb128 0xb
 2849 01ae 3B       		.uleb128 0x3b
 2850 01af 05       		.uleb128 0x5
 2851 01b0 27       		.uleb128 0x27
 2852 01b1 19       		.uleb128 0x19
 2853 01b2 49       		.uleb128 0x49
 2854 01b3 13       		.uleb128 0x13
 2855 01b4 11       		.uleb128 0x11
 2856 01b5 01       		.uleb128 0x1
 2857 01b6 12       		.uleb128 0x12
 2858 01b7 06       		.uleb128 0x6
 2859 01b8 40       		.uleb128 0x40
 2860 01b9 18       		.uleb128 0x18
 2861 01ba 9742     		.uleb128 0x2117
 2862 01bc 19       		.uleb128 0x19
 2863 01bd 01       		.uleb128 0x1
 2864 01be 13       		.uleb128 0x13
 2865 01bf 00       		.byte	0
 2866 01c0 00       		.byte	0
 2867 01c1 1F       		.uleb128 0x1f
 2868 01c2 2E       		.uleb128 0x2e
 2869 01c3 00       		.byte	0
 2870 01c4 3F       		.uleb128 0x3f
 2871 01c5 19       		.uleb128 0x19
 2872 01c6 03       		.uleb128 0x3
 2873 01c7 0E       		.uleb128 0xe
 2874 01c8 3A       		.uleb128 0x3a
 2875 01c9 0B       		.uleb128 0xb
 2876 01ca 3B       		.uleb128 0x3b
 2877 01cb 05       		.uleb128 0x5
 2878 01cc 27       		.uleb128 0x27
 2879 01cd 19       		.uleb128 0x19
 2880 01ce 49       		.uleb128 0x49
 2881 01cf 13       		.uleb128 0x13
 2882 01d0 11       		.uleb128 0x11
 2883 01d1 01       		.uleb128 0x1
 2884 01d2 12       		.uleb128 0x12
 2885 01d3 06       		.uleb128 0x6
 2886 01d4 40       		.uleb128 0x40
 2887 01d5 18       		.uleb128 0x18
 2888 01d6 9742     		.uleb128 0x2117
 2889 01d8 19       		.uleb128 0x19
 2890 01d9 00       		.byte	0
 2891 01da 00       		.byte	0
 2892 01db 20       		.uleb128 0x20
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 97


 2893 01dc 34       		.uleb128 0x34
 2894 01dd 00       		.byte	0
 2895 01de 03       		.uleb128 0x3
 2896 01df 08       		.uleb128 0x8
 2897 01e0 3A       		.uleb128 0x3a
 2898 01e1 0B       		.uleb128 0xb
 2899 01e2 3B       		.uleb128 0x3b
 2900 01e3 05       		.uleb128 0x5
 2901 01e4 49       		.uleb128 0x49
 2902 01e5 13       		.uleb128 0x13
 2903 01e6 02       		.uleb128 0x2
 2904 01e7 17       		.uleb128 0x17
 2905 01e8 00       		.byte	0
 2906 01e9 00       		.byte	0
 2907 01ea 21       		.uleb128 0x21
 2908 01eb 2E       		.uleb128 0x2e
 2909 01ec 01       		.byte	0x1
 2910 01ed 31       		.uleb128 0x31
 2911 01ee 13       		.uleb128 0x13
 2912 01ef 11       		.uleb128 0x11
 2913 01f0 01       		.uleb128 0x1
 2914 01f1 12       		.uleb128 0x12
 2915 01f2 06       		.uleb128 0x6
 2916 01f3 40       		.uleb128 0x40
 2917 01f4 18       		.uleb128 0x18
 2918 01f5 9742     		.uleb128 0x2117
 2919 01f7 19       		.uleb128 0x19
 2920 01f8 01       		.uleb128 0x1
 2921 01f9 13       		.uleb128 0x13
 2922 01fa 00       		.byte	0
 2923 01fb 00       		.byte	0
 2924 01fc 22       		.uleb128 0x22
 2925 01fd 05       		.uleb128 0x5
 2926 01fe 00       		.byte	0
 2927 01ff 31       		.uleb128 0x31
 2928 0200 13       		.uleb128 0x13
 2929 0201 02       		.uleb128 0x2
 2930 0202 17       		.uleb128 0x17
 2931 0203 00       		.byte	0
 2932 0204 00       		.byte	0
 2933 0205 23       		.uleb128 0x23
 2934 0206 34       		.uleb128 0x34
 2935 0207 00       		.byte	0
 2936 0208 31       		.uleb128 0x31
 2937 0209 13       		.uleb128 0x13
 2938 020a 02       		.uleb128 0x2
 2939 020b 17       		.uleb128 0x17
 2940 020c 00       		.byte	0
 2941 020d 00       		.byte	0
 2942 020e 24       		.uleb128 0x24
 2943 020f 0B       		.uleb128 0xb
 2944 0210 01       		.byte	0x1
 2945 0211 11       		.uleb128 0x11
 2946 0212 01       		.uleb128 0x1
 2947 0213 12       		.uleb128 0x12
 2948 0214 06       		.uleb128 0x6
 2949 0215 00       		.byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 98


 2950 0216 00       		.byte	0
 2951 0217 25       		.uleb128 0x25
 2952 0218 05       		.uleb128 0x5
 2953 0219 00       		.byte	0
 2954 021a 03       		.uleb128 0x3
 2955 021b 0E       		.uleb128 0xe
 2956 021c 3A       		.uleb128 0x3a
 2957 021d 0B       		.uleb128 0xb
 2958 021e 3B       		.uleb128 0x3b
 2959 021f 05       		.uleb128 0x5
 2960 0220 49       		.uleb128 0x49
 2961 0221 13       		.uleb128 0x13
 2962 0222 02       		.uleb128 0x2
 2963 0223 18       		.uleb128 0x18
 2964 0224 00       		.byte	0
 2965 0225 00       		.byte	0
 2966 0226 26       		.uleb128 0x26
 2967 0227 0F       		.uleb128 0xf
 2968 0228 00       		.byte	0
 2969 0229 0B       		.uleb128 0xb
 2970 022a 0B       		.uleb128 0xb
 2971 022b 49       		.uleb128 0x49
 2972 022c 13       		.uleb128 0x13
 2973 022d 00       		.byte	0
 2974 022e 00       		.byte	0
 2975 022f 27       		.uleb128 0x27
 2976 0230 26       		.uleb128 0x26
 2977 0231 00       		.byte	0
 2978 0232 49       		.uleb128 0x49
 2979 0233 13       		.uleb128 0x13
 2980 0234 00       		.byte	0
 2981 0235 00       		.byte	0
 2982 0236 28       		.uleb128 0x28
 2983 0237 0B       		.uleb128 0xb
 2984 0238 01       		.byte	0x1
 2985 0239 11       		.uleb128 0x11
 2986 023a 01       		.uleb128 0x1
 2987 023b 12       		.uleb128 0x12
 2988 023c 06       		.uleb128 0x6
 2989 023d 01       		.uleb128 0x1
 2990 023e 13       		.uleb128 0x13
 2991 023f 00       		.byte	0
 2992 0240 00       		.byte	0
 2993 0241 29       		.uleb128 0x29
 2994 0242 34       		.uleb128 0x34
 2995 0243 00       		.byte	0
 2996 0244 03       		.uleb128 0x3
 2997 0245 0E       		.uleb128 0xe
 2998 0246 3A       		.uleb128 0x3a
 2999 0247 0B       		.uleb128 0xb
 3000 0248 3B       		.uleb128 0x3b
 3001 0249 0B       		.uleb128 0xb
 3002 024a 49       		.uleb128 0x49
 3003 024b 13       		.uleb128 0x13
 3004 024c 3F       		.uleb128 0x3f
 3005 024d 19       		.uleb128 0x19
 3006 024e 02       		.uleb128 0x2
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 99


 3007 024f 18       		.uleb128 0x18
 3008 0250 00       		.byte	0
 3009 0251 00       		.byte	0
 3010 0252 2A       		.uleb128 0x2a
 3011 0253 34       		.uleb128 0x34
 3012 0254 00       		.byte	0
 3013 0255 03       		.uleb128 0x3
 3014 0256 0E       		.uleb128 0xe
 3015 0257 3A       		.uleb128 0x3a
 3016 0258 0B       		.uleb128 0xb
 3017 0259 3B       		.uleb128 0x3b
 3018 025a 05       		.uleb128 0x5
 3019 025b 49       		.uleb128 0x49
 3020 025c 13       		.uleb128 0x13
 3021 025d 3F       		.uleb128 0x3f
 3022 025e 19       		.uleb128 0x19
 3023 025f 3C       		.uleb128 0x3c
 3024 0260 19       		.uleb128 0x19
 3025 0261 00       		.byte	0
 3026 0262 00       		.byte	0
 3027 0263 2B       		.uleb128 0x2b
 3028 0264 34       		.uleb128 0x34
 3029 0265 00       		.byte	0
 3030 0266 03       		.uleb128 0x3
 3031 0267 0E       		.uleb128 0xe
 3032 0268 3A       		.uleb128 0x3a
 3033 0269 0B       		.uleb128 0xb
 3034 026a 3B       		.uleb128 0x3b
 3035 026b 0B       		.uleb128 0xb
 3036 026c 49       		.uleb128 0x49
 3037 026d 13       		.uleb128 0x13
 3038 026e 3F       		.uleb128 0x3f
 3039 026f 19       		.uleb128 0x19
 3040 0270 3C       		.uleb128 0x3c
 3041 0271 19       		.uleb128 0x19
 3042 0272 00       		.byte	0
 3043 0273 00       		.byte	0
 3044 0274 2C       		.uleb128 0x2c
 3045 0275 2E       		.uleb128 0x2e
 3046 0276 00       		.byte	0
 3047 0277 3F       		.uleb128 0x3f
 3048 0278 19       		.uleb128 0x19
 3049 0279 3C       		.uleb128 0x3c
 3050 027a 19       		.uleb128 0x19
 3051 027b 6E       		.uleb128 0x6e
 3052 027c 0E       		.uleb128 0xe
 3053 027d 03       		.uleb128 0x3
 3054 027e 0E       		.uleb128 0xe
 3055 027f 3A       		.uleb128 0x3a
 3056 0280 0B       		.uleb128 0xb
 3057 0281 3B       		.uleb128 0x3b
 3058 0282 0B       		.uleb128 0xb
 3059 0283 00       		.byte	0
 3060 0284 00       		.byte	0
 3061 0285 00       		.byte	0
 3062              		.section	.debug_loc,"",%progbits
 3063              	.Ldebug_loc0:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 100


 3064              	.LLST0:
 3065 0000 30000000 		.4byte	.LVL1
 3066 0004 00010000 		.4byte	.LVL20
 3067 0008 0100     		.2byte	0x1
 3068 000a 55       		.byte	0x55
 3069 000b 00000000 		.4byte	0
 3070 000f 00000000 		.4byte	0
 3071              	.LLST1:
 3072 0013 00000000 		.4byte	.LVL22
 3073 0017 68000000 		.4byte	.LVL23
 3074 001b 0100     		.2byte	0x1
 3075 001d 50       		.byte	0x50
 3076 001e 68000000 		.4byte	.LVL23
 3077 0022 A4000000 		.4byte	.LFE2
 3078 0026 0400     		.2byte	0x4
 3079 0028 F3       		.byte	0xf3
 3080 0029 01       		.uleb128 0x1
 3081 002a 50       		.byte	0x50
 3082 002b 9F       		.byte	0x9f
 3083 002c 00000000 		.4byte	0
 3084 0030 00000000 		.4byte	0
 3085              	.LLST2:
 3086 0034 00000000 		.4byte	.LVL22
 3087 0038 6B000000 		.4byte	.LVL24-1
 3088 003c 0100     		.2byte	0x1
 3089 003e 51       		.byte	0x51
 3090 003f 6B000000 		.4byte	.LVL24-1
 3091 0043 A4000000 		.4byte	.LFE2
 3092 0047 0400     		.2byte	0x4
 3093 0049 F3       		.byte	0xf3
 3094 004a 01       		.uleb128 0x1
 3095 004b 51       		.byte	0x51
 3096 004c 9F       		.byte	0x9f
 3097 004d 00000000 		.4byte	0
 3098 0051 00000000 		.4byte	0
 3099              	.LLST3:
 3100 0055 00000000 		.4byte	.LVL25
 3101 0059 0F000000 		.4byte	.LVL26-1
 3102 005d 0100     		.2byte	0x1
 3103 005f 50       		.byte	0x50
 3104 0060 0F000000 		.4byte	.LVL26-1
 3105 0064 24000000 		.4byte	.LFE0
 3106 0068 0400     		.2byte	0x4
 3107 006a F3       		.byte	0xf3
 3108 006b 01       		.uleb128 0x1
 3109 006c 50       		.byte	0x50
 3110 006d 9F       		.byte	0x9f
 3111 006e 00000000 		.4byte	0
 3112 0072 00000000 		.4byte	0
 3113              	.LLST4:
 3114 0076 00000000 		.4byte	.LVL25
 3115 007a 0F000000 		.4byte	.LVL26-1
 3116 007e 0100     		.2byte	0x1
 3117 0080 51       		.byte	0x51
 3118 0081 0F000000 		.4byte	.LVL26-1
 3119 0085 24000000 		.4byte	.LFE0
 3120 0089 0400     		.2byte	0x4
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 101


 3121 008b F3       		.byte	0xf3
 3122 008c 01       		.uleb128 0x1
 3123 008d 51       		.byte	0x51
 3124 008e 9F       		.byte	0x9f
 3125 008f 00000000 		.4byte	0
 3126 0093 00000000 		.4byte	0
 3127              	.LLST5:
 3128 0097 06000000 		.4byte	.LVL28
 3129 009b 43000000 		.4byte	.LVL29-1
 3130 009f 0100     		.2byte	0x1
 3131 00a1 50       		.byte	0x50
 3132 00a2 00000000 		.4byte	0
 3133 00a6 00000000 		.4byte	0
 3134              	.LLST6:
 3135 00aa 06000000 		.4byte	.LVL31
 3136 00ae 10000000 		.4byte	.LVL32
 3137 00b2 0100     		.2byte	0x1
 3138 00b4 50       		.byte	0x50
 3139 00b5 00000000 		.4byte	0
 3140 00b9 00000000 		.4byte	0
 3141              	.LLST7:
 3142 00bd 00000000 		.4byte	.LVL33
 3143 00c1 10000000 		.4byte	.LVL34
 3144 00c5 0200     		.2byte	0x2
 3145 00c7 30       		.byte	0x30
 3146 00c8 9F       		.byte	0x9f
 3147 00c9 10000000 		.4byte	.LVL34
 3148 00cd 18000000 		.4byte	.LFE7
 3149 00d1 0100     		.2byte	0x1
 3150 00d3 50       		.byte	0x50
 3151 00d4 00000000 		.4byte	0
 3152 00d8 00000000 		.4byte	0
 3153              	.LLST8:
 3154 00dc 00000000 		.4byte	.LVL36
 3155 00e0 04000000 		.4byte	.LVL37
 3156 00e4 0100     		.2byte	0x1
 3157 00e6 50       		.byte	0x50
 3158 00e7 04000000 		.4byte	.LVL37
 3159 00eb 0C000000 		.4byte	.LFE8
 3160 00ef 0400     		.2byte	0x4
 3161 00f1 F3       		.byte	0xf3
 3162 00f2 01       		.uleb128 0x1
 3163 00f3 50       		.byte	0x50
 3164 00f4 9F       		.byte	0x9f
 3165 00f5 00000000 		.4byte	0
 3166 00f9 00000000 		.4byte	0
 3167              	.LLST9:
 3168 00fd 00000000 		.4byte	.LVL38
 3169 0101 08000000 		.4byte	.LVL39
 3170 0105 0100     		.2byte	0x1
 3171 0107 50       		.byte	0x50
 3172 0108 08000000 		.4byte	.LVL39
 3173 010c 10000000 		.4byte	.LFE9
 3174 0110 0400     		.2byte	0x4
 3175 0112 F3       		.byte	0xf3
 3176 0113 01       		.uleb128 0x1
 3177 0114 50       		.byte	0x50
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 102


 3178 0115 9F       		.byte	0x9f
 3179 0116 00000000 		.4byte	0
 3180 011a 00000000 		.4byte	0
 3181              	.LLST10:
 3182 011e 00000000 		.4byte	.LVL40
 3183 0122 0C000000 		.4byte	.LVL42
 3184 0126 0100     		.2byte	0x1
 3185 0128 50       		.byte	0x50
 3186 0129 0C000000 		.4byte	.LVL42
 3187 012d 20000000 		.4byte	.LVL47
 3188 0131 0400     		.2byte	0x4
 3189 0133 F3       		.byte	0xf3
 3190 0134 01       		.uleb128 0x1
 3191 0135 50       		.byte	0x50
 3192 0136 9F       		.byte	0x9f
 3193 0137 20000000 		.4byte	.LVL47
 3194 013b 22000000 		.4byte	.LVL48
 3195 013f 0100     		.2byte	0x1
 3196 0141 50       		.byte	0x50
 3197 0142 22000000 		.4byte	.LVL48
 3198 0146 28000000 		.4byte	.LFE10
 3199 014a 0400     		.2byte	0x4
 3200 014c F3       		.byte	0xf3
 3201 014d 01       		.uleb128 0x1
 3202 014e 50       		.byte	0x50
 3203 014f 9F       		.byte	0x9f
 3204 0150 00000000 		.4byte	0
 3205 0154 00000000 		.4byte	0
 3206              	.LLST11:
 3207 0158 00000000 		.4byte	.LVL40
 3208 015c 22000000 		.4byte	.LVL48
 3209 0160 0200     		.2byte	0x2
 3210 0162 30       		.byte	0x30
 3211 0163 9F       		.byte	0x9f
 3212 0164 22000000 		.4byte	.LVL48
 3213 0168 28000000 		.4byte	.LFE10
 3214 016c 0100     		.2byte	0x1
 3215 016e 50       		.byte	0x50
 3216 016f 00000000 		.4byte	0
 3217 0173 00000000 		.4byte	0
 3218              	.LLST12:
 3219 0177 06000000 		.4byte	.LVL41
 3220 017b 0C000000 		.4byte	.LVL42
 3221 017f 0100     		.2byte	0x1
 3222 0181 50       		.byte	0x50
 3223 0182 0C000000 		.4byte	.LVL42
 3224 0186 1E000000 		.4byte	.LVL46
 3225 018a 0400     		.2byte	0x4
 3226 018c F3       		.byte	0xf3
 3227 018d 01       		.uleb128 0x1
 3228 018e 50       		.byte	0x50
 3229 018f 9F       		.byte	0x9f
 3230 0190 00000000 		.4byte	0
 3231 0194 00000000 		.4byte	0
 3232              	.LLST13:
 3233 0198 10000000 		.4byte	.LVL43
 3234 019c 16000000 		.4byte	.LVL44
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 103


 3235 01a0 0800     		.2byte	0x8
 3236 01a2 70       		.byte	0x70
 3237 01a3 00       		.sleb128 0
 3238 01a4 3F       		.byte	0x3f
 3239 01a5 1A       		.byte	0x1a
 3240 01a6 08       		.byte	0x8
 3241 01a7 FF       		.byte	0xff
 3242 01a8 1A       		.byte	0x1a
 3243 01a9 9F       		.byte	0x9f
 3244 01aa 16000000 		.4byte	.LVL44
 3245 01ae 1A000000 		.4byte	.LVL45
 3246 01b2 0B00     		.2byte	0xb
 3247 01b4 73       		.byte	0x73
 3248 01b5 00       		.sleb128 0
 3249 01b6 08       		.byte	0x8
 3250 01b7 FF       		.byte	0xff
 3251 01b8 1A       		.byte	0x1a
 3252 01b9 70       		.byte	0x70
 3253 01ba 00       		.sleb128 0
 3254 01bb 38       		.byte	0x38
 3255 01bc 24       		.byte	0x24
 3256 01bd 21       		.byte	0x21
 3257 01be 9F       		.byte	0x9f
 3258 01bf 00000000 		.4byte	0
 3259 01c3 00000000 		.4byte	0
 3260              	.LLST14:
 3261 01c7 00000000 		.4byte	.LVL49
 3262 01cb 4A000000 		.4byte	.LVL53
 3263 01cf 0100     		.2byte	0x1
 3264 01d1 50       		.byte	0x50
 3265 01d2 4A000000 		.4byte	.LVL53
 3266 01d6 56000000 		.4byte	.LVL54
 3267 01da 0400     		.2byte	0x4
 3268 01dc F3       		.byte	0xf3
 3269 01dd 01       		.uleb128 0x1
 3270 01de 50       		.byte	0x50
 3271 01df 9F       		.byte	0x9f
 3272 01e0 56000000 		.4byte	.LVL54
 3273 01e4 7C000000 		.4byte	.LFE11
 3274 01e8 0100     		.2byte	0x1
 3275 01ea 50       		.byte	0x50
 3276 01eb 00000000 		.4byte	0
 3277 01ef 00000000 		.4byte	0
 3278              	.LLST15:
 3279 01f3 00000000 		.4byte	.LVL49
 3280 01f7 28000000 		.4byte	.LVL50
 3281 01fb 0100     		.2byte	0x1
 3282 01fd 52       		.byte	0x52
 3283 01fe 28000000 		.4byte	.LVL50
 3284 0202 32000000 		.4byte	.LVL51
 3285 0206 0400     		.2byte	0x4
 3286 0208 F3       		.byte	0xf3
 3287 0209 01       		.uleb128 0x1
 3288 020a 52       		.byte	0x52
 3289 020b 9F       		.byte	0x9f
 3290 020c 32000000 		.4byte	.LVL51
 3291 0210 46000000 		.4byte	.LVL52
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 104


 3292 0214 0100     		.2byte	0x1
 3293 0216 52       		.byte	0x52
 3294 0217 56000000 		.4byte	.LVL54
 3295 021b 7C000000 		.4byte	.LFE11
 3296 021f 0100     		.2byte	0x1
 3297 0221 52       		.byte	0x52
 3298 0222 00000000 		.4byte	0
 3299 0226 00000000 		.4byte	0
 3300              	.LLST16:
 3301 022a 5C000000 		.4byte	.LVL55
 3302 022e 68000000 		.4byte	.LVL56
 3303 0232 0600     		.2byte	0x6
 3304 0234 76       		.byte	0x76
 3305 0235 00       		.sleb128 0
 3306 0236 71       		.byte	0x71
 3307 0237 00       		.sleb128 0
 3308 0238 1C       		.byte	0x1c
 3309 0239 9F       		.byte	0x9f
 3310 023a 6A000000 		.4byte	.LVL57
 3311 023e 6C000000 		.4byte	.LVL58
 3312 0242 0600     		.2byte	0x6
 3313 0244 76       		.byte	0x76
 3314 0245 00       		.sleb128 0
 3315 0246 71       		.byte	0x71
 3316 0247 00       		.sleb128 0
 3317 0248 1C       		.byte	0x1c
 3318 0249 9F       		.byte	0x9f
 3319 024a 00000000 		.4byte	0
 3320 024e 00000000 		.4byte	0
 3321              	.LLST17:
 3322 0252 00000000 		.4byte	.LVL59
 3323 0256 1A000000 		.4byte	.LVL60
 3324 025a 0100     		.2byte	0x1
 3325 025c 50       		.byte	0x50
 3326 025d 1A000000 		.4byte	.LVL60
 3327 0261 28000000 		.4byte	.LFE13
 3328 0265 0400     		.2byte	0x4
 3329 0267 F3       		.byte	0xf3
 3330 0268 01       		.uleb128 0x1
 3331 0269 50       		.byte	0x50
 3332 026a 9F       		.byte	0x9f
 3333 026b 00000000 		.4byte	0
 3334 026f 00000000 		.4byte	0
 3335              	.LLST18:
 3336 0273 00000000 		.4byte	.LVL61
 3337 0277 11000000 		.4byte	.LVL62-1
 3338 027b 0100     		.2byte	0x1
 3339 027d 50       		.byte	0x50
 3340 027e 11000000 		.4byte	.LVL62-1
 3341 0282 3E000000 		.4byte	.LVL68
 3342 0286 0400     		.2byte	0x4
 3343 0288 F3       		.byte	0xf3
 3344 0289 01       		.uleb128 0x1
 3345 028a 50       		.byte	0x50
 3346 028b 9F       		.byte	0x9f
 3347 028c 3E000000 		.4byte	.LVL68
 3348 0290 44000000 		.4byte	.LVL69
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 105


 3349 0294 0100     		.2byte	0x1
 3350 0296 50       		.byte	0x50
 3351 0297 44000000 		.4byte	.LVL69
 3352 029b 4C000000 		.4byte	.LFE12
 3353 029f 0400     		.2byte	0x4
 3354 02a1 F3       		.byte	0xf3
 3355 02a2 01       		.uleb128 0x1
 3356 02a3 50       		.byte	0x50
 3357 02a4 9F       		.byte	0x9f
 3358 02a5 00000000 		.4byte	0
 3359 02a9 00000000 		.4byte	0
 3360              	.LLST19:
 3361 02ad 00000000 		.4byte	.LVL61
 3362 02b1 11000000 		.4byte	.LVL62-1
 3363 02b5 0100     		.2byte	0x1
 3364 02b7 51       		.byte	0x51
 3365 02b8 11000000 		.4byte	.LVL62-1
 3366 02bc 3E000000 		.4byte	.LVL68
 3367 02c0 0400     		.2byte	0x4
 3368 02c2 F3       		.byte	0xf3
 3369 02c3 01       		.uleb128 0x1
 3370 02c4 51       		.byte	0x51
 3371 02c5 9F       		.byte	0x9f
 3372 02c6 3E000000 		.4byte	.LVL68
 3373 02ca 44000000 		.4byte	.LVL69
 3374 02ce 0100     		.2byte	0x1
 3375 02d0 51       		.byte	0x51
 3376 02d1 44000000 		.4byte	.LVL69
 3377 02d5 4C000000 		.4byte	.LFE12
 3378 02d9 0400     		.2byte	0x4
 3379 02db F3       		.byte	0xf3
 3380 02dc 01       		.uleb128 0x1
 3381 02dd 51       		.byte	0x51
 3382 02de 9F       		.byte	0x9f
 3383 02df 00000000 		.4byte	0
 3384 02e3 00000000 		.4byte	0
 3385              	.LLST20:
 3386 02e7 00000000 		.4byte	.LVL61
 3387 02eb 11000000 		.4byte	.LVL62-1
 3388 02ef 0100     		.2byte	0x1
 3389 02f1 52       		.byte	0x52
 3390 02f2 11000000 		.4byte	.LVL62-1
 3391 02f6 1E000000 		.4byte	.LVL64
 3392 02fa 0400     		.2byte	0x4
 3393 02fc F3       		.byte	0xf3
 3394 02fd 01       		.uleb128 0x1
 3395 02fe 52       		.byte	0x52
 3396 02ff 9F       		.byte	0x9f
 3397 0300 1E000000 		.4byte	.LVL64
 3398 0304 3E000000 		.4byte	.LVL68
 3399 0308 0100     		.2byte	0x1
 3400 030a 54       		.byte	0x54
 3401 030b 3E000000 		.4byte	.LVL68
 3402 030f 44000000 		.4byte	.LVL69
 3403 0313 0100     		.2byte	0x1
 3404 0315 52       		.byte	0x52
 3405 0316 44000000 		.4byte	.LVL69
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 106


 3406 031a 48000000 		.4byte	.LVL70
 3407 031e 0100     		.2byte	0x1
 3408 0320 54       		.byte	0x54
 3409 0321 00000000 		.4byte	0
 3410 0325 00000000 		.4byte	0
 3411              	.LLST21:
 3412 0329 1E000000 		.4byte	.LVL64
 3413 032d 26000000 		.4byte	.LVL65
 3414 0331 0200     		.2byte	0x2
 3415 0333 30       		.byte	0x30
 3416 0334 9F       		.byte	0x9f
 3417 0335 26000000 		.4byte	.LVL65
 3418 0339 3B000000 		.4byte	.LVL67-1
 3419 033d 0700     		.2byte	0x7
 3420 033f 72       		.byte	0x72
 3421 0340 00       		.sleb128 0
 3422 0341 F3       		.byte	0xf3
 3423 0342 01       		.uleb128 0x1
 3424 0343 51       		.byte	0x51
 3425 0344 1C       		.byte	0x1c
 3426 0345 9F       		.byte	0x9f
 3427 0346 00000000 		.4byte	0
 3428 034a 00000000 		.4byte	0
 3429              	.LLST22:
 3430 034e 00000000 		.4byte	.LVL71
 3431 0352 0A000000 		.4byte	.LVL72
 3432 0356 0100     		.2byte	0x1
 3433 0358 50       		.byte	0x50
 3434 0359 0A000000 		.4byte	.LVL72
 3435 035d 14000000 		.4byte	.LFE14
 3436 0361 0400     		.2byte	0x4
 3437 0363 F3       		.byte	0xf3
 3438 0364 01       		.uleb128 0x1
 3439 0365 50       		.byte	0x50
 3440 0366 9F       		.byte	0x9f
 3441 0367 00000000 		.4byte	0
 3442 036b 00000000 		.4byte	0
 3443              	.LLST23:
 3444 036f 00000000 		.4byte	.LVL74
 3445 0373 0A000000 		.4byte	.LVL75
 3446 0377 0100     		.2byte	0x1
 3447 0379 50       		.byte	0x50
 3448 037a 0A000000 		.4byte	.LVL75
 3449 037e 1C000000 		.4byte	.LFE16
 3450 0382 0400     		.2byte	0x4
 3451 0384 F3       		.byte	0xf3
 3452 0385 01       		.uleb128 0x1
 3453 0386 50       		.byte	0x50
 3454 0387 9F       		.byte	0x9f
 3455 0388 00000000 		.4byte	0
 3456 038c 00000000 		.4byte	0
 3457              	.LLST24:
 3458 0390 00000000 		.4byte	.LVL74
 3459 0394 14000000 		.4byte	.LVL76
 3460 0398 0200     		.2byte	0x2
 3461 039a 30       		.byte	0x30
 3462 039b 9F       		.byte	0x9f
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 107


 3463 039c 14000000 		.4byte	.LVL76
 3464 03a0 1C000000 		.4byte	.LFE16
 3465 03a4 0100     		.2byte	0x1
 3466 03a6 50       		.byte	0x50
 3467 03a7 00000000 		.4byte	0
 3468 03ab 00000000 		.4byte	0
 3469              	.LLST25:
 3470 03af 00000000 		.4byte	.LVL79
 3471 03b3 04000000 		.4byte	.LVL80
 3472 03b7 0200     		.2byte	0x2
 3473 03b9 30       		.byte	0x30
 3474 03ba 9F       		.byte	0x9f
 3475 03bb 04000000 		.4byte	.LVL80
 3476 03bf 08000000 		.4byte	.LVL81
 3477 03c3 0900     		.2byte	0x9
 3478 03c5 70       		.byte	0x70
 3479 03c6 00       		.sleb128 0
 3480 03c7 32       		.byte	0x32
 3481 03c8 1A       		.byte	0x1a
 3482 03c9 48       		.byte	0x48
 3483 03ca 24       		.byte	0x24
 3484 03cb 30       		.byte	0x30
 3485 03cc 2E       		.byte	0x2e
 3486 03cd 9F       		.byte	0x9f
 3487 03ce 00000000 		.4byte	0
 3488 03d2 00000000 		.4byte	0
 3489              		.section	.debug_aranges,"",%progbits
 3490 0000 C4000000 		.4byte	0xc4
 3491 0004 0200     		.2byte	0x2
 3492 0006 00000000 		.4byte	.Ldebug_info0
 3493 000a 04       		.byte	0x4
 3494 000b 00       		.byte	0
 3495 000c 0000     		.2byte	0
 3496 000e 0000     		.2byte	0
 3497 0010 00000000 		.4byte	.LFB1
 3498 0014 3C010000 		.4byte	.LFE1-.LFB1
 3499 0018 00000000 		.4byte	.LFB2
 3500 001c A4000000 		.4byte	.LFE2-.LFB2
 3501 0020 00000000 		.4byte	.LFB0
 3502 0024 24000000 		.4byte	.LFE0-.LFB0
 3503 0028 00000000 		.4byte	.LFB3
 3504 002c 4C000000 		.4byte	.LFE3-.LFB3
 3505 0030 00000000 		.4byte	.LFB4
 3506 0034 B8000000 		.4byte	.LFE4-.LFB4
 3507 0038 00000000 		.4byte	.LFB5
 3508 003c 18000000 		.4byte	.LFE5-.LFB5
 3509 0040 00000000 		.4byte	.LFB6
 3510 0044 0C000000 		.4byte	.LFE6-.LFB6
 3511 0048 00000000 		.4byte	.LFB7
 3512 004c 18000000 		.4byte	.LFE7-.LFB7
 3513 0050 00000000 		.4byte	.LFB8
 3514 0054 0C000000 		.4byte	.LFE8-.LFB8
 3515 0058 00000000 		.4byte	.LFB9
 3516 005c 10000000 		.4byte	.LFE9-.LFB9
 3517 0060 00000000 		.4byte	.LFB10
 3518 0064 28000000 		.4byte	.LFE10-.LFB10
 3519 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 108


 3520 006c 7C000000 		.4byte	.LFE11-.LFB11
 3521 0070 00000000 		.4byte	.LFB13
 3522 0074 28000000 		.4byte	.LFE13-.LFB13
 3523 0078 00000000 		.4byte	.LFB12
 3524 007c 4C000000 		.4byte	.LFE12-.LFB12
 3525 0080 00000000 		.4byte	.LFB14
 3526 0084 14000000 		.4byte	.LFE14-.LFB14
 3527 0088 00000000 		.4byte	.LFB15
 3528 008c 0C000000 		.4byte	.LFE15-.LFB15
 3529 0090 00000000 		.4byte	.LFB16
 3530 0094 1C000000 		.4byte	.LFE16-.LFB16
 3531 0098 00000000 		.4byte	.LFB17
 3532 009c 18000000 		.4byte	.LFE17-.LFB17
 3533 00a0 00000000 		.4byte	.LFB18
 3534 00a4 10000000 		.4byte	.LFE18-.LFB18
 3535 00a8 00000000 		.4byte	.LFB19
 3536 00ac 10000000 		.4byte	.LFE19-.LFB19
 3537 00b0 00000000 		.4byte	.LFB20
 3538 00b4 10000000 		.4byte	.LFE20-.LFB20
 3539 00b8 00000000 		.4byte	.LFB21
 3540 00bc 10000000 		.4byte	.LFE21-.LFB21
 3541 00c0 00000000 		.4byte	0
 3542 00c4 00000000 		.4byte	0
 3543              		.section	.debug_ranges,"",%progbits
 3544              	.Ldebug_ranges0:
 3545 0000 00000000 		.4byte	.LFB1
 3546 0004 3C010000 		.4byte	.LFE1
 3547 0008 00000000 		.4byte	.LFB2
 3548 000c A4000000 		.4byte	.LFE2
 3549 0010 00000000 		.4byte	.LFB0
 3550 0014 24000000 		.4byte	.LFE0
 3551 0018 00000000 		.4byte	.LFB3
 3552 001c 4C000000 		.4byte	.LFE3
 3553 0020 00000000 		.4byte	.LFB4
 3554 0024 B8000000 		.4byte	.LFE4
 3555 0028 00000000 		.4byte	.LFB5
 3556 002c 18000000 		.4byte	.LFE5
 3557 0030 00000000 		.4byte	.LFB6
 3558 0034 0C000000 		.4byte	.LFE6
 3559 0038 00000000 		.4byte	.LFB7
 3560 003c 18000000 		.4byte	.LFE7
 3561 0040 00000000 		.4byte	.LFB8
 3562 0044 0C000000 		.4byte	.LFE8
 3563 0048 00000000 		.4byte	.LFB9
 3564 004c 10000000 		.4byte	.LFE9
 3565 0050 00000000 		.4byte	.LFB10
 3566 0054 28000000 		.4byte	.LFE10
 3567 0058 00000000 		.4byte	.LFB11
 3568 005c 7C000000 		.4byte	.LFE11
 3569 0060 00000000 		.4byte	.LFB13
 3570 0064 28000000 		.4byte	.LFE13
 3571 0068 00000000 		.4byte	.LFB12
 3572 006c 4C000000 		.4byte	.LFE12
 3573 0070 00000000 		.4byte	.LFB14
 3574 0074 14000000 		.4byte	.LFE14
 3575 0078 00000000 		.4byte	.LFB15
 3576 007c 0C000000 		.4byte	.LFE15
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 109


 3577 0080 00000000 		.4byte	.LFB16
 3578 0084 1C000000 		.4byte	.LFE16
 3579 0088 00000000 		.4byte	.LFB17
 3580 008c 18000000 		.4byte	.LFE17
 3581 0090 00000000 		.4byte	.LFB18
 3582 0094 10000000 		.4byte	.LFE18
 3583 0098 00000000 		.4byte	.LFB19
 3584 009c 10000000 		.4byte	.LFE19
 3585 00a0 00000000 		.4byte	.LFB20
 3586 00a4 10000000 		.4byte	.LFE20
 3587 00a8 00000000 		.4byte	.LFB21
 3588 00ac 10000000 		.4byte	.LFE21
 3589 00b0 00000000 		.4byte	0
 3590 00b4 00000000 		.4byte	0
 3591              		.section	.debug_line,"",%progbits
 3592              	.Ldebug_line0:
 3593 0000 FC020000 		.section	.debug_str,"MS",%progbits,1
 3593      02007D00 
 3593      00000201 
 3593      FB0E0D00 
 3593      01010101 
 3594              	.LASF22:
 3595 0000 6570546F 		.ascii	"epToggle\000"
 3595      67676C65 
 3595      00
 3596              	.LASF58:
 3597 0009 696E7465 		.ascii	"interfaceNumber\000"
 3597      72666163 
 3597      654E756D 
 3597      62657200 
 3598              	.LASF101:
 3599 0019 636E7472 		.ascii	"cntr\000"
 3599      00
 3600              	.LASF56:
 3601 001e 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3601      4152545F 
 3601      4973436F 
 3601      6E666967 
 3601      75726174 
 3602              	.LASF82:
 3603 003d 55534255 		.ascii	"USBUART_configuration\000"
 3603      4152545F 
 3603      636F6E66 
 3603      69677572 
 3603      6174696F 
 3604              	.LASF99:
 3605 0053 433A5C55 		.ascii	"C:\\Users\\Kiwi\\Documents\\PSoC Creator\\DTR-1 v2 "
 3605      73657273 
 3605      5C4B6977 
 3605      695C446F 
 3605      63756D65 
 3606 0081 48572E63 		.ascii	"HW.cydsn\000"
 3606      7964736E 
 3606      00
 3607              	.LASF92:
 3608 008a 43794578 		.ascii	"CyExitCriticalSection\000"
 3608      69744372 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 110


 3608      69746963 
 3608      616C5365 
 3608      6374696F 
 3609              	.LASF62:
 3610 00a0 70446174 		.ascii	"pData\000"
 3610      6100
 3611              	.LASF34:
 3612 00a6 6570496E 		.ascii	"epIntEn\000"
 3612      74456E00 
 3613              	.LASF2:
 3614 00ae 73686F72 		.ascii	"short int\000"
 3614      7420696E 
 3614      7400
 3615              	.LASF18:
 3616 00b8 73697A65 		.ascii	"sizetype\000"
 3616      74797065 
 3616      00
 3617              	.LASF46:
 3618 00c1 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3618      4152545F 
 3618      6172625F 
 3618      6570735F 
 3618      73747275 
 3619              	.LASF24:
 3620 00d8 65704D6F 		.ascii	"epMode\000"
 3620      646500
 3621              	.LASF45:
 3622 00df 61726245 		.ascii	"arbEp\000"
 3622      7000
 3623              	.LASF71:
 3624 00e5 706F7765 		.ascii	"powerStatus\000"
 3624      72537461 
 3624      74757300 
 3625              	.LASF17:
 3626 00f1 6C6F6E67 		.ascii	"long double\000"
 3626      20646F75 
 3626      626C6500 
 3627              	.LASF72:
 3628 00fd 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3628      4152545F 
 3628      52575545 
 3628      6E61626C 
 3628      656400
 3629              	.LASF50:
 3630 0110 6D6F6465 		.ascii	"mode\000"
 3630      00
 3631              	.LASF44:
 3632 0115 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3632      4152545F 
 3632      7369655F 
 3632      6570735F 
 3632      73747275 
 3633              	.LASF77:
 3634 012c 55534255 		.ascii	"USBUART_EnableSofInt\000"
 3634      4152545F 
 3634      456E6162 
 3634      6C65536F 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 111


 3634      66496E74 
 3635              	.LASF51:
 3636 0141 55534255 		.ascii	"USBUART_Start\000"
 3636      4152545F 
 3636      53746172 
 3636      7400
 3637              	.LASF86:
 3638 014f 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3638      4152545F 
 3638      696E7465 
 3638      72666163 
 3638      65536574 
 3639              	.LASF10:
 3640 0168 75696E74 		.ascii	"uint16\000"
 3640      313600
 3641              	.LASF39:
 3642 016f 72775261 		.ascii	"rwRa\000"
 3642      00
 3643              	.LASF70:
 3644 0174 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3644      4152545F 
 3644      53657450 
 3644      6F776572 
 3644      53746174 
 3645              	.LASF32:
 3646 018b 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3646      4152545F 
 3646      7369655F 
 3646      65705F73 
 3646      74727563 
 3647              	.LASF93:
 3648 01a1 4379496E 		.ascii	"CyIntSetPriority\000"
 3648      74536574 
 3648      5072696F 
 3648      72697479 
 3648      00
 3649              	.LASF43:
 3650 01b2 73696545 		.ascii	"sieEp\000"
 3650      7000
 3651              	.LASF84:
 3652 01b8 55534255 		.ascii	"USBUART_deviceStatus\000"
 3652      4152545F 
 3652      64657669 
 3652      63655374 
 3652      61747573 
 3653              	.LASF81:
 3654 01cd 55534255 		.ascii	"USBUART_transferState\000"
 3654      4152545F 
 3654      7472616E 
 3654      73666572 
 3654      53746174 
 3655              	.LASF63:
 3656 01e3 6C656E67 		.ascii	"length\000"
 3656      746800
 3657              	.LASF49:
 3658 01ea 64657669 		.ascii	"device\000"
 3658      636500
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 112


 3659              	.LASF12:
 3660 01f1 666C6F61 		.ascii	"float\000"
 3660      7400
 3661              	.LASF74:
 3662 01f7 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3662      4152545F 
 3662      47657443 
 3662      6F6E6669 
 3662      67757261 
 3663              	.LASF64:
 3664 0210 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3664      4152545F 
 3664      456E6162 
 3664      6C654F75 
 3664      74455000 
 3665              	.LASF78:
 3666 0224 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3666      4152545F 
 3666      44697361 
 3666      626C6553 
 3666      6F66496E 
 3667              	.LASF6:
 3668 023a 6C6F6E67 		.ascii	"long long int\000"
 3668      206C6F6E 
 3668      6720696E 
 3668      7400
 3669              	.LASF83:
 3670 0248 55534255 		.ascii	"USBUART_configurationChanged\000"
 3670      4152545F 
 3670      636F6E66 
 3670      69677572 
 3670      6174696F 
 3671              	.LASF31:
 3672 0265 65704372 		.ascii	"epCr0\000"
 3672      3000
 3673              	.LASF33:
 3674 026b 65704366 		.ascii	"epCfg\000"
 3674      6700
 3675              	.LASF98:
 3676 0271 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3676      72617465 
 3676      645F536F 
 3676      75726365 
 3676      5C50536F 
 3677              	.LASF80:
 3678 0292 55534255 		.ascii	"USBUART_device\000"
 3678      4152545F 
 3678      64657669 
 3678      636500
 3679              	.LASF73:
 3680 02a1 72657375 		.ascii	"result\000"
 3680      6C7400
 3681              	.LASF65:
 3682 02a8 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3682      4152545F 
 3682      52656164 
 3682      4F757445 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 113


 3682      5000
 3683              	.LASF69:
 3684 02ba 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3684      4152545F 
 3684      47657445 
 3684      5041636B 
 3684      53746174 
 3685              	.LASF87:
 3686 02d0 55534255 		.ascii	"USBUART_deviceAddress\000"
 3686      4152545F 
 3686      64657669 
 3686      63654164 
 3686      64726573 
 3687              	.LASF25:
 3688 02e6 62756666 		.ascii	"buffOffset\000"
 3688      4F666673 
 3688      657400
 3689              	.LASF91:
 3690 02f1 43794465 		.ascii	"CyDelayUs\000"
 3690      6C617955 
 3690      7300
 3691              	.LASF1:
 3692 02fb 756E7369 		.ascii	"unsigned char\000"
 3692      676E6564 
 3692      20636861 
 3692      7200
 3693              	.LASF35:
 3694 0309 65705372 		.ascii	"epSr\000"
 3694      00
 3695              	.LASF47:
 3696 030e 55534255 		.ascii	"USBUART_Init\000"
 3696      4152545F 
 3696      496E6974 
 3696      00
 3697              	.LASF0:
 3698 031b 7369676E 		.ascii	"signed char\000"
 3698      65642063 
 3698      68617200 
 3699              	.LASF76:
 3700 0327 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3700      4152545F 
 3700      5265496E 
 3700      6974436F 
 3700      6D706F6E 
 3701              	.LASF7:
 3702 033f 6C6F6E67 		.ascii	"long long unsigned int\000"
 3702      206C6F6E 
 3702      6720756E 
 3702      7369676E 
 3702      65642069 
 3703              	.LASF42:
 3704 0356 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3704      4152545F 
 3704      6172625F 
 3704      65705F73 
 3704      74727563 
 3705              	.LASF8:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 114


 3706 036c 756E7369 		.ascii	"unsigned int\000"
 3706      676E6564 
 3706      20696E74 
 3706      00
 3707              	.LASF41:
 3708 0379 72774472 		.ascii	"rwDr\000"
 3708      00
 3709              	.LASF37:
 3710 037e 72775761 		.ascii	"rwWa\000"
 3710      00
 3711              	.LASF95:
 3712 0383 43794465 		.ascii	"CyDelayCycles\000"
 3712      6C617943 
 3712      79636C65 
 3712      7300
 3713              	.LASF97:
 3714 0391 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3714      43313120 
 3714      352E342E 
 3714      31203230 
 3714      31363036 
 3715 03c4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3715      20726576 
 3715      6973696F 
 3715      6E203233 
 3715      37373135 
 3716 03f7 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3716      66756E63 
 3716      74696F6E 
 3716      2D736563 
 3716      74696F6E 
 3717              	.LASF16:
 3718 041f 72656733 		.ascii	"reg32\000"
 3718      3200
 3719              	.LASF89:
 3720 0425 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3720      4152545F 
 3720      6C617374 
 3720      5061636B 
 3720      65745369 
 3721              	.LASF3:
 3722 043c 73686F72 		.ascii	"short unsigned int\000"
 3722      7420756E 
 3722      7369676E 
 3722      65642069 
 3722      6E7400
 3723              	.LASF40:
 3724 044f 72775261 		.ascii	"rwRaMsb\000"
 3724      4D736200 
 3725              	.LASF19:
 3726 0457 61747472 		.ascii	"attrib\000"
 3726      696200
 3727              	.LASF61:
 3728 045e 55534255 		.ascii	"USBUART_LoadInEP\000"
 3728      4152545F 
 3728      4C6F6164 
 3728      496E4550 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 115


 3728      00
 3729              	.LASF14:
 3730 046f 63686172 		.ascii	"char\000"
 3730      00
 3731              	.LASF4:
 3732 0474 6C6F6E67 		.ascii	"long int\000"
 3732      20696E74 
 3732      00
 3733              	.LASF59:
 3734 047d 55534255 		.ascii	"USBUART_GetEPState\000"
 3734      4152545F 
 3734      47657445 
 3734      50537461 
 3734      746500
 3735              	.LASF60:
 3736 0490 65704E75 		.ascii	"epNumber\000"
 3736      6D626572 
 3736      00
 3737              	.LASF79:
 3738 0499 55534255 		.ascii	"USBUART_initVar\000"
 3738      4152545F 
 3738      696E6974 
 3738      56617200 
 3739              	.LASF23:
 3740 04a9 61646472 		.ascii	"addr\000"
 3740      00
 3741              	.LASF29:
 3742 04ae 6570436E 		.ascii	"epCnt0\000"
 3742      743000
 3743              	.LASF9:
 3744 04b5 75696E74 		.ascii	"uint8\000"
 3744      3800
 3745              	.LASF54:
 3746 04bb 63723152 		.ascii	"cr1Reg\000"
 3746      656700
 3747              	.LASF30:
 3748 04c2 6570436E 		.ascii	"epCnt1\000"
 3748      743100
 3749              	.LASF21:
 3750 04c9 68774570 		.ascii	"hwEpState\000"
 3750      53746174 
 3750      6500
 3751              	.LASF11:
 3752 04d3 75696E74 		.ascii	"uint32\000"
 3752      333200
 3753              	.LASF15:
 3754 04da 72656738 		.ascii	"reg8\000"
 3754      00
 3755              	.LASF5:
 3756 04df 6C6F6E67 		.ascii	"long unsigned int\000"
 3756      20756E73 
 3756      69676E65 
 3756      6420696E 
 3756      7400
 3757              	.LASF13:
 3758 04f1 646F7562 		.ascii	"double\000"
 3758      6C6500
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 116


 3759              	.LASF75:
 3760 04f8 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3760      4152545F 
 3760      47657444 
 3760      65766963 
 3760      65416464 
 3761              	.LASF57:
 3762 0511 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3762      4152545F 
 3762      47657449 
 3762      6E746572 
 3762      66616365 
 3763              	.LASF20:
 3764 052d 61706945 		.ascii	"apiEpState\000"
 3764      70537461 
 3764      746500
 3765              	.LASF96:
 3766 0538 55534255 		.ascii	"USBUART_Dp_ClearInterrupt\000"
 3766      4152545F 
 3766      44705F43 
 3766      6C656172 
 3766      496E7465 
 3767              	.LASF26:
 3768 0552 62756666 		.ascii	"bufferSize\000"
 3768      65725369 
 3768      7A6500
 3769              	.LASF48:
 3770 055d 55534255 		.ascii	"USBUART_InitComponent\000"
 3770      4152545F 
 3770      496E6974 
 3770      436F6D70 
 3770      6F6E656E 
 3771              	.LASF28:
 3772 0573 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3772      42554152 
 3772      545F4550 
 3772      5F43544C 
 3772      5F424C4F 
 3773              	.LASF94:
 3774 058a 4379496E 		.ascii	"CyIntSetVector\000"
 3774      74536574 
 3774      56656374 
 3774      6F7200
 3775              	.LASF55:
 3776 0599 55534255 		.ascii	"USBUART_CheckActivity\000"
 3776      4152545F 
 3776      43686563 
 3776      6B416374 
 3776      69766974 
 3777              	.LASF100:
 3778 05af 55534255 		.ascii	"USBUART_GetEPCount\000"
 3778      4152545F 
 3778      47657445 
 3778      50436F75 
 3778      6E7400
 3779              	.LASF90:
 3780 05c2 4379456E 		.ascii	"CyEnterCriticalSection\000"
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccDoFu4y.s 			page 117


 3780      74657243 
 3780      72697469 
 3780      63616C53 
 3780      65637469 
 3781              	.LASF85:
 3782 05d9 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3782      4152545F 
 3782      696E7465 
 3782      72666163 
 3782      654E756D 
 3783              	.LASF38:
 3784 05f1 72775761 		.ascii	"rwWaMsb\000"
 3784      4D736200 
 3785              	.LASF67:
 3786 05f9 55534255 		.ascii	"USBUART_Force\000"
 3786      4152545F 
 3786      466F7263 
 3786      6500
 3787              	.LASF36:
 3788 0607 72657365 		.ascii	"reserved\000"
 3788      72766564 
 3788      00
 3789              	.LASF27:
 3790 0610 696E7465 		.ascii	"interface\000"
 3790      72666163 
 3790      6500
 3791              	.LASF68:
 3792 061a 62537461 		.ascii	"bState\000"
 3792      746500
 3793              	.LASF53:
 3794 0621 656E6162 		.ascii	"enableInterrupts\000"
 3794      6C65496E 
 3794      74657272 
 3794      75707473 
 3794      00
 3795              	.LASF66:
 3796 0632 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3796      4152545F 
 3796      44697361 
 3796      626C654F 
 3796      75744550 
 3797              	.LASF88:
 3798 0647 55534255 		.ascii	"USBUART_EP\000"
 3798      4152545F 
 3798      455000
 3799              	.LASF52:
 3800 0652 55534255 		.ascii	"USBUART_Stop\000"
 3800      4152545F 
 3800      53746F70 
 3800      00
 3801              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
