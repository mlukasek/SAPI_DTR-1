ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART_episr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USBUART_EP_1_ISR,"ax",%progbits
  20              		.align	1
  21              		.global	USBUART_EP_1_ISR
  22              		.thumb
  23              		.thumb_func
  24              		.type	USBUART_EP_1_ISR, %function
  25              	USBUART_EP_1_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\USBUART_episr.c"
   1:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART_episr.c **** * \file USBUART_episr.c
   3:Generated_Source\PSoC5/USBUART_episr.c **** * \version 3.20
   4:Generated_Source\PSoC5/USBUART_episr.c **** *
   5:Generated_Source\PSoC5/USBUART_episr.c **** * \brief
   6:Generated_Source\PSoC5/USBUART_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:Generated_Source\PSoC5/USBUART_episr.c **** *
   8:Generated_Source\PSoC5/USBUART_episr.c **** ********************************************************************************
   9:Generated_Source\PSoC5/USBUART_episr.c **** * \copyright
  10:Generated_Source\PSoC5/USBUART_episr.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  11:Generated_Source\PSoC5/USBUART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC5/USBUART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC5/USBUART_episr.c **** * the software package with which this file was provided.
  14:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
  15:Generated_Source\PSoC5/USBUART_episr.c **** 
  16:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_pvt.h"
  17:Generated_Source\PSoC5/USBUART_episr.c **** #include "USBUART_cydmac.h"
  18:Generated_Source\PSoC5/USBUART_episr.c **** #include "cyapicallbacks.h"
  19:Generated_Source\PSoC5/USBUART_episr.c **** 
  20:Generated_Source\PSoC5/USBUART_episr.c **** 
  21:Generated_Source\PSoC5/USBUART_episr.c **** /***************************************
  22:Generated_Source\PSoC5/USBUART_episr.c **** * Custom Declarations
  23:Generated_Source\PSoC5/USBUART_episr.c **** ***************************************/
  24:Generated_Source\PSoC5/USBUART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:Generated_Source\PSoC5/USBUART_episr.c **** 
  26:Generated_Source\PSoC5/USBUART_episr.c **** /* `#END` */
  27:Generated_Source\PSoC5/USBUART_episr.c **** 
  28:Generated_Source\PSoC5/USBUART_episr.c **** 
  29:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP1_ISR_ACTIVE)
  30:Generated_Source\PSoC5/USBUART_episr.c ****     /******************************************************************************
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 2


  31:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_1_ISR
  32:Generated_Source\PSoC5/USBUART_episr.c ****     ***************************************************************************//**
  33:Generated_Source\PSoC5/USBUART_episr.c ****     *
  34:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:Generated_Source\PSoC5/USBUART_episr.c ****     *
  36:Generated_Source\PSoC5/USBUART_episr.c ****     ******************************************************************************/
  37:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_1_ISR)
  38:Generated_Source\PSoC5/USBUART_episr.c ****     {
  28              		.loc 1 38 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  39:Generated_Source\PSoC5/USBUART_episr.c **** 
  40:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_ENTRY_CALLBACK
  41:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_EntryCallback();
  42:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_ENTRY_CALLBACK) */
  43:Generated_Source\PSoC5/USBUART_episr.c **** 
  44:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:Generated_Source\PSoC5/USBUART_episr.c **** 
  46:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  47:Generated_Source\PSoC5/USBUART_episr.c **** 
  48:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
  49:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  50:Generated_Source\PSoC5/USBUART_episr.c ****         {
  51:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
  52:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
  54:Generated_Source\PSoC5/USBUART_episr.c ****     
  55:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP1_INTR);
  33              		.loc 1 55 0
  34 0000 084B     		ldr	r3, .L6
  35 0002 0122     		movs	r2, #1
  36 0004 1A70     		strb	r2, [r3]
  56:Generated_Source\PSoC5/USBUART_episr.c ****             
  57:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:Generated_Source\PSoC5/USBUART_episr.c ****         */
  61:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
  62:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP1].addr & USBUART_DIR_IN))
  63:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
  64:Generated_Source\PSoC5/USBUART_episr.c ****         {
  65:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP1].epCr0;
  37              		.loc 1 66 0
  38 0006 0F3B     		subs	r3, r3, #15
  39 0008 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
  67:Generated_Source\PSoC5/USBUART_episr.c ****             
  68:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP1) != USBUART_EP_TYPE_ISOC)
  40              		.loc 1 69 0
  41 000a 074B     		ldr	r3, .L6+4
  42 000c 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
  43 000e 02F00302 		and	r2, r2, #3
  44 0012 012A     		cmp	r2, #1
  70:Generated_Source\PSoC5/USBUART_episr.c ****             {
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 3


  71:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP1].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  45              		.loc 1 71 0
  46 0014 1EBF     		ittt	ne
  47 0016 DA7B     		ldrbne	r2, [r3, #15]	@ zero_extendqisi2
  48 0018 82F08002 		eorne	r2, r2, #128
  49 001c DA73     		strbne	r2, [r3, #15]
  72:Generated_Source\PSoC5/USBUART_episr.c ****             }
  73:Generated_Source\PSoC5/USBUART_episr.c **** 
  74:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
  77:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:Generated_Source\PSoC5/USBUART_episr.c ****             */
  80:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP1].apiEpState = USBUART_EVENT_PENDING;
  50              		.loc 1 80 0
  51 001e 0122     		movs	r2, #1
  52 0020 5A73     		strb	r2, [r3, #13]
  53 0022 7047     		bx	lr
  54              	.L7:
  55              		.align	2
  56              	.L6:
  57 0024 0B600040 		.word	1073766411
  58 0028 00000000 		.word	USBUART_EP
  59              		.cfi_endproc
  60              	.LFE0:
  61              		.size	USBUART_EP_1_ISR, .-USBUART_EP_1_ISR
  62              		.section	.text.USBUART_EP_2_ISR,"ax",%progbits
  63              		.align	1
  64              		.global	USBUART_EP_2_ISR
  65              		.thumb
  66              		.thumb_func
  67              		.type	USBUART_EP_2_ISR, %function
  68              	USBUART_EP_2_ISR:
  69              	.LFB1:
  81:Generated_Source\PSoC5/USBUART_episr.c ****         }
  82:Generated_Source\PSoC5/USBUART_episr.c **** 
  83:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
  84:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
  85:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
  86:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP1)
  87:Generated_Source\PSoC5/USBUART_episr.c ****             {
  88:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
  89:Generated_Source\PSoC5/USBUART_episr.c ****             }
  90:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
  91:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
  92:Generated_Source\PSoC5/USBUART_episr.c ****     
  93:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:Generated_Source\PSoC5/USBUART_episr.c **** 
  95:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
  96:Generated_Source\PSoC5/USBUART_episr.c **** 
  97:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_1_ISR_EXIT_CALLBACK
  98:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_1_ISR_ExitCallback();
  99:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_1_ISR_EXIT_CALLBACK) */
 100:Generated_Source\PSoC5/USBUART_episr.c **** 
 101:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 102:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 4


 103:Generated_Source\PSoC5/USBUART_episr.c ****         
 104:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:Generated_Source\PSoC5/USBUART_episr.c ****         }
 106:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 107:Generated_Source\PSoC5/USBUART_episr.c ****     }
 108:Generated_Source\PSoC5/USBUART_episr.c **** 
 109:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP1_ISR_ACTIVE) */
 110:Generated_Source\PSoC5/USBUART_episr.c **** 
 111:Generated_Source\PSoC5/USBUART_episr.c **** 
 112:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP2_ISR_ACTIVE)
 113:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 114:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_2_ISR
 115:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 116:Generated_Source\PSoC5/USBUART_episr.c ****     *
 117:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:Generated_Source\PSoC5/USBUART_episr.c ****     *
 119:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 120:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_2_ISR)
 121:Generated_Source\PSoC5/USBUART_episr.c ****     {
  70              		.loc 1 121 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
 122:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_ENTRY_CALLBACK
 123:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_EntryCallback();
 124:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_ENTRY_CALLBACK) */
 125:Generated_Source\PSoC5/USBUART_episr.c **** 
 126:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:Generated_Source\PSoC5/USBUART_episr.c **** 
 128:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 129:Generated_Source\PSoC5/USBUART_episr.c **** 
 130:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 131:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 132:Generated_Source\PSoC5/USBUART_episr.c ****         {
 133:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 134:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 136:Generated_Source\PSoC5/USBUART_episr.c **** 
 137:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP2_INTR);
  75              		.loc 1 137 0
  76 0000 094B     		ldr	r3, .L13
  77 0002 0222     		movs	r2, #2
  78 0004 1A70     		strb	r2, [r3]
 138:Generated_Source\PSoC5/USBUART_episr.c **** 
 139:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:Generated_Source\PSoC5/USBUART_episr.c ****         */
 143:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 144:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP2].addr & USBUART_DIR_IN))
 145:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO) */
 146:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 147:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP2].epCr0;
  79              		.loc 1 148 0
  80 0006 0F3B     		subs	r3, r3, #15
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 5


  81 0008 93F82230 		ldrb	r3, [r3, #34]	@ zero_extendqisi2
 149:Generated_Source\PSoC5/USBUART_episr.c ****             
 150:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP2) != USBUART_EP_TYPE_ISOC)
  82              		.loc 1 151 0
  83 000c 074B     		ldr	r3, .L13+4
  84 000e 1A7E     		ldrb	r2, [r3, #24]	@ zero_extendqisi2
  85 0010 02F00302 		and	r2, r2, #3
  86 0014 012A     		cmp	r2, #1
 152:Generated_Source\PSoC5/USBUART_episr.c ****             {
 153:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP2].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
  87              		.loc 1 153 0
  88 0016 1EBF     		ittt	ne
  89 0018 DA7E     		ldrbne	r2, [r3, #27]	@ zero_extendqisi2
  90 001a 82F08002 		eorne	r2, r2, #128
  91 001e DA76     		strbne	r2, [r3, #27]
 154:Generated_Source\PSoC5/USBUART_episr.c ****             }
 155:Generated_Source\PSoC5/USBUART_episr.c **** 
 156:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 159:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:Generated_Source\PSoC5/USBUART_episr.c ****             */
 162:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP2].apiEpState = USBUART_EVENT_PENDING;
  92              		.loc 1 162 0
  93 0020 0122     		movs	r2, #1
  94 0022 5A76     		strb	r2, [r3, #25]
  95 0024 7047     		bx	lr
  96              	.L14:
  97 0026 00BF     		.align	2
  98              	.L13:
  99 0028 0B600040 		.word	1073766411
 100 002c 00000000 		.word	USBUART_EP
 101              		.cfi_endproc
 102              	.LFE1:
 103              		.size	USBUART_EP_2_ISR, .-USBUART_EP_2_ISR
 104              		.section	.text.USBUART_EP_3_ISR,"ax",%progbits
 105              		.align	1
 106              		.global	USBUART_EP_3_ISR
 107              		.thumb
 108              		.thumb_func
 109              		.type	USBUART_EP_3_ISR, %function
 110              	USBUART_EP_3_ISR:
 111              	.LFB2:
 163:Generated_Source\PSoC5/USBUART_episr.c ****         }
 164:Generated_Source\PSoC5/USBUART_episr.c **** 
 165:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 166:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 167:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 168:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP2)
 169:Generated_Source\PSoC5/USBUART_episr.c ****             {
 170:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 171:Generated_Source\PSoC5/USBUART_episr.c ****             }
 172:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 173:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 174:Generated_Source\PSoC5/USBUART_episr.c ****     
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 6


 175:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:Generated_Source\PSoC5/USBUART_episr.c **** 
 177:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 178:Generated_Source\PSoC5/USBUART_episr.c **** 
 179:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_2_ISR_EXIT_CALLBACK
 180:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_2_ISR_ExitCallback();
 181:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_2_ISR_EXIT_CALLBACK) */
 182:Generated_Source\PSoC5/USBUART_episr.c **** 
 183:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 184:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 185:Generated_Source\PSoC5/USBUART_episr.c ****         
 186:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:Generated_Source\PSoC5/USBUART_episr.c ****         }
 188:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 189:Generated_Source\PSoC5/USBUART_episr.c ****     }
 190:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP2_ISR_ACTIVE) */
 191:Generated_Source\PSoC5/USBUART_episr.c **** 
 192:Generated_Source\PSoC5/USBUART_episr.c **** 
 193:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP3_ISR_ACTIVE)
 194:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 195:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_3_ISR
 196:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 197:Generated_Source\PSoC5/USBUART_episr.c ****     *
 198:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:Generated_Source\PSoC5/USBUART_episr.c ****     *
 200:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 201:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_3_ISR)
 202:Generated_Source\PSoC5/USBUART_episr.c ****     {
 112              		.loc 1 202 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 203:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_ENTRY_CALLBACK
 204:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_EntryCallback();
 205:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_ENTRY_CALLBACK) */
 206:Generated_Source\PSoC5/USBUART_episr.c **** 
 207:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:Generated_Source\PSoC5/USBUART_episr.c **** 
 209:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 210:Generated_Source\PSoC5/USBUART_episr.c **** 
 211:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 212:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 213:Generated_Source\PSoC5/USBUART_episr.c ****         {
 214:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 215:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 217:Generated_Source\PSoC5/USBUART_episr.c **** 
 218:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP3_INTR);    
 117              		.loc 1 218 0
 118 0000 0B4B     		ldr	r3, .L20
 119 0002 0422     		movs	r2, #4
 120 0004 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/USBUART_episr.c **** 
 220:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 7


 223:Generated_Source\PSoC5/USBUART_episr.c ****         */
 224:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 225:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP3].addr & USBUART_DIR_IN))
 226:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 227:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 228:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP3].epCr0;
 121              		.loc 1 229 0
 122 0006 0F3B     		subs	r3, r3, #15
 123 0008 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 230:Generated_Source\PSoC5/USBUART_episr.c **** 
 231:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP3) != USBUART_EP_TYPE_ISOC)
 124              		.loc 1 232 0
 125 000c 094B     		ldr	r3, .L20+4
 126 000e 93F82420 		ldrb	r2, [r3, #36]	@ zero_extendqisi2
 127 0012 02F00302 		and	r2, r2, #3
 128 0016 012A     		cmp	r2, #1
 233:Generated_Source\PSoC5/USBUART_episr.c ****             {
 234:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP3].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 129              		.loc 1 234 0
 130 0018 1EBF     		ittt	ne
 131 001a 93F82720 		ldrbne	r2, [r3, #39]	@ zero_extendqisi2
 132 001e 82F08002 		eorne	r2, r2, #128
 133 0022 83F82720 		strbne	r2, [r3, #39]
 235:Generated_Source\PSoC5/USBUART_episr.c ****             }
 236:Generated_Source\PSoC5/USBUART_episr.c **** 
 237:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 240:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:Generated_Source\PSoC5/USBUART_episr.c ****             */
 243:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP3].apiEpState = USBUART_EVENT_PENDING;
 134              		.loc 1 243 0
 135 0026 0122     		movs	r2, #1
 136 0028 83F82520 		strb	r2, [r3, #37]
 137 002c 7047     		bx	lr
 138              	.L21:
 139 002e 00BF     		.align	2
 140              	.L20:
 141 0030 0B600040 		.word	1073766411
 142 0034 00000000 		.word	USBUART_EP
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	USBUART_EP_3_ISR, .-USBUART_EP_3_ISR
 146              		.section	.text.USBUART_SOF_ISR,"ax",%progbits
 147              		.align	1
 148              		.global	USBUART_SOF_ISR
 149              		.thumb
 150              		.thumb_func
 151              		.type	USBUART_SOF_ISR, %function
 152              	USBUART_SOF_ISR:
 153              	.LFB3:
 244:Generated_Source\PSoC5/USBUART_episr.c ****         }
 245:Generated_Source\PSoC5/USBUART_episr.c **** 
 246:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 8


 247:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 248:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 249:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP3)
 250:Generated_Source\PSoC5/USBUART_episr.c ****             {
 251:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 252:Generated_Source\PSoC5/USBUART_episr.c ****             }
 253:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 254:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 255:Generated_Source\PSoC5/USBUART_episr.c **** 
 256:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:Generated_Source\PSoC5/USBUART_episr.c **** 
 258:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 259:Generated_Source\PSoC5/USBUART_episr.c **** 
 260:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_3_ISR_EXIT_CALLBACK
 261:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_3_ISR_ExitCallback();
 262:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_3_ISR_EXIT_CALLBACK) */
 263:Generated_Source\PSoC5/USBUART_episr.c **** 
 264:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 265:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 266:Generated_Source\PSoC5/USBUART_episr.c ****         
 267:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:Generated_Source\PSoC5/USBUART_episr.c ****         }
 269:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 270:Generated_Source\PSoC5/USBUART_episr.c ****     }
 271:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP3_ISR_ACTIVE) */
 272:Generated_Source\PSoC5/USBUART_episr.c **** 
 273:Generated_Source\PSoC5/USBUART_episr.c **** 
 274:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP4_ISR_ACTIVE)
 275:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 276:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_4_ISR
 277:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 278:Generated_Source\PSoC5/USBUART_episr.c ****     *
 279:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:Generated_Source\PSoC5/USBUART_episr.c ****     *
 281:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 282:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_4_ISR)
 283:Generated_Source\PSoC5/USBUART_episr.c ****     {
 284:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_ENTRY_CALLBACK
 285:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_EntryCallback();
 286:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_ENTRY_CALLBACK) */
 287:Generated_Source\PSoC5/USBUART_episr.c **** 
 288:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:Generated_Source\PSoC5/USBUART_episr.c **** 
 290:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 291:Generated_Source\PSoC5/USBUART_episr.c **** 
 292:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 293:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 294:Generated_Source\PSoC5/USBUART_episr.c ****         {
 295:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 296:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 298:Generated_Source\PSoC5/USBUART_episr.c **** 
 299:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP4_INTR);
 300:Generated_Source\PSoC5/USBUART_episr.c ****         
 301:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 9


 304:Generated_Source\PSoC5/USBUART_episr.c ****         */
 305:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 306:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP4].addr & USBUART_DIR_IN))
 307:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 308:Generated_Source\PSoC5/USBUART_episr.c ****         {
 309:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP4].epCr0;
 311:Generated_Source\PSoC5/USBUART_episr.c **** 
 312:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP4) != USBUART_EP_TYPE_ISOC)
 314:Generated_Source\PSoC5/USBUART_episr.c ****             {
 315:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP4].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 316:Generated_Source\PSoC5/USBUART_episr.c ****             }
 317:Generated_Source\PSoC5/USBUART_episr.c **** 
 318:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 321:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:Generated_Source\PSoC5/USBUART_episr.c ****             */
 324:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP4].apiEpState = USBUART_EVENT_PENDING;
 325:Generated_Source\PSoC5/USBUART_episr.c ****         }
 326:Generated_Source\PSoC5/USBUART_episr.c **** 
 327:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 328:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 329:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 330:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP4)
 331:Generated_Source\PSoC5/USBUART_episr.c ****             {
 332:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 333:Generated_Source\PSoC5/USBUART_episr.c ****             }
 334:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 335:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */        
 336:Generated_Source\PSoC5/USBUART_episr.c **** 
 337:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:Generated_Source\PSoC5/USBUART_episr.c **** 
 339:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 340:Generated_Source\PSoC5/USBUART_episr.c **** 
 341:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_4_ISR_EXIT_CALLBACK
 342:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_4_ISR_ExitCallback();
 343:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_4_ISR_EXIT_CALLBACK) */
 344:Generated_Source\PSoC5/USBUART_episr.c **** 
 345:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 346:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 347:Generated_Source\PSoC5/USBUART_episr.c ****         
 348:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:Generated_Source\PSoC5/USBUART_episr.c ****         }
 350:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 351:Generated_Source\PSoC5/USBUART_episr.c ****     }
 352:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP4_ISR_ACTIVE) */
 353:Generated_Source\PSoC5/USBUART_episr.c **** 
 354:Generated_Source\PSoC5/USBUART_episr.c **** 
 355:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP5_ISR_ACTIVE)
 356:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 357:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_5_ISR
 358:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 359:Generated_Source\PSoC5/USBUART_episr.c ****     *
 360:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 10


 361:Generated_Source\PSoC5/USBUART_episr.c ****     *
 362:Generated_Source\PSoC5/USBUART_episr.c ****     *
 363:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 364:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_5_ISR)
 365:Generated_Source\PSoC5/USBUART_episr.c ****     {
 366:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_ENTRY_CALLBACK
 367:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_EntryCallback();
 368:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_ENTRY_CALLBACK) */
 369:Generated_Source\PSoC5/USBUART_episr.c **** 
 370:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:Generated_Source\PSoC5/USBUART_episr.c **** 
 372:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 373:Generated_Source\PSoC5/USBUART_episr.c **** 
 374:Generated_Source\PSoC5/USBUART_episr.c ****     #if (defined(USBUART_ENABLE_MIDI_STREAMING) && !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && \
 375:Generated_Source\PSoC5/USBUART_episr.c ****                  USBUART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:Generated_Source\PSoC5/USBUART_episr.c ****         {
 377:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 378:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 380:Generated_Source\PSoC5/USBUART_episr.c **** 
 381:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP5_INTR);
 382:Generated_Source\PSoC5/USBUART_episr.c ****     
 383:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:Generated_Source\PSoC5/USBUART_episr.c ****         */
 387:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 388:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP5].addr & USBUART_DIR_IN))
 389:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 390:Generated_Source\PSoC5/USBUART_episr.c ****         {            
 391:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP5].epCr0;
 393:Generated_Source\PSoC5/USBUART_episr.c **** 
 394:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP5) != USBUART_EP_TYPE_ISOC)
 396:Generated_Source\PSoC5/USBUART_episr.c ****             {
 397:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP5].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 398:Generated_Source\PSoC5/USBUART_episr.c ****             }
 399:Generated_Source\PSoC5/USBUART_episr.c **** 
 400:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 403:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:Generated_Source\PSoC5/USBUART_episr.c ****             */
 406:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP5].apiEpState = USBUART_EVENT_PENDING;
 407:Generated_Source\PSoC5/USBUART_episr.c ****         }
 408:Generated_Source\PSoC5/USBUART_episr.c **** 
 409:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))        
 410:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 411:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 412:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP5)
 413:Generated_Source\PSoC5/USBUART_episr.c ****             {
 414:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 415:Generated_Source\PSoC5/USBUART_episr.c ****             }
 416:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 417:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 11


 418:Generated_Source\PSoC5/USBUART_episr.c **** 
 419:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:Generated_Source\PSoC5/USBUART_episr.c **** 
 421:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 422:Generated_Source\PSoC5/USBUART_episr.c **** 
 423:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_5_ISR_EXIT_CALLBACK
 424:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_5_ISR_ExitCallback();
 425:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_5_ISR_EXIT_CALLBACK) */
 426:Generated_Source\PSoC5/USBUART_episr.c **** 
 427:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 428:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 429:Generated_Source\PSoC5/USBUART_episr.c ****         
 430:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:Generated_Source\PSoC5/USBUART_episr.c ****         }
 432:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 433:Generated_Source\PSoC5/USBUART_episr.c ****     }
 434:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP5_ISR_ACTIVE) */
 435:Generated_Source\PSoC5/USBUART_episr.c **** 
 436:Generated_Source\PSoC5/USBUART_episr.c **** 
 437:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP6_ISR_ACTIVE)
 438:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 439:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_6_ISR
 440:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 441:Generated_Source\PSoC5/USBUART_episr.c ****     *
 442:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:Generated_Source\PSoC5/USBUART_episr.c ****     *
 444:Generated_Source\PSoC5/USBUART_episr.c ****     *
 445:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 446:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_6_ISR)
 447:Generated_Source\PSoC5/USBUART_episr.c ****     {
 448:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_ENTRY_CALLBACK
 449:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_EntryCallback();
 450:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_ENTRY_CALLBACK) */
 451:Generated_Source\PSoC5/USBUART_episr.c **** 
 452:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:Generated_Source\PSoC5/USBUART_episr.c **** 
 454:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 455:Generated_Source\PSoC5/USBUART_episr.c **** 
 456:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 457:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 458:Generated_Source\PSoC5/USBUART_episr.c ****         {
 459:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 460:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 462:Generated_Source\PSoC5/USBUART_episr.c **** 
 463:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP6_INTR);
 464:Generated_Source\PSoC5/USBUART_episr.c ****         
 465:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:Generated_Source\PSoC5/USBUART_episr.c ****         */
 469:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 470:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP6].addr & USBUART_DIR_IN))
 471:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 472:Generated_Source\PSoC5/USBUART_episr.c ****         {
 473:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP6].epCr0;
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 12


 475:Generated_Source\PSoC5/USBUART_episr.c **** 
 476:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP6) != USBUART_EP_TYPE_ISOC)
 478:Generated_Source\PSoC5/USBUART_episr.c ****             {
 479:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP6].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 480:Generated_Source\PSoC5/USBUART_episr.c ****             }
 481:Generated_Source\PSoC5/USBUART_episr.c ****             
 482:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 485:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:Generated_Source\PSoC5/USBUART_episr.c ****             */
 488:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP6].apiEpState = USBUART_EVENT_PENDING;
 489:Generated_Source\PSoC5/USBUART_episr.c ****         }
 490:Generated_Source\PSoC5/USBUART_episr.c **** 
 491:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 492:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 493:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 494:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP6)
 495:Generated_Source\PSoC5/USBUART_episr.c ****             {
 496:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 497:Generated_Source\PSoC5/USBUART_episr.c ****             }
 498:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 499:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 500:Generated_Source\PSoC5/USBUART_episr.c **** 
 501:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:Generated_Source\PSoC5/USBUART_episr.c **** 
 503:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 504:Generated_Source\PSoC5/USBUART_episr.c **** 
 505:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_6_ISR_EXIT_CALLBACK
 506:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_6_ISR_ExitCallback();
 507:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_6_ISR_EXIT_CALLBACK) */
 508:Generated_Source\PSoC5/USBUART_episr.c **** 
 509:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 510:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 511:Generated_Source\PSoC5/USBUART_episr.c ****         
 512:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:Generated_Source\PSoC5/USBUART_episr.c ****         }
 514:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 515:Generated_Source\PSoC5/USBUART_episr.c ****     }
 516:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP6_ISR_ACTIVE) */
 517:Generated_Source\PSoC5/USBUART_episr.c **** 
 518:Generated_Source\PSoC5/USBUART_episr.c **** 
 519:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP7_ISR_ACTIVE)
 520:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 521:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_7_ISR
 522:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 523:Generated_Source\PSoC5/USBUART_episr.c ****     *
 524:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
 525:Generated_Source\PSoC5/USBUART_episr.c ****     *
 526:Generated_Source\PSoC5/USBUART_episr.c ****     *
 527:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 528:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_7_ISR)
 529:Generated_Source\PSoC5/USBUART_episr.c ****     {
 530:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_ENTRY_CALLBACK
 531:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_EntryCallback();
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 13


 532:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_ENTRY_CALLBACK) */
 533:Generated_Source\PSoC5/USBUART_episr.c **** 
 534:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:Generated_Source\PSoC5/USBUART_episr.c **** 
 536:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 537:Generated_Source\PSoC5/USBUART_episr.c **** 
 538:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 539:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 540:Generated_Source\PSoC5/USBUART_episr.c ****         {
 541:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 542:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 544:Generated_Source\PSoC5/USBUART_episr.c ****     
 545:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP7_INTR);
 546:Generated_Source\PSoC5/USBUART_episr.c ****         
 547:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:Generated_Source\PSoC5/USBUART_episr.c ****         */
 551:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP7].addr & USBUART_DIR_IN))
 553:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 554:Generated_Source\PSoC5/USBUART_episr.c ****         {           
 555:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP7].epCr0;
 557:Generated_Source\PSoC5/USBUART_episr.c **** 
 558:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP7) != USBUART_EP_TYPE_ISOC)
 560:Generated_Source\PSoC5/USBUART_episr.c ****             {
 561:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP7].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 562:Generated_Source\PSoC5/USBUART_episr.c ****             }
 563:Generated_Source\PSoC5/USBUART_episr.c ****             
 564:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 567:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:Generated_Source\PSoC5/USBUART_episr.c ****             */
 570:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP7].apiEpState = USBUART_EVENT_PENDING;
 571:Generated_Source\PSoC5/USBUART_episr.c ****         }
 572:Generated_Source\PSoC5/USBUART_episr.c **** 
 573:Generated_Source\PSoC5/USBUART_episr.c **** 
 574:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 575:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 576:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 577:Generated_Source\PSoC5/USBUART_episr.c ****             if(USBUART_midi_out_ep == USBUART_EP7)
 578:Generated_Source\PSoC5/USBUART_episr.c ****             {
 579:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 580:Generated_Source\PSoC5/USBUART_episr.c ****             }
 581:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 582:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 583:Generated_Source\PSoC5/USBUART_episr.c **** 
 584:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:Generated_Source\PSoC5/USBUART_episr.c **** 
 586:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 587:Generated_Source\PSoC5/USBUART_episr.c **** 
 588:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_7_ISR_EXIT_CALLBACK
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 14


 589:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_7_ISR_ExitCallback();
 590:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_7_ISR_EXIT_CALLBACK) */
 591:Generated_Source\PSoC5/USBUART_episr.c **** 
 592:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 593:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 594:Generated_Source\PSoC5/USBUART_episr.c ****         
 595:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:Generated_Source\PSoC5/USBUART_episr.c ****         }
 597:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 598:Generated_Source\PSoC5/USBUART_episr.c ****     }
 599:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP7_ISR_ACTIVE) */
 600:Generated_Source\PSoC5/USBUART_episr.c **** 
 601:Generated_Source\PSoC5/USBUART_episr.c **** 
 602:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_EP8_ISR_ACTIVE)
 603:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 604:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_EP_8_ISR
 605:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 606:Generated_Source\PSoC5/USBUART_episr.c ****     *
 607:Generated_Source\PSoC5/USBUART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:Generated_Source\PSoC5/USBUART_episr.c ****     *
 609:Generated_Source\PSoC5/USBUART_episr.c ****     *
 610:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 611:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_EP_8_ISR)
 612:Generated_Source\PSoC5/USBUART_episr.c ****     {
 613:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_ENTRY_CALLBACK
 614:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_EntryCallback();
 615:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_ENTRY_CALLBACK) */
 616:Generated_Source\PSoC5/USBUART_episr.c **** 
 617:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:Generated_Source\PSoC5/USBUART_episr.c **** 
 619:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 620:Generated_Source\PSoC5/USBUART_episr.c **** 
 621:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 622:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 623:Generated_Source\PSoC5/USBUART_episr.c ****         {
 624:Generated_Source\PSoC5/USBUART_episr.c ****             uint8 intEn = EA;
 625:Generated_Source\PSoC5/USBUART_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 627:Generated_Source\PSoC5/USBUART_episr.c **** 
 628:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieEpInterruptSource(USBUART_SIE_INT_EP8_INTR);
 629:Generated_Source\PSoC5/USBUART_episr.c ****         
 630:Generated_Source\PSoC5/USBUART_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:Generated_Source\PSoC5/USBUART_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:Generated_Source\PSoC5/USBUART_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:Generated_Source\PSoC5/USBUART_episr.c ****         */
 634:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)
 635:Generated_Source\PSoC5/USBUART_episr.c ****         if (0u != (USBUART_EP[USBUART_EP8].addr & USBUART_DIR_IN))
 636:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 637:Generated_Source\PSoC5/USBUART_episr.c ****         {
 638:Generated_Source\PSoC5/USBUART_episr.c ****             /* Read CR0 register to clear SIE lock. */
 639:Generated_Source\PSoC5/USBUART_episr.c ****             (void) USBUART_SIE_EP_BASE.sieEp[USBUART_EP8].epCr0;
 640:Generated_Source\PSoC5/USBUART_episr.c **** 
 641:Generated_Source\PSoC5/USBUART_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_GET_EP_TYPE(USBUART_EP8) != USBUART_EP_TYPE_ISOC)
 643:Generated_Source\PSoC5/USBUART_episr.c ****             {
 644:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_EP[USBUART_EP8].epToggle ^= USBUART_EPX_CNT_DATA_TOGGLE;
 645:Generated_Source\PSoC5/USBUART_episr.c ****             }
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 15


 646:Generated_Source\PSoC5/USBUART_episr.c **** 
 647:Generated_Source\PSoC5/USBUART_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:Generated_Source\PSoC5/USBUART_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:Generated_Source\PSoC5/USBUART_episr.c ****             * Because last chunk of data is being copied.
 650:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:Generated_Source\PSoC5/USBUART_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:Generated_Source\PSoC5/USBUART_episr.c ****             */
 653:Generated_Source\PSoC5/USBUART_episr.c ****             USBUART_EP[USBUART_EP8].apiEpState = USBUART_EVENT_PENDING;
 654:Generated_Source\PSoC5/USBUART_episr.c ****         }
 655:Generated_Source\PSoC5/USBUART_episr.c **** 
 656:Generated_Source\PSoC5/USBUART_episr.c ****     #if (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO))
 657:Generated_Source\PSoC5/USBUART_episr.c ****         #if (defined(USBUART_ENABLE_MIDI_STREAMING) && \
 658:Generated_Source\PSoC5/USBUART_episr.c ****             !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 659:Generated_Source\PSoC5/USBUART_episr.c ****             if (USBUART_midi_out_ep == USBUART_EP8)
 660:Generated_Source\PSoC5/USBUART_episr.c ****             {
 661:Generated_Source\PSoC5/USBUART_episr.c ****                 USBUART_MIDI_OUT_Service();
 662:Generated_Source\PSoC5/USBUART_episr.c ****             }
 663:Generated_Source\PSoC5/USBUART_episr.c ****         #endif /* (USBUART_ISR_SERVICE_MIDI_OUT) */
 664:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (!(CY_PSOC4 && USBUART_EP_MANAGEMENT_DMA_AUTO)) */
 665:Generated_Source\PSoC5/USBUART_episr.c **** 
 666:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:Generated_Source\PSoC5/USBUART_episr.c **** 
 668:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 669:Generated_Source\PSoC5/USBUART_episr.c **** 
 670:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_EP_8_ISR_EXIT_CALLBACK
 671:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_EP_8_ISR_ExitCallback();
 672:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_EP_8_ISR_EXIT_CALLBACK) */
 673:Generated_Source\PSoC5/USBUART_episr.c **** 
 674:Generated_Source\PSoC5/USBUART_episr.c ****     #if (CY_PSOC3 && defined(USBUART_ENABLE_MIDI_STREAMING) && \
 675:Generated_Source\PSoC5/USBUART_episr.c ****         !defined(USBUART_MAIN_SERVICE_MIDI_OUT) && USBUART_ISR_SERVICE_MIDI_OUT)
 676:Generated_Source\PSoC5/USBUART_episr.c ****         
 677:Generated_Source\PSoC5/USBUART_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:Generated_Source\PSoC5/USBUART_episr.c ****         }
 679:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (CY_PSOC3 && USBUART_ISR_SERVICE_MIDI_OUT) */
 680:Generated_Source\PSoC5/USBUART_episr.c ****     }
 681:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_EP8_ISR_ACTIVE) */
 682:Generated_Source\PSoC5/USBUART_episr.c **** 
 683:Generated_Source\PSoC5/USBUART_episr.c **** 
 684:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_SOF_ISR_ACTIVE)
 685:Generated_Source\PSoC5/USBUART_episr.c ****     /*******************************************************************************
 686:Generated_Source\PSoC5/USBUART_episr.c ****     * Function Name: USBUART_SOF_ISR
 687:Generated_Source\PSoC5/USBUART_episr.c ****     ****************************************************************************//**
 688:Generated_Source\PSoC5/USBUART_episr.c ****     *
 689:Generated_Source\PSoC5/USBUART_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:Generated_Source\PSoC5/USBUART_episr.c ****     *
 691:Generated_Source\PSoC5/USBUART_episr.c ****     *
 692:Generated_Source\PSoC5/USBUART_episr.c ****     *******************************************************************************/
 693:Generated_Source\PSoC5/USBUART_episr.c ****     CY_ISR(USBUART_SOF_ISR)
 694:Generated_Source\PSoC5/USBUART_episr.c ****     {
 154              		.loc 1 694 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 159 0000 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE3:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 16


 162              		.size	USBUART_SOF_ISR, .-USBUART_SOF_ISR
 163              		.section	.text.USBUART_BUS_RESET_ISR,"ax",%progbits
 164              		.align	1
 165              		.global	USBUART_BUS_RESET_ISR
 166              		.thumb
 167              		.thumb_func
 168              		.type	USBUART_BUS_RESET_ISR, %function
 169              	USBUART_BUS_RESET_ISR:
 170              	.LFB4:
 695:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_ENTRY_CALLBACK
 696:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_EntryCallback();
 697:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_ENTRY_CALLBACK) */
 698:Generated_Source\PSoC5/USBUART_episr.c **** 
 699:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:Generated_Source\PSoC5/USBUART_episr.c **** 
 701:Generated_Source\PSoC5/USBUART_episr.c ****         /* `#END` */
 702:Generated_Source\PSoC5/USBUART_episr.c **** 
 703:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_SOF_INTR);
 704:Generated_Source\PSoC5/USBUART_episr.c **** 
 705:Generated_Source\PSoC5/USBUART_episr.c ****     #ifdef USBUART_SOF_ISR_EXIT_CALLBACK
 706:Generated_Source\PSoC5/USBUART_episr.c ****         USBUART_SOF_ISR_ExitCallback();
 707:Generated_Source\PSoC5/USBUART_episr.c ****     #endif /* (USBUART_SOF_ISR_EXIT_CALLBACK) */
 708:Generated_Source\PSoC5/USBUART_episr.c ****     }
 709:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_SOF_ISR_ACTIVE) */
 710:Generated_Source\PSoC5/USBUART_episr.c **** 
 711:Generated_Source\PSoC5/USBUART_episr.c **** 
 712:Generated_Source\PSoC5/USBUART_episr.c **** #if (USBUART_BUS_RESET_ISR_ACTIVE)
 713:Generated_Source\PSoC5/USBUART_episr.c **** /*******************************************************************************
 714:Generated_Source\PSoC5/USBUART_episr.c **** * Function Name: USBUART_BUS_RESET_ISR
 715:Generated_Source\PSoC5/USBUART_episr.c **** ****************************************************************************//**
 716:Generated_Source\PSoC5/USBUART_episr.c **** *
 717:Generated_Source\PSoC5/USBUART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:Generated_Source\PSoC5/USBUART_episr.c **** *  parameters as the last USER call to _Start
 719:Generated_Source\PSoC5/USBUART_episr.c **** *
 720:Generated_Source\PSoC5/USBUART_episr.c **** *
 721:Generated_Source\PSoC5/USBUART_episr.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/USBUART_episr.c **** CY_ISR(USBUART_BUS_RESET_ISR)
 723:Generated_Source\PSoC5/USBUART_episr.c **** {
 171              		.loc 1 723 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 724:Generated_Source\PSoC5/USBUART_episr.c **** #ifdef USBUART_BUS_RESET_ISR_ENTRY_CALLBACK
 725:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_BUS_RESET_ISR_EntryCallback();
 726:Generated_Source\PSoC5/USBUART_episr.c **** #endif /* (USBUART_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:Generated_Source\PSoC5/USBUART_episr.c **** 
 728:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:Generated_Source\PSoC5/USBUART_episr.c **** 
 730:Generated_Source\PSoC5/USBUART_episr.c ****     /* `#END` */
 731:Generated_Source\PSoC5/USBUART_episr.c **** 
 732:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ClearSieInterruptSource(USBUART_INTR_SIE_BUS_RESET_INTR);
 733:Generated_Source\PSoC5/USBUART_episr.c **** 
 734:Generated_Source\PSoC5/USBUART_episr.c ****     USBUART_ReInitComponent();
 176              		.loc 1 734 0
 177 0000 FFF7FEBF 		b	USBUART_ReInitComponent
 178              	.LVL0:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 17


 179              		.cfi_endproc
 180              	.LFE4:
 181              		.size	USBUART_BUS_RESET_ISR, .-USBUART_BUS_RESET_ISR
 182              		.text
 183              	.Letext0:
 184              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 185              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 186              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 187              		.section	.debug_info,"",%progbits
 188              	.Ldebug_info0:
 189 0000 50020000 		.4byte	0x250
 190 0004 0400     		.2byte	0x4
 191 0006 00000000 		.4byte	.Ldebug_abbrev0
 192 000a 04       		.byte	0x4
 193 000b 01       		.uleb128 0x1
 194 000c C7000000 		.4byte	.LASF37
 195 0010 0C       		.byte	0xc
 196 0011 85010000 		.4byte	.LASF38
 197 0015 35000000 		.4byte	.LASF39
 198 0019 00000000 		.4byte	.Ldebug_ranges0+0
 199 001d 00000000 		.4byte	0
 200 0021 00000000 		.4byte	.Ldebug_line0
 201 0025 02       		.uleb128 0x2
 202 0026 01       		.byte	0x1
 203 0027 06       		.byte	0x6
 204 0028 B7020000 		.4byte	.LASF0
 205 002c 02       		.uleb128 0x2
 206 002d 01       		.byte	0x1
 207 002e 08       		.byte	0x8
 208 002f 77010000 		.4byte	.LASF1
 209 0033 02       		.uleb128 0x2
 210 0034 02       		.byte	0x2
 211 0035 05       		.byte	0x5
 212 0036 5B020000 		.4byte	.LASF2
 213 003a 02       		.uleb128 0x2
 214 003b 02       		.byte	0x2
 215 003c 07       		.byte	0x7
 216 003d 6C000000 		.4byte	.LASF3
 217 0041 02       		.uleb128 0x2
 218 0042 04       		.byte	0x4
 219 0043 05       		.byte	0x5
 220 0044 8B020000 		.4byte	.LASF4
 221 0048 02       		.uleb128 0x2
 222 0049 04       		.byte	0x4
 223 004a 07       		.byte	0x7
 224 004b D7010000 		.4byte	.LASF5
 225 004f 02       		.uleb128 0x2
 226 0050 08       		.byte	0x8
 227 0051 05       		.byte	0x5
 228 0052 3D020000 		.4byte	.LASF6
 229 0056 02       		.uleb128 0x2
 230 0057 08       		.byte	0x8
 231 0058 07       		.byte	0x7
 232 0059 F6010000 		.4byte	.LASF7
 233 005d 03       		.uleb128 0x3
 234 005e 04       		.byte	0x4
 235 005f 05       		.byte	0x5
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 18


 236 0060 696E7400 		.ascii	"int\000"
 237 0064 02       		.uleb128 0x2
 238 0065 04       		.byte	0x4
 239 0066 07       		.byte	0x7
 240 0067 E9010000 		.4byte	.LASF8
 241 006b 04       		.uleb128 0x4
 242 006c 7B020000 		.4byte	.LASF9
 243 0070 02       		.byte	0x2
 244 0071 E901     		.2byte	0x1e9
 245 0073 2C000000 		.4byte	0x2c
 246 0077 04       		.uleb128 0x4
 247 0078 C5010000 		.4byte	.LASF10
 248 007c 02       		.byte	0x2
 249 007d EA01     		.2byte	0x1ea
 250 007f 3A000000 		.4byte	0x3a
 251 0083 02       		.uleb128 0x2
 252 0084 04       		.byte	0x4
 253 0085 04       		.byte	0x4
 254 0086 2F000000 		.4byte	.LASF11
 255 008a 02       		.uleb128 0x2
 256 008b 08       		.byte	0x8
 257 008c 04       		.byte	0x4
 258 008d AC010000 		.4byte	.LASF12
 259 0091 02       		.uleb128 0x2
 260 0092 01       		.byte	0x1
 261 0093 08       		.byte	0x8
 262 0094 4B020000 		.4byte	.LASF13
 263 0098 04       		.uleb128 0x4
 264 0099 C2000000 		.4byte	.LASF14
 265 009d 02       		.byte	0x2
 266 009e 9302     		.2byte	0x293
 267 00a0 A4000000 		.4byte	0xa4
 268 00a4 05       		.uleb128 0x5
 269 00a5 6B000000 		.4byte	0x6b
 270 00a9 02       		.uleb128 0x2
 271 00aa 08       		.byte	0x8
 272 00ab 04       		.byte	0x4
 273 00ac AB020000 		.4byte	.LASF15
 274 00b0 02       		.uleb128 0x2
 275 00b1 04       		.byte	0x4
 276 00b2 07       		.byte	0x7
 277 00b3 2D020000 		.4byte	.LASF16
 278 00b7 06       		.uleb128 0x6
 279 00b8 0C       		.byte	0xc
 280 00b9 03       		.byte	0x3
 281 00ba 8D       		.byte	0x8d
 282 00bb 2C010000 		.4byte	0x12c
 283 00bf 07       		.uleb128 0x7
 284 00c0 B3010000 		.4byte	.LASF17
 285 00c4 03       		.byte	0x3
 286 00c5 8F       		.byte	0x8f
 287 00c6 6B000000 		.4byte	0x6b
 288 00ca 00       		.byte	0
 289 00cb 07       		.uleb128 0x7
 290 00cc CC010000 		.4byte	.LASF18
 291 00d0 03       		.byte	0x3
 292 00d1 90       		.byte	0x90
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 19


 293 00d2 6B000000 		.4byte	0x6b
 294 00d6 01       		.byte	0x1
 295 00d7 07       		.uleb128 0x7
 296 00d8 0D020000 		.4byte	.LASF19
 297 00dc 03       		.byte	0x3
 298 00dd 91       		.byte	0x91
 299 00de 6B000000 		.4byte	0x6b
 300 00e2 02       		.byte	0x2
 301 00e3 07       		.uleb128 0x7
 302 00e4 AE000000 		.4byte	.LASF20
 303 00e8 03       		.byte	0x3
 304 00e9 92       		.byte	0x92
 305 00ea 6B000000 		.4byte	0x6b
 306 00ee 03       		.byte	0x3
 307 00ef 07       		.uleb128 0x7
 308 00f0 55010000 		.4byte	.LASF21
 309 00f4 03       		.byte	0x3
 310 00f5 93       		.byte	0x93
 311 00f6 6B000000 		.4byte	0x6b
 312 00fa 04       		.byte	0x4
 313 00fb 07       		.uleb128 0x7
 314 00fc 36020000 		.4byte	.LASF22
 315 0100 03       		.byte	0x3
 316 0101 94       		.byte	0x94
 317 0102 6B000000 		.4byte	0x6b
 318 0106 05       		.byte	0x5
 319 0107 07       		.uleb128 0x7
 320 0108 BA010000 		.4byte	.LASF23
 321 010c 03       		.byte	0x3
 322 010d 95       		.byte	0x95
 323 010e 77000000 		.4byte	0x77
 324 0112 06       		.byte	0x6
 325 0113 07       		.uleb128 0x7
 326 0114 50020000 		.4byte	.LASF24
 327 0118 03       		.byte	0x3
 328 0119 96       		.byte	0x96
 329 011a 77000000 		.4byte	0x77
 330 011e 08       		.byte	0x8
 331 011f 07       		.uleb128 0x7
 332 0120 81020000 		.4byte	.LASF25
 333 0124 03       		.byte	0x3
 334 0125 97       		.byte	0x97
 335 0126 6B000000 		.4byte	0x6b
 336 012a 0A       		.byte	0xa
 337 012b 00       		.byte	0
 338 012c 08       		.uleb128 0x8
 339 012d 94020000 		.4byte	.LASF26
 340 0131 03       		.byte	0x3
 341 0132 98       		.byte	0x98
 342 0133 B7000000 		.4byte	0xb7
 343 0137 06       		.uleb128 0x6
 344 0138 10       		.byte	0x10
 345 0139 03       		.byte	0x3
 346 013a D4       		.byte	0xd4
 347 013b 70010000 		.4byte	0x170
 348 013f 07       		.uleb128 0x7
 349 0140 A0000000 		.4byte	.LASF27
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 20


 350 0144 03       		.byte	0x3
 351 0145 D6       		.byte	0xd6
 352 0146 6B000000 		.4byte	0x6b
 353 014a 00       		.byte	0
 354 014b 07       		.uleb128 0x7
 355 014c A7000000 		.4byte	.LASF28
 356 0150 03       		.byte	0x3
 357 0151 D7       		.byte	0xd7
 358 0152 6B000000 		.4byte	0x6b
 359 0156 01       		.byte	0x1
 360 0157 07       		.uleb128 0x7
 361 0158 29000000 		.4byte	.LASF29
 362 015c 03       		.byte	0x3
 363 015d D8       		.byte	0xd8
 364 015e 6B000000 		.4byte	0x6b
 365 0162 02       		.byte	0x2
 366 0163 09       		.uleb128 0x9
 367 0164 67617000 		.ascii	"gap\000"
 368 0168 03       		.byte	0x3
 369 0169 D9       		.byte	0xd9
 370 016a 70010000 		.4byte	0x170
 371 016e 03       		.byte	0x3
 372 016f 00       		.byte	0
 373 0170 0A       		.uleb128 0xa
 374 0171 6B000000 		.4byte	0x6b
 375 0175 80010000 		.4byte	0x180
 376 0179 0B       		.uleb128 0xb
 377 017a B0000000 		.4byte	0xb0
 378 017e 0C       		.byte	0xc
 379 017f 00       		.byte	0
 380 0180 08       		.uleb128 0x8
 381 0181 17020000 		.4byte	.LASF30
 382 0185 03       		.byte	0x3
 383 0186 DA       		.byte	0xda
 384 0187 37010000 		.4byte	0x137
 385 018b 0C       		.uleb128 0xc
 386 018c 90       		.byte	0x90
 387 018d 03       		.byte	0x3
 388 018e 0E01     		.2byte	0x10e
 389 0190 A2010000 		.4byte	0x1a2
 390 0194 0D       		.uleb128 0xd
 391 0195 5A010000 		.4byte	.LASF31
 392 0199 03       		.byte	0x3
 393 019a 1001     		.2byte	0x110
 394 019c A2010000 		.4byte	0x1a2
 395 01a0 00       		.byte	0
 396 01a1 00       		.byte	0
 397 01a2 0A       		.uleb128 0xa
 398 01a3 80010000 		.4byte	0x180
 399 01a7 B2010000 		.4byte	0x1b2
 400 01ab 0B       		.uleb128 0xb
 401 01ac B0000000 		.4byte	0xb0
 402 01b0 08       		.byte	0x8
 403 01b1 00       		.byte	0
 404 01b2 04       		.uleb128 0x4
 405 01b3 60010000 		.4byte	.LASF32
 406 01b7 03       		.byte	0x3
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 21


 407 01b8 1101     		.2byte	0x111
 408 01ba 8B010000 		.4byte	0x18b
 409 01be 0E       		.uleb128 0xe
 410 01bf C3020000 		.4byte	.LASF33
 411 01c3 01       		.byte	0x1
 412 01c4 25       		.byte	0x25
 413 01c5 00000000 		.4byte	.LFB0
 414 01c9 2C000000 		.4byte	.LFE0-.LFB0
 415 01cd 01       		.uleb128 0x1
 416 01ce 9C       		.byte	0x9c
 417 01cf 0E       		.uleb128 0xe
 418 01d0 7F000000 		.4byte	.LASF34
 419 01d4 01       		.byte	0x1
 420 01d5 78       		.byte	0x78
 421 01d6 00000000 		.4byte	.LFB1
 422 01da 30000000 		.4byte	.LFE1-.LFB1
 423 01de 01       		.uleb128 0x1
 424 01df 9C       		.byte	0x9c
 425 01e0 0E       		.uleb128 0xe
 426 01e1 00000000 		.4byte	.LASF35
 427 01e5 01       		.byte	0x1
 428 01e6 C9       		.byte	0xc9
 429 01e7 00000000 		.4byte	.LFB2
 430 01eb 38000000 		.4byte	.LFE2-.LFB2
 431 01ef 01       		.uleb128 0x1
 432 01f0 9C       		.byte	0x9c
 433 01f1 0F       		.uleb128 0xf
 434 01f2 90000000 		.4byte	.LASF36
 435 01f6 01       		.byte	0x1
 436 01f7 B502     		.2byte	0x2b5
 437 01f9 00000000 		.4byte	.LFB3
 438 01fd 02000000 		.4byte	.LFE3-.LFB3
 439 0201 01       		.uleb128 0x1
 440 0202 9C       		.byte	0x9c
 441 0203 10       		.uleb128 0x10
 442 0204 65020000 		.4byte	.LASF40
 443 0208 01       		.byte	0x1
 444 0209 D202     		.2byte	0x2d2
 445 020b 00000000 		.4byte	.LFB4
 446 020f 04000000 		.4byte	.LFE4-.LFB4
 447 0213 01       		.uleb128 0x1
 448 0214 9C       		.byte	0x9c
 449 0215 23020000 		.4byte	0x223
 450 0219 11       		.uleb128 0x11
 451 021a 04000000 		.4byte	.LVL0
 452 021e 48020000 		.4byte	0x248
 453 0222 00       		.byte	0
 454 0223 0A       		.uleb128 0xa
 455 0224 33020000 		.4byte	0x233
 456 0228 33020000 		.4byte	0x233
 457 022c 0B       		.uleb128 0xb
 458 022d B0000000 		.4byte	0xb0
 459 0231 08       		.byte	0x8
 460 0232 00       		.byte	0
 461 0233 05       		.uleb128 0x5
 462 0234 2C010000 		.4byte	0x12c
 463 0238 12       		.uleb128 0x12
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 22


 464 0239 B7000000 		.4byte	.LASF41
 465 023d 04       		.byte	0x4
 466 023e 79       		.byte	0x79
 467 023f 43020000 		.4byte	0x243
 468 0243 05       		.uleb128 0x5
 469 0244 23020000 		.4byte	0x223
 470 0248 13       		.uleb128 0x13
 471 0249 11000000 		.4byte	.LASF42
 472 024d 11000000 		.4byte	.LASF42
 473 0251 04       		.byte	0x4
 474 0252 A4       		.byte	0xa4
 475 0253 00       		.byte	0
 476              		.section	.debug_abbrev,"",%progbits
 477              	.Ldebug_abbrev0:
 478 0000 01       		.uleb128 0x1
 479 0001 11       		.uleb128 0x11
 480 0002 01       		.byte	0x1
 481 0003 25       		.uleb128 0x25
 482 0004 0E       		.uleb128 0xe
 483 0005 13       		.uleb128 0x13
 484 0006 0B       		.uleb128 0xb
 485 0007 03       		.uleb128 0x3
 486 0008 0E       		.uleb128 0xe
 487 0009 1B       		.uleb128 0x1b
 488 000a 0E       		.uleb128 0xe
 489 000b 55       		.uleb128 0x55
 490 000c 17       		.uleb128 0x17
 491 000d 11       		.uleb128 0x11
 492 000e 01       		.uleb128 0x1
 493 000f 10       		.uleb128 0x10
 494 0010 17       		.uleb128 0x17
 495 0011 00       		.byte	0
 496 0012 00       		.byte	0
 497 0013 02       		.uleb128 0x2
 498 0014 24       		.uleb128 0x24
 499 0015 00       		.byte	0
 500 0016 0B       		.uleb128 0xb
 501 0017 0B       		.uleb128 0xb
 502 0018 3E       		.uleb128 0x3e
 503 0019 0B       		.uleb128 0xb
 504 001a 03       		.uleb128 0x3
 505 001b 0E       		.uleb128 0xe
 506 001c 00       		.byte	0
 507 001d 00       		.byte	0
 508 001e 03       		.uleb128 0x3
 509 001f 24       		.uleb128 0x24
 510 0020 00       		.byte	0
 511 0021 0B       		.uleb128 0xb
 512 0022 0B       		.uleb128 0xb
 513 0023 3E       		.uleb128 0x3e
 514 0024 0B       		.uleb128 0xb
 515 0025 03       		.uleb128 0x3
 516 0026 08       		.uleb128 0x8
 517 0027 00       		.byte	0
 518 0028 00       		.byte	0
 519 0029 04       		.uleb128 0x4
 520 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 23


 521 002b 00       		.byte	0
 522 002c 03       		.uleb128 0x3
 523 002d 0E       		.uleb128 0xe
 524 002e 3A       		.uleb128 0x3a
 525 002f 0B       		.uleb128 0xb
 526 0030 3B       		.uleb128 0x3b
 527 0031 05       		.uleb128 0x5
 528 0032 49       		.uleb128 0x49
 529 0033 13       		.uleb128 0x13
 530 0034 00       		.byte	0
 531 0035 00       		.byte	0
 532 0036 05       		.uleb128 0x5
 533 0037 35       		.uleb128 0x35
 534 0038 00       		.byte	0
 535 0039 49       		.uleb128 0x49
 536 003a 13       		.uleb128 0x13
 537 003b 00       		.byte	0
 538 003c 00       		.byte	0
 539 003d 06       		.uleb128 0x6
 540 003e 13       		.uleb128 0x13
 541 003f 01       		.byte	0x1
 542 0040 0B       		.uleb128 0xb
 543 0041 0B       		.uleb128 0xb
 544 0042 3A       		.uleb128 0x3a
 545 0043 0B       		.uleb128 0xb
 546 0044 3B       		.uleb128 0x3b
 547 0045 0B       		.uleb128 0xb
 548 0046 01       		.uleb128 0x1
 549 0047 13       		.uleb128 0x13
 550 0048 00       		.byte	0
 551 0049 00       		.byte	0
 552 004a 07       		.uleb128 0x7
 553 004b 0D       		.uleb128 0xd
 554 004c 00       		.byte	0
 555 004d 03       		.uleb128 0x3
 556 004e 0E       		.uleb128 0xe
 557 004f 3A       		.uleb128 0x3a
 558 0050 0B       		.uleb128 0xb
 559 0051 3B       		.uleb128 0x3b
 560 0052 0B       		.uleb128 0xb
 561 0053 49       		.uleb128 0x49
 562 0054 13       		.uleb128 0x13
 563 0055 38       		.uleb128 0x38
 564 0056 0B       		.uleb128 0xb
 565 0057 00       		.byte	0
 566 0058 00       		.byte	0
 567 0059 08       		.uleb128 0x8
 568 005a 16       		.uleb128 0x16
 569 005b 00       		.byte	0
 570 005c 03       		.uleb128 0x3
 571 005d 0E       		.uleb128 0xe
 572 005e 3A       		.uleb128 0x3a
 573 005f 0B       		.uleb128 0xb
 574 0060 3B       		.uleb128 0x3b
 575 0061 0B       		.uleb128 0xb
 576 0062 49       		.uleb128 0x49
 577 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 24


 578 0064 00       		.byte	0
 579 0065 00       		.byte	0
 580 0066 09       		.uleb128 0x9
 581 0067 0D       		.uleb128 0xd
 582 0068 00       		.byte	0
 583 0069 03       		.uleb128 0x3
 584 006a 08       		.uleb128 0x8
 585 006b 3A       		.uleb128 0x3a
 586 006c 0B       		.uleb128 0xb
 587 006d 3B       		.uleb128 0x3b
 588 006e 0B       		.uleb128 0xb
 589 006f 49       		.uleb128 0x49
 590 0070 13       		.uleb128 0x13
 591 0071 38       		.uleb128 0x38
 592 0072 0B       		.uleb128 0xb
 593 0073 00       		.byte	0
 594 0074 00       		.byte	0
 595 0075 0A       		.uleb128 0xa
 596 0076 01       		.uleb128 0x1
 597 0077 01       		.byte	0x1
 598 0078 49       		.uleb128 0x49
 599 0079 13       		.uleb128 0x13
 600 007a 01       		.uleb128 0x1
 601 007b 13       		.uleb128 0x13
 602 007c 00       		.byte	0
 603 007d 00       		.byte	0
 604 007e 0B       		.uleb128 0xb
 605 007f 21       		.uleb128 0x21
 606 0080 00       		.byte	0
 607 0081 49       		.uleb128 0x49
 608 0082 13       		.uleb128 0x13
 609 0083 2F       		.uleb128 0x2f
 610 0084 0B       		.uleb128 0xb
 611 0085 00       		.byte	0
 612 0086 00       		.byte	0
 613 0087 0C       		.uleb128 0xc
 614 0088 13       		.uleb128 0x13
 615 0089 01       		.byte	0x1
 616 008a 0B       		.uleb128 0xb
 617 008b 0B       		.uleb128 0xb
 618 008c 3A       		.uleb128 0x3a
 619 008d 0B       		.uleb128 0xb
 620 008e 3B       		.uleb128 0x3b
 621 008f 05       		.uleb128 0x5
 622 0090 01       		.uleb128 0x1
 623 0091 13       		.uleb128 0x13
 624 0092 00       		.byte	0
 625 0093 00       		.byte	0
 626 0094 0D       		.uleb128 0xd
 627 0095 0D       		.uleb128 0xd
 628 0096 00       		.byte	0
 629 0097 03       		.uleb128 0x3
 630 0098 0E       		.uleb128 0xe
 631 0099 3A       		.uleb128 0x3a
 632 009a 0B       		.uleb128 0xb
 633 009b 3B       		.uleb128 0x3b
 634 009c 05       		.uleb128 0x5
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 25


 635 009d 49       		.uleb128 0x49
 636 009e 13       		.uleb128 0x13
 637 009f 38       		.uleb128 0x38
 638 00a0 0B       		.uleb128 0xb
 639 00a1 00       		.byte	0
 640 00a2 00       		.byte	0
 641 00a3 0E       		.uleb128 0xe
 642 00a4 2E       		.uleb128 0x2e
 643 00a5 00       		.byte	0
 644 00a6 3F       		.uleb128 0x3f
 645 00a7 19       		.uleb128 0x19
 646 00a8 03       		.uleb128 0x3
 647 00a9 0E       		.uleb128 0xe
 648 00aa 3A       		.uleb128 0x3a
 649 00ab 0B       		.uleb128 0xb
 650 00ac 3B       		.uleb128 0x3b
 651 00ad 0B       		.uleb128 0xb
 652 00ae 27       		.uleb128 0x27
 653 00af 19       		.uleb128 0x19
 654 00b0 11       		.uleb128 0x11
 655 00b1 01       		.uleb128 0x1
 656 00b2 12       		.uleb128 0x12
 657 00b3 06       		.uleb128 0x6
 658 00b4 40       		.uleb128 0x40
 659 00b5 18       		.uleb128 0x18
 660 00b6 9742     		.uleb128 0x2117
 661 00b8 19       		.uleb128 0x19
 662 00b9 00       		.byte	0
 663 00ba 00       		.byte	0
 664 00bb 0F       		.uleb128 0xf
 665 00bc 2E       		.uleb128 0x2e
 666 00bd 00       		.byte	0
 667 00be 3F       		.uleb128 0x3f
 668 00bf 19       		.uleb128 0x19
 669 00c0 03       		.uleb128 0x3
 670 00c1 0E       		.uleb128 0xe
 671 00c2 3A       		.uleb128 0x3a
 672 00c3 0B       		.uleb128 0xb
 673 00c4 3B       		.uleb128 0x3b
 674 00c5 05       		.uleb128 0x5
 675 00c6 27       		.uleb128 0x27
 676 00c7 19       		.uleb128 0x19
 677 00c8 11       		.uleb128 0x11
 678 00c9 01       		.uleb128 0x1
 679 00ca 12       		.uleb128 0x12
 680 00cb 06       		.uleb128 0x6
 681 00cc 40       		.uleb128 0x40
 682 00cd 18       		.uleb128 0x18
 683 00ce 9742     		.uleb128 0x2117
 684 00d0 19       		.uleb128 0x19
 685 00d1 00       		.byte	0
 686 00d2 00       		.byte	0
 687 00d3 10       		.uleb128 0x10
 688 00d4 2E       		.uleb128 0x2e
 689 00d5 01       		.byte	0x1
 690 00d6 3F       		.uleb128 0x3f
 691 00d7 19       		.uleb128 0x19
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 26


 692 00d8 03       		.uleb128 0x3
 693 00d9 0E       		.uleb128 0xe
 694 00da 3A       		.uleb128 0x3a
 695 00db 0B       		.uleb128 0xb
 696 00dc 3B       		.uleb128 0x3b
 697 00dd 05       		.uleb128 0x5
 698 00de 27       		.uleb128 0x27
 699 00df 19       		.uleb128 0x19
 700 00e0 11       		.uleb128 0x11
 701 00e1 01       		.uleb128 0x1
 702 00e2 12       		.uleb128 0x12
 703 00e3 06       		.uleb128 0x6
 704 00e4 40       		.uleb128 0x40
 705 00e5 18       		.uleb128 0x18
 706 00e6 9742     		.uleb128 0x2117
 707 00e8 19       		.uleb128 0x19
 708 00e9 01       		.uleb128 0x1
 709 00ea 13       		.uleb128 0x13
 710 00eb 00       		.byte	0
 711 00ec 00       		.byte	0
 712 00ed 11       		.uleb128 0x11
 713 00ee 898201   		.uleb128 0x4109
 714 00f1 00       		.byte	0
 715 00f2 11       		.uleb128 0x11
 716 00f3 01       		.uleb128 0x1
 717 00f4 9542     		.uleb128 0x2115
 718 00f6 19       		.uleb128 0x19
 719 00f7 31       		.uleb128 0x31
 720 00f8 13       		.uleb128 0x13
 721 00f9 00       		.byte	0
 722 00fa 00       		.byte	0
 723 00fb 12       		.uleb128 0x12
 724 00fc 34       		.uleb128 0x34
 725 00fd 00       		.byte	0
 726 00fe 03       		.uleb128 0x3
 727 00ff 0E       		.uleb128 0xe
 728 0100 3A       		.uleb128 0x3a
 729 0101 0B       		.uleb128 0xb
 730 0102 3B       		.uleb128 0x3b
 731 0103 0B       		.uleb128 0xb
 732 0104 49       		.uleb128 0x49
 733 0105 13       		.uleb128 0x13
 734 0106 3F       		.uleb128 0x3f
 735 0107 19       		.uleb128 0x19
 736 0108 3C       		.uleb128 0x3c
 737 0109 19       		.uleb128 0x19
 738 010a 00       		.byte	0
 739 010b 00       		.byte	0
 740 010c 13       		.uleb128 0x13
 741 010d 2E       		.uleb128 0x2e
 742 010e 00       		.byte	0
 743 010f 3F       		.uleb128 0x3f
 744 0110 19       		.uleb128 0x19
 745 0111 3C       		.uleb128 0x3c
 746 0112 19       		.uleb128 0x19
 747 0113 6E       		.uleb128 0x6e
 748 0114 0E       		.uleb128 0xe
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 27


 749 0115 03       		.uleb128 0x3
 750 0116 0E       		.uleb128 0xe
 751 0117 3A       		.uleb128 0x3a
 752 0118 0B       		.uleb128 0xb
 753 0119 3B       		.uleb128 0x3b
 754 011a 0B       		.uleb128 0xb
 755 011b 00       		.byte	0
 756 011c 00       		.byte	0
 757 011d 00       		.byte	0
 758              		.section	.debug_aranges,"",%progbits
 759 0000 3C000000 		.4byte	0x3c
 760 0004 0200     		.2byte	0x2
 761 0006 00000000 		.4byte	.Ldebug_info0
 762 000a 04       		.byte	0x4
 763 000b 00       		.byte	0
 764 000c 0000     		.2byte	0
 765 000e 0000     		.2byte	0
 766 0010 00000000 		.4byte	.LFB0
 767 0014 2C000000 		.4byte	.LFE0-.LFB0
 768 0018 00000000 		.4byte	.LFB1
 769 001c 30000000 		.4byte	.LFE1-.LFB1
 770 0020 00000000 		.4byte	.LFB2
 771 0024 38000000 		.4byte	.LFE2-.LFB2
 772 0028 00000000 		.4byte	.LFB3
 773 002c 02000000 		.4byte	.LFE3-.LFB3
 774 0030 00000000 		.4byte	.LFB4
 775 0034 04000000 		.4byte	.LFE4-.LFB4
 776 0038 00000000 		.4byte	0
 777 003c 00000000 		.4byte	0
 778              		.section	.debug_ranges,"",%progbits
 779              	.Ldebug_ranges0:
 780 0000 00000000 		.4byte	.LFB0
 781 0004 2C000000 		.4byte	.LFE0
 782 0008 00000000 		.4byte	.LFB1
 783 000c 30000000 		.4byte	.LFE1
 784 0010 00000000 		.4byte	.LFB2
 785 0014 38000000 		.4byte	.LFE2
 786 0018 00000000 		.4byte	.LFB3
 787 001c 02000000 		.4byte	.LFE3
 788 0020 00000000 		.4byte	.LFB4
 789 0024 04000000 		.4byte	.LFE4
 790 0028 00000000 		.4byte	0
 791 002c 00000000 		.4byte	0
 792              		.section	.debug_line,"",%progbits
 793              	.Ldebug_line0:
 794 0000 E1000000 		.section	.debug_str,"MS",%progbits,1
 794      02006800 
 794      00000201 
 794      FB0E0D00 
 794      01010101 
 795              	.LASF35:
 796 0000 55534255 		.ascii	"USBUART_EP_3_ISR\000"
 796      4152545F 
 796      45505F33 
 796      5F495352 
 796      00
 797              	.LASF42:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 28


 798 0011 55534255 		.ascii	"USBUART_ReInitComponent\000"
 798      4152545F 
 798      5265496E 
 798      6974436F 
 798      6D706F6E 
 799              	.LASF29:
 800 0029 65704372 		.ascii	"epCr0\000"
 800      3000
 801              	.LASF11:
 802 002f 666C6F61 		.ascii	"float\000"
 802      7400
 803              	.LASF39:
 804 0035 433A5C55 		.ascii	"C:\\Users\\Kiwi\\Documents\\PSoC Creator\\DTR-1 v2 "
 804      73657273 
 804      5C4B6977 
 804      695C446F 
 804      63756D65 
 805 0063 48572E63 		.ascii	"HW.cydsn\000"
 805      7964736E 
 805      00
 806              	.LASF3:
 807 006c 73686F72 		.ascii	"short unsigned int\000"
 807      7420756E 
 807      7369676E 
 807      65642069 
 807      6E7400
 808              	.LASF34:
 809 007f 55534255 		.ascii	"USBUART_EP_2_ISR\000"
 809      4152545F 
 809      45505F32 
 809      5F495352 
 809      00
 810              	.LASF36:
 811 0090 55534255 		.ascii	"USBUART_SOF_ISR\000"
 811      4152545F 
 811      534F465F 
 811      49535200 
 812              	.LASF27:
 813 00a0 6570436E 		.ascii	"epCnt0\000"
 813      743000
 814              	.LASF28:
 815 00a7 6570436E 		.ascii	"epCnt1\000"
 815      743100
 816              	.LASF20:
 817 00ae 6570546F 		.ascii	"epToggle\000"
 817      67676C65 
 817      00
 818              	.LASF41:
 819 00b7 55534255 		.ascii	"USBUART_EP\000"
 819      4152545F 
 819      455000
 820              	.LASF14:
 821 00c2 72656738 		.ascii	"reg8\000"
 821      00
 822              	.LASF37:
 823 00c7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 823      43313120 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 29


 823      352E342E 
 823      31203230 
 823      31363036 
 824 00fa 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 824      20726576 
 824      6973696F 
 824      6E203233 
 824      37373135 
 825 012d 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 825      66756E63 
 825      74696F6E 
 825      2D736563 
 825      74696F6E 
 826              	.LASF21:
 827 0155 61646472 		.ascii	"addr\000"
 827      00
 828              	.LASF31:
 829 015a 73696545 		.ascii	"sieEp\000"
 829      7000
 830              	.LASF32:
 831 0160 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 831      4152545F 
 831      7369655F 
 831      6570735F 
 831      73747275 
 832              	.LASF1:
 833 0177 756E7369 		.ascii	"unsigned char\000"
 833      676E6564 
 833      20636861 
 833      7200
 834              	.LASF38:
 835 0185 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART_episr.c\000"
 835      72617465 
 835      645F536F 
 835      75726365 
 835      5C50536F 
 836              	.LASF12:
 837 01ac 646F7562 		.ascii	"double\000"
 837      6C6500
 838              	.LASF17:
 839 01b3 61747472 		.ascii	"attrib\000"
 839      696200
 840              	.LASF23:
 841 01ba 62756666 		.ascii	"buffOffset\000"
 841      4F666673 
 841      657400
 842              	.LASF10:
 843 01c5 75696E74 		.ascii	"uint16\000"
 843      313600
 844              	.LASF18:
 845 01cc 61706945 		.ascii	"apiEpState\000"
 845      70537461 
 845      746500
 846              	.LASF5:
 847 01d7 6C6F6E67 		.ascii	"long unsigned int\000"
 847      20756E73 
 847      69676E65 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 30


 847      6420696E 
 847      7400
 848              	.LASF8:
 849 01e9 756E7369 		.ascii	"unsigned int\000"
 849      676E6564 
 849      20696E74 
 849      00
 850              	.LASF7:
 851 01f6 6C6F6E67 		.ascii	"long long unsigned int\000"
 851      206C6F6E 
 851      6720756E 
 851      7369676E 
 851      65642069 
 852              	.LASF19:
 853 020d 68774570 		.ascii	"hwEpState\000"
 853      53746174 
 853      6500
 854              	.LASF30:
 855 0217 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 855      4152545F 
 855      7369655F 
 855      65705F73 
 855      74727563 
 856              	.LASF16:
 857 022d 73697A65 		.ascii	"sizetype\000"
 857      74797065 
 857      00
 858              	.LASF22:
 859 0236 65704D6F 		.ascii	"epMode\000"
 859      646500
 860              	.LASF6:
 861 023d 6C6F6E67 		.ascii	"long long int\000"
 861      206C6F6E 
 861      6720696E 
 861      7400
 862              	.LASF13:
 863 024b 63686172 		.ascii	"char\000"
 863      00
 864              	.LASF24:
 865 0250 62756666 		.ascii	"bufferSize\000"
 865      65725369 
 865      7A6500
 866              	.LASF2:
 867 025b 73686F72 		.ascii	"short int\000"
 867      7420696E 
 867      7400
 868              	.LASF40:
 869 0265 55534255 		.ascii	"USBUART_BUS_RESET_ISR\000"
 869      4152545F 
 869      4255535F 
 869      52455345 
 869      545F4953 
 870              	.LASF9:
 871 027b 75696E74 		.ascii	"uint8\000"
 871      3800
 872              	.LASF25:
 873 0281 696E7465 		.ascii	"interface\000"
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\cc8n2Id6.s 			page 31


 873      72666163 
 873      6500
 874              	.LASF4:
 875 028b 6C6F6E67 		.ascii	"long int\000"
 875      20696E74 
 875      00
 876              	.LASF26:
 877 0294 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 877      42554152 
 877      545F4550 
 877      5F43544C 
 877      5F424C4F 
 878              	.LASF15:
 879 02ab 6C6F6E67 		.ascii	"long double\000"
 879      20646F75 
 879      626C6500 
 880              	.LASF0:
 881 02b7 7369676E 		.ascii	"signed char\000"
 881      65642063 
 881      68617200 
 882              	.LASF33:
 883 02c3 55534255 		.ascii	"USBUART_EP_1_ISR\000"
 883      4152545F 
 883      45505F31 
 883      5F495352 
 883      00
 884              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
