ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	UART_Init
  22              		.thumb
  23              		.thumb_func
  24              		.type	UART_Init, %function
  25              	UART_Init:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\UART.c"
   1:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART.c **** *
   5:Generated_Source\PSoC5/UART.c **** * Description:
   6:Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART.c **** *
   8:Generated_Source\PSoC5/UART.c **** * Note:
   9:Generated_Source\PSoC5/UART.c **** *
  10:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART.c **** 
  17:Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART.c **** 
  22:Generated_Source\PSoC5/UART.c **** 
  23:Generated_Source\PSoC5/UART.c **** /***************************************
  24:Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART.c **** ***************************************/
  26:Generated_Source\PSoC5/UART.c **** 
  27:Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:Generated_Source\PSoC5/UART.c **** 
  29:Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 2


  31:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART.c **** 
  35:Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART.c **** 
  48:Generated_Source\PSoC5/UART.c **** 
  49:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART.c **** *
  53:Generated_Source\PSoC5/UART.c **** * Summary:
  54:Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:Generated_Source\PSoC5/UART.c **** *
  59:Generated_Source\PSoC5/UART.c **** * Parameters:
  60:Generated_Source\PSoC5/UART.c **** *  None.
  61:Generated_Source\PSoC5/UART.c **** *
  62:Generated_Source\PSoC5/UART.c **** * Return:
  63:Generated_Source\PSoC5/UART.c **** *  None.
  64:Generated_Source\PSoC5/UART.c **** *
  65:Generated_Source\PSoC5/UART.c **** * Global variables:
  66:Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:Generated_Source\PSoC5/UART.c **** *
  72:Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART.c **** *  No.
  74:Generated_Source\PSoC5/UART.c **** *
  75:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:Generated_Source\PSoC5/UART.c **** {
  78:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  80:Generated_Source\PSoC5/UART.c ****     {
  81:Generated_Source\PSoC5/UART.c ****         UART_Init();
  82:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  83:Generated_Source\PSoC5/UART.c ****     }
  84:Generated_Source\PSoC5/UART.c **** 
  85:Generated_Source\PSoC5/UART.c ****     UART_Enable();
  86:Generated_Source\PSoC5/UART.c **** }
  87:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 3


  88:Generated_Source\PSoC5/UART.c **** 
  89:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART.c **** *
  93:Generated_Source\PSoC5/UART.c **** * Summary:
  94:Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART.c **** *
  99:Generated_Source\PSoC5/UART.c **** * Parameters:
 100:Generated_Source\PSoC5/UART.c **** *  None.
 101:Generated_Source\PSoC5/UART.c **** *
 102:Generated_Source\PSoC5/UART.c **** * Return:
 103:Generated_Source\PSoC5/UART.c **** *  None.
 104:Generated_Source\PSoC5/UART.c **** *
 105:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:Generated_Source\PSoC5/UART.c **** {
  28              		.loc 1 107 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 108:Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:Generated_Source\PSoC5/UART.c **** 
 110:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART.c **** 
 117:Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART.c **** 
 123:Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  33              		.loc 1 124 0
  34 0000 0A4B     		ldr	r3, .L2
  35 0002 7222     		movs	r2, #114
  36 0004 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  37              		.loc 1 126 0
  38 0006 A3F58073 		sub	r3, r3, #256
  39 000a 2022     		movs	r2, #32
  40 000c 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART.c **** 
 129:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 4


 132:Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART.c **** 
 136:Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
  41              		.loc 1 138 0
  42 000e 0622     		movs	r2, #6
  43 0010 03F85E2C 		strb	r2, [r3, #-94]
 139:Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
  44              		.loc 1 139 0
  45 0014 4722     		movs	r2, #71
  46 0016 03F84E2C 		strb	r2, [r3, #-78]
 140:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART.c ****         #else
 142:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART.c **** 
 146:Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:Generated_Source\PSoC5/UART.c ****         #else
 150:Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
  47              		.loc 1 150 0
  48 001a 0022     		movs	r2, #0
  49 001c 03F8022C 		strb	r2, [r3, #-2]
  50              	.LBB27:
  51              	.LBB28:
 151:Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART.c **** 
 153:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:Generated_Source\PSoC5/UART.c **** 
 155:Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART.c **** }
 161:Generated_Source\PSoC5/UART.c **** 
 162:Generated_Source\PSoC5/UART.c **** 
 163:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART.c **** *
 167:Generated_Source\PSoC5/UART.c **** * Summary:
 168:Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART.c **** *  operation.
 172:Generated_Source\PSoC5/UART.c **** 
 173:Generated_Source\PSoC5/UART.c **** * Parameters:
 174:Generated_Source\PSoC5/UART.c **** *  None.
 175:Generated_Source\PSoC5/UART.c **** *
 176:Generated_Source\PSoC5/UART.c **** * Return:
 177:Generated_Source\PSoC5/UART.c **** *  None.
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 5


 178:Generated_Source\PSoC5/UART.c **** *
 179:Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART.c **** *
 182:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:Generated_Source\PSoC5/UART.c **** {
 185:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 187:Generated_Source\PSoC5/UART.c **** 
 188:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 191:Generated_Source\PSoC5/UART.c **** 
 192:Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 194:Generated_Source\PSoC5/UART.c **** 
 195:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:Generated_Source\PSoC5/UART.c **** 
 198:Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART.c **** 
 204:Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART.c **** 
 210:Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 212:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART.c **** 
 218:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 220:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART.c **** 
 222:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 223:Generated_Source\PSoC5/UART.c **** }
 224:Generated_Source\PSoC5/UART.c **** 
 225:Generated_Source\PSoC5/UART.c **** 
 226:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART.c **** *
 230:Generated_Source\PSoC5/UART.c **** * Summary:
 231:Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART.c **** *
 233:Generated_Source\PSoC5/UART.c **** * Parameters:
 234:Generated_Source\PSoC5/UART.c **** *  None.
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 6


 235:Generated_Source\PSoC5/UART.c **** *
 236:Generated_Source\PSoC5/UART.c **** * Return:
 237:Generated_Source\PSoC5/UART.c **** *  None.
 238:Generated_Source\PSoC5/UART.c **** *
 239:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:Generated_Source\PSoC5/UART.c **** {
 242:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 244:Generated_Source\PSoC5/UART.c **** 
 245:Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 248:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART.c **** 
 250:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART.c **** 
 256:Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 258:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART.c **** 
 260:Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 263:Generated_Source\PSoC5/UART.c **** 
 264:Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART.c **** 
 269:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 271:Generated_Source\PSoC5/UART.c **** 
 272:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART.c **** 
 277:Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 278:Generated_Source\PSoC5/UART.c **** }
 279:Generated_Source\PSoC5/UART.c **** 
 280:Generated_Source\PSoC5/UART.c **** 
 281:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART.c **** *
 285:Generated_Source\PSoC5/UART.c **** * Summary:
 286:Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART.c **** *
 288:Generated_Source\PSoC5/UART.c **** * Parameters:
 289:Generated_Source\PSoC5/UART.c **** *  None.
 290:Generated_Source\PSoC5/UART.c **** *
 291:Generated_Source\PSoC5/UART.c **** * Return:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 7


 292:Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART.c **** *
 294:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART.c **** {
 297:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART.c ****         return(0u);
 299:Generated_Source\PSoC5/UART.c ****     #else
 300:Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
  52              		.loc 1 300 0
  53 0020 034A     		ldr	r2, .L2+4
  54 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  55              	.LBE28:
  56              	.LBE27:
 156:Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
  57              		.loc 1 156 0
  58 0024 03F0E703 		and	r3, r3, #231
  59              	.LVL0:
  60              	.LBB29:
  61              	.LBB30:
 301:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART.c **** }
 303:Generated_Source\PSoC5/UART.c **** 
 304:Generated_Source\PSoC5/UART.c **** 
 305:Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART.c **** *
 309:Generated_Source\PSoC5/UART.c **** * Summary:
 310:Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART.c **** *
 312:Generated_Source\PSoC5/UART.c **** * Parameters:
 313:Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART.c **** *
 315:Generated_Source\PSoC5/UART.c **** * Return:
 316:Generated_Source\PSoC5/UART.c **** *  None.
 317:Generated_Source\PSoC5/UART.c **** *
 318:Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART.c **** {
 321:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART.c ****         {
 324:Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART.c ****         }
 326:Generated_Source\PSoC5/UART.c ****     #else
 327:Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
  62              		.loc 1 327 0
  63 0028 1370     		strb	r3, [r2]
  64              	.LVL1:
  65 002a 7047     		bx	lr
  66              	.L3:
  67              		.align	2
  68              	.L2:
  69 002c 88650040 		.word	1073767816
  70 0030 7E640040 		.word	1073767550
  71              	.LBE30:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 8


  72              	.LBE29:
  73              		.cfi_endproc
  74              	.LFE1:
  75              		.size	UART_Init, .-UART_Init
  76              		.section	.text.UART_Enable,"ax",%progbits
  77              		.align	1
  78              		.global	UART_Enable
  79              		.thumb
  80              		.thumb_func
  81              		.type	UART_Enable, %function
  82              	UART_Enable:
  83              	.LFB2:
 184:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
  84              		.loc 1 184 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88 0000 10B5     		push	{r4, lr}
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 4, -8
  91              		.cfi_offset 14, -4
 186:Generated_Source\PSoC5/UART.c **** 
  92              		.loc 1 186 0
  93 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL2:
  95 0006 0446     		mov	r4, r0
  96              	.LVL3:
 190:Generated_Source\PSoC5/UART.c **** 
  97              		.loc 1 190 0
  98 0008 0C4A     		ldr	r2, .L5
  99 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 193:Generated_Source\PSoC5/UART.c **** 
 100              		.loc 1 193 0
 101 000c A2F58072 		sub	r2, r2, #256
 190:Generated_Source\PSoC5/UART.c **** 
 102              		.loc 1 190 0
 103 0010 43F02003 		orr	r3, r3, #32
 104 0014 82F80031 		strb	r3, [r2, #256]
 193:Generated_Source\PSoC5/UART.c **** 
 105              		.loc 1 193 0
 106 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 107 001a 43F01003 		orr	r3, r3, #16
 108 001e 1370     		strb	r3, [r2]
 211:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 109              		.loc 1 211 0
 110 0020 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 111 0024 43F01003 		orr	r3, r3, #16
 112 0028 02F8023C 		strb	r3, [r2, #-2]
 219:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 113              		.loc 1 219 0
 114 002c FFF7FEFF 		bl	UART_IntClock_Start
 115              	.LVL4:
 222:Generated_Source\PSoC5/UART.c **** }
 116              		.loc 1 222 0
 117 0030 2046     		mov	r0, r4
 223:Generated_Source\PSoC5/UART.c **** 
 118              		.loc 1 223 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 9


 119 0032 BDE81040 		pop	{r4, lr}
 120              		.cfi_restore 14
 121              		.cfi_restore 4
 122              		.cfi_def_cfa_offset 0
 123              	.LVL5:
 222:Generated_Source\PSoC5/UART.c **** }
 124              		.loc 1 222 0
 125 0036 FFF7FEBF 		b	CyExitCriticalSection
 126              	.LVL6:
 127              	.L6:
 128 003a 00BF     		.align	2
 129              	.L5:
 130 003c 98650040 		.word	1073767832
 131              		.cfi_endproc
 132              	.LFE2:
 133              		.size	UART_Enable, .-UART_Enable
 134              		.section	.text.UART_Start,"ax",%progbits
 135              		.align	1
 136              		.global	UART_Start
 137              		.thumb
 138              		.thumb_func
 139              		.type	UART_Start, %function
 140              	UART_Start:
 141              	.LFB0:
  77:Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
 142              		.loc 1 77 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146 0000 08B5     		push	{r3, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
  79:Generated_Source\PSoC5/UART.c ****     {
 150              		.loc 1 79 0
 151 0002 0549     		ldr	r1, .L10
 152 0004 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 153 0006 1BB9     		cbnz	r3, .L8
  81:Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
 154              		.loc 1 81 0
 155 0008 FFF7FEFF 		bl	UART_Init
 156              	.LVL7:
  82:Generated_Source\PSoC5/UART.c ****     }
 157              		.loc 1 82 0
 158 000c 0123     		movs	r3, #1
 159 000e 0B70     		strb	r3, [r1]
 160              	.L8:
  86:Generated_Source\PSoC5/UART.c **** 
 161              		.loc 1 86 0
 162 0010 BDE80840 		pop	{r3, lr}
 163              		.cfi_restore 14
 164              		.cfi_restore 3
 165              		.cfi_def_cfa_offset 0
  85:Generated_Source\PSoC5/UART.c **** }
 166              		.loc 1 85 0
 167 0014 FFF7FEBF 		b	UART_Enable
 168              	.LVL8:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 10


 169              	.L11:
 170              		.align	2
 171              	.L10:
 172 0018 00000000 		.word	.LANCHOR0
 173              		.cfi_endproc
 174              	.LFE0:
 175              		.size	UART_Start, .-UART_Start
 176              		.section	.text.UART_Stop,"ax",%progbits
 177              		.align	1
 178              		.global	UART_Stop
 179              		.thumb
 180              		.thumb_func
 181              		.type	UART_Stop, %function
 182              	UART_Stop:
 183              	.LFB3:
 241:Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 184              		.loc 1 241 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 10B5     		push	{r4, lr}
 189              		.cfi_def_cfa_offset 8
 190              		.cfi_offset 4, -8
 191              		.cfi_offset 14, -4
 243:Generated_Source\PSoC5/UART.c **** 
 192              		.loc 1 243 0
 193 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 194              	.LVL9:
 195 0006 0446     		mov	r4, r0
 196              	.LVL10:
 247:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 197              		.loc 1 247 0
 198 0008 0B4A     		ldr	r2, .L13
 199 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 200 000c 03F0DF03 		and	r3, r3, #223
 201 0010 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 202              		.loc 1 257 0
 203 0012 FFF7FEFF 		bl	UART_IntClock_Stop
 204              	.LVL11:
 262:Generated_Source\PSoC5/UART.c **** 
 205              		.loc 1 262 0
 206 0016 094A     		ldr	r2, .L13+4
 277:Generated_Source\PSoC5/UART.c **** }
 207              		.loc 1 277 0
 208 0018 2046     		mov	r0, r4
 262:Generated_Source\PSoC5/UART.c **** 
 209              		.loc 1 262 0
 210 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 211 001c 03F0EF03 		and	r3, r3, #239
 212 0020 1370     		strb	r3, [r2]
 270:Generated_Source\PSoC5/UART.c **** 
 213              		.loc 1 270 0
 214 0022 12F8023C 		ldrb	r3, [r2, #-2]	@ zero_extendqisi2
 215 0026 03F0EF03 		and	r3, r3, #239
 216 002a 02F8023C 		strb	r3, [r2, #-2]
 278:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 11


 217              		.loc 1 278 0
 218 002e BDE81040 		pop	{r4, lr}
 219              		.cfi_restore 14
 220              		.cfi_restore 4
 221              		.cfi_def_cfa_offset 0
 222              	.LVL12:
 277:Generated_Source\PSoC5/UART.c **** }
 223              		.loc 1 277 0
 224 0032 FFF7FEBF 		b	CyExitCriticalSection
 225              	.LVL13:
 226              	.L14:
 227 0036 00BF     		.align	2
 228              	.L13:
 229 0038 98650040 		.word	1073767832
 230 003c 98640040 		.word	1073767576
 231              		.cfi_endproc
 232              	.LFE3:
 233              		.size	UART_Stop, .-UART_Stop
 234              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 235              		.align	1
 236              		.global	UART_ReadControlRegister
 237              		.thumb
 238              		.thumb_func
 239              		.type	UART_ReadControlRegister, %function
 240              	UART_ReadControlRegister:
 241              	.LFB4:
 296:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 242              		.loc 1 296 0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              		@ link register save eliminated.
 300:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 247              		.loc 1 300 0
 248 0000 014B     		ldr	r3, .L16
 249 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 302:Generated_Source\PSoC5/UART.c **** 
 250              		.loc 1 302 0
 251 0004 7047     		bx	lr
 252              	.L17:
 253 0006 00BF     		.align	2
 254              	.L16:
 255 0008 7E640040 		.word	1073767550
 256              		.cfi_endproc
 257              	.LFE4:
 258              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 259              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 260              		.align	1
 261              		.global	UART_WriteControlRegister
 262              		.thumb
 263              		.thumb_func
 264              		.type	UART_WriteControlRegister, %function
 265              	UART_WriteControlRegister:
 266              	.LFB5:
 320:Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 267              		.loc 1 320 0
 268              		.cfi_startproc
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 12


 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL14:
 273              		.loc 1 327 0
 274 0000 014B     		ldr	r3, .L19
 275 0002 1870     		strb	r0, [r3]
 276 0004 7047     		bx	lr
 277              	.L20:
 278 0006 00BF     		.align	2
 279              	.L19:
 280 0008 7E640040 		.word	1073767550
 281              		.cfi_endproc
 282              	.LFE5:
 283              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 284              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 285              		.align	1
 286              		.global	UART_SetRxInterruptMode
 287              		.thumb
 288              		.thumb_func
 289              		.type	UART_SetRxInterruptMode, %function
 290              	UART_SetRxInterruptMode:
 291              	.LFB6:
 328:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART.c **** }
 330:Generated_Source\PSoC5/UART.c **** 
 331:Generated_Source\PSoC5/UART.c **** 
 332:Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART.c ****     *
 337:Generated_Source\PSoC5/UART.c ****     * Summary:
 338:Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART.c ****     *
 340:Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART.c ****     *
 352:Generated_Source\PSoC5/UART.c ****     * Return:
 353:Generated_Source\PSoC5/UART.c ****     *  None.
 354:Generated_Source\PSoC5/UART.c ****     *
 355:Generated_Source\PSoC5/UART.c ****     * Theory:
 356:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART.c ****     *
 358:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART.c ****     {
 292              		.loc 1 360 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 13


 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              		@ link register save eliminated.
 297              	.LVL15:
 361:Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 298              		.loc 1 361 0
 299 0000 014B     		ldr	r3, .L22
 300 0002 1870     		strb	r0, [r3]
 301 0004 7047     		bx	lr
 302              	.L23:
 303 0006 00BF     		.align	2
 304              	.L22:
 305 0008 88640040 		.word	1073767560
 306              		.cfi_endproc
 307              	.LFE6:
 308              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 309              		.section	.text.UART_ReadRxData,"ax",%progbits
 310              		.align	1
 311              		.global	UART_ReadRxData
 312              		.thumb
 313              		.thumb_func
 314              		.type	UART_ReadRxData, %function
 315              	UART_ReadRxData:
 316              	.LFB7:
 362:Generated_Source\PSoC5/UART.c ****     }
 363:Generated_Source\PSoC5/UART.c **** 
 364:Generated_Source\PSoC5/UART.c **** 
 365:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART.c ****     *
 369:Generated_Source\PSoC5/UART.c ****     * Summary:
 370:Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART.c ****     *
 373:Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART.c ****     *  None.
 375:Generated_Source\PSoC5/UART.c ****     *
 376:Generated_Source\PSoC5/UART.c ****     * Return:
 377:Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART.c ****     *
 379:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART.c ****     *
 388:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART.c ****     *  No.
 390:Generated_Source\PSoC5/UART.c ****     *
 391:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 14


 317              		.loc 1 393 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 394:Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART.c **** 
 396:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART.c **** 
 398:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART.c **** 
 401:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:Generated_Source\PSoC5/UART.c **** 
 404:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:Generated_Source\PSoC5/UART.c **** 
 407:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART.c ****         {
 409:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART.c **** 
 412:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART.c ****             {
 414:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART.c ****             }
 416:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART.c **** 
 419:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART.c ****             {
 421:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART.c ****                             */
 430:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART.c ****                         }
 432:Generated_Source\PSoC5/UART.c ****                     #else
 433:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART.c ****             }
 437:Generated_Source\PSoC5/UART.c ****         }
 438:Generated_Source\PSoC5/UART.c ****         else
 439:Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:Generated_Source\PSoC5/UART.c ****         }
 442:Generated_Source\PSoC5/UART.c **** 
 443:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:Generated_Source\PSoC5/UART.c **** 
 445:Generated_Source\PSoC5/UART.c ****     #else
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 15


 446:Generated_Source\PSoC5/UART.c **** 
 447:Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 322              		.loc 1 448 0
 323 0000 014B     		ldr	r3, .L25
 324 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 325              	.LVL16:
 449:Generated_Source\PSoC5/UART.c **** 
 450:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART.c **** 
 452:Generated_Source\PSoC5/UART.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART.c ****     }
 326              		.loc 1 453 0
 327 0004 7047     		bx	lr
 328              	.L26:
 329 0006 00BF     		.align	2
 330              	.L25:
 331 0008 48640040 		.word	1073767496
 332              		.cfi_endproc
 333              	.LFE7:
 334              		.size	UART_ReadRxData, .-UART_ReadRxData
 335              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 336              		.align	1
 337              		.global	UART_ReadRxStatus
 338              		.thumb
 339              		.thumb_func
 340              		.type	UART_ReadRxStatus, %function
 341              	UART_ReadRxStatus:
 342              	.LFB8:
 454:Generated_Source\PSoC5/UART.c **** 
 455:Generated_Source\PSoC5/UART.c **** 
 456:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART.c ****     *
 460:Generated_Source\PSoC5/UART.c ****     * Summary:
 461:Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART.c ****     *
 464:Generated_Source\PSoC5/UART.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART.c ****     *  None.
 466:Generated_Source\PSoC5/UART.c ****     *
 467:Generated_Source\PSoC5/UART.c ****     * Return:
 468:Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART.c ****     *
 470:Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART.c ****     *  register read.
 475:Generated_Source\PSoC5/UART.c ****     *
 476:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 16


 482:Generated_Source\PSoC5/UART.c ****     *   bits.
 483:Generated_Source\PSoC5/UART.c ****     *
 484:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART.c ****     {
 343              		.loc 1 486 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 487:Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART.c **** 
 489:Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 348              		.loc 1 489 0
 349 0000 024B     		ldr	r3, .L28
 350 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 351              	.LVL17:
 490:Generated_Source\PSoC5/UART.c **** 
 491:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART.c ****         {
 494:Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART.c ****         }
 497:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART.c **** 
 499:Generated_Source\PSoC5/UART.c ****         return(status);
 500:Generated_Source\PSoC5/UART.c ****     }
 352              		.loc 1 500 0
 353 0004 00F07F00 		and	r0, r0, #127
 354              	.LVL18:
 355 0008 7047     		bx	lr
 356              	.L29:
 357 000a 00BF     		.align	2
 358              	.L28:
 359 000c 68640040 		.word	1073767528
 360              		.cfi_endproc
 361              	.LFE8:
 362              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 363              		.section	.text.UART_GetChar,"ax",%progbits
 364              		.align	1
 365              		.global	UART_GetChar
 366              		.thumb
 367              		.thumb_func
 368              		.type	UART_GetChar, %function
 369              	UART_GetChar:
 370              	.LFB9:
 501:Generated_Source\PSoC5/UART.c **** 
 502:Generated_Source\PSoC5/UART.c **** 
 503:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART.c ****     *
 507:Generated_Source\PSoC5/UART.c ****     * Summary:
 508:Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 17


 511:Generated_Source\PSoC5/UART.c ****     *
 512:Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART.c ****     *  None.
 514:Generated_Source\PSoC5/UART.c ****     *
 515:Generated_Source\PSoC5/UART.c ****     * Return:
 516:Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART.c ****     *
 519:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART.c ****     *
 528:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART.c ****     *  No.
 530:Generated_Source\PSoC5/UART.c ****     *
 531:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
 533:Generated_Source\PSoC5/UART.c ****     {
 371              		.loc 1 533 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376              	.LVL19:
 534:Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART.c **** 
 537:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART.c **** 
 541:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:Generated_Source\PSoC5/UART.c **** 
 544:Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:Generated_Source\PSoC5/UART.c **** 
 547:Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART.c ****         {
 549:Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART.c ****             {
 553:Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART.c ****             }
 555:Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART.c **** 
 558:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART.c ****             {
 560:Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 18


 562:Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART.c ****                             */
 569:Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART.c ****                         }
 571:Generated_Source\PSoC5/UART.c ****                     #else
 572:Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART.c ****             }
 576:Generated_Source\PSoC5/UART.c **** 
 577:Generated_Source\PSoC5/UART.c ****         }
 578:Generated_Source\PSoC5/UART.c ****         else
 579:Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART.c ****                 {
 587:Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART.c ****                 }
 589:Generated_Source\PSoC5/UART.c ****             }
 590:Generated_Source\PSoC5/UART.c ****         }
 591:Generated_Source\PSoC5/UART.c **** 
 592:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:Generated_Source\PSoC5/UART.c **** 
 594:Generated_Source\PSoC5/UART.c ****     #else
 595:Generated_Source\PSoC5/UART.c **** 
 596:Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 377              		.loc 1 596 0
 378 0000 074B     		ldr	r3, .L34
 379 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 380 0004 DBB2     		uxtb	r3, r3
 381              	.LVL20:
 597:Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 382              		.loc 1 597 0
 383 0006 03F02002 		and	r2, r3, #32
 384 000a 02F0FF00 		and	r0, r2, #255
 385 000e 2AB1     		cbz	r2, .L31
 598:Generated_Source\PSoC5/UART.c ****         {
 599:Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 386              		.loc 1 600 0
 387 0010 044A     		ldr	r2, .L34+4
 601:Generated_Source\PSoC5/UART.c **** 
 602:Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 388              		.loc 1 603 0
 389 0012 13F01E0F 		tst	r3, #30
 600:Generated_Source\PSoC5/UART.c **** 
 390              		.loc 1 600 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 19


 391 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 392              	.LVL21:
 604:Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART.c ****             {
 606:Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 393              		.loc 1 606 0
 394 0018 18BF     		it	ne
 395 001a 0020     		movne	r0, #0
 396              	.LVL22:
 397              	.L31:
 607:Generated_Source\PSoC5/UART.c ****             }
 608:Generated_Source\PSoC5/UART.c ****         }
 609:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART.c **** 
 611:Generated_Source\PSoC5/UART.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART.c ****     }
 398              		.loc 1 612 0
 399 001c 7047     		bx	lr
 400              	.L35:
 401 001e 00BF     		.align	2
 402              	.L34:
 403 0020 68640040 		.word	1073767528
 404 0024 48640040 		.word	1073767496
 405              		.cfi_endproc
 406              	.LFE9:
 407              		.size	UART_GetChar, .-UART_GetChar
 408              		.section	.text.UART_GetByte,"ax",%progbits
 409              		.align	1
 410              		.global	UART_GetByte
 411              		.thumb
 412              		.thumb_func
 413              		.type	UART_GetByte, %function
 414              	UART_GetByte:
 415              	.LFB10:
 613:Generated_Source\PSoC5/UART.c **** 
 614:Generated_Source\PSoC5/UART.c **** 
 615:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART.c ****     *
 619:Generated_Source\PSoC5/UART.c ****     * Summary:
 620:Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART.c ****     *  condition.
 622:Generated_Source\PSoC5/UART.c ****     *
 623:Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART.c ****     *  None.
 625:Generated_Source\PSoC5/UART.c ****     *
 626:Generated_Source\PSoC5/UART.c ****     * Return:
 627:Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART.c ****     *
 630:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART.c ****     *  No.
 632:Generated_Source\PSoC5/UART.c ****     *
 633:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 20


 416              		.loc 1 635 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421              	.LBB31:
 422              	.LBB32:
 489:Generated_Source\PSoC5/UART.c **** 
 423              		.loc 1 489 0
 424 0000 044B     		ldr	r3, .L37
 425              	.LBE32:
 426              	.LBE31:
 427              	.LBB34:
 428              	.LBB35:
 448:Generated_Source\PSoC5/UART.c **** 
 429              		.loc 1 448 0
 430 0002 054A     		ldr	r2, .L37+4
 431              	.LBE35:
 432              	.LBE34:
 433              	.LBB37:
 434              	.LBB33:
 489:Generated_Source\PSoC5/UART.c **** 
 435              		.loc 1 489 0
 436 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 437              	.LBE33:
 438              	.LBE37:
 439              	.LBB38:
 440              	.LBB36:
 448:Generated_Source\PSoC5/UART.c **** 
 441              		.loc 1 448 0
 442 0006 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 443              	.LBE36:
 444              	.LBE38:
 636:Generated_Source\PSoC5/UART.c ****         
 637:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:Generated_Source\PSoC5/UART.c ****     #else
 646:Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 445              		.loc 1 646 0
 446 0008 03F07F03 		and	r3, r3, #127
 647:Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART.c ****         
 649:Generated_Source\PSoC5/UART.c ****     }
 447              		.loc 1 649 0
 448 000c 40EA0320 		orr	r0, r0, r3, lsl #8
 449 0010 7047     		bx	lr
 450              	.L38:
 451 0012 00BF     		.align	2
 452              	.L37:
 453 0014 68640040 		.word	1073767528
 454 0018 48640040 		.word	1073767496
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 21


 455              		.cfi_endproc
 456              	.LFE10:
 457              		.size	UART_GetByte, .-UART_GetByte
 458              		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 459              		.align	1
 460              		.global	UART_GetRxBufferSize
 461              		.thumb
 462              		.thumb_func
 463              		.type	UART_GetRxBufferSize, %function
 464              	UART_GetRxBufferSize:
 465              	.LFB11:
 650:Generated_Source\PSoC5/UART.c **** 
 651:Generated_Source\PSoC5/UART.c **** 
 652:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART.c ****     *
 656:Generated_Source\PSoC5/UART.c ****     * Summary:
 657:Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART.c ****     *    account.
 663:Generated_Source\PSoC5/UART.c ****     *
 664:Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART.c ****     *  None.
 666:Generated_Source\PSoC5/UART.c ****     *
 667:Generated_Source\PSoC5/UART.c ****     * Return:
 668:Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART.c ****     *
 671:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART.c ****     *
 676:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART.c ****     *  No.
 678:Generated_Source\PSoC5/UART.c ****     *
 679:Generated_Source\PSoC5/UART.c ****     * Theory:
 680:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART.c ****     *
 682:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART.c ****                                                             
 685:Generated_Source\PSoC5/UART.c ****     {
 466              		.loc 1 685 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 686:Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART.c **** 
 688:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART.c **** 
 690:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 22


 691:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:Generated_Source\PSoC5/UART.c **** 
 693:Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:Generated_Source\PSoC5/UART.c ****         {
 695:Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART.c ****             {
 697:Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART.c ****             }
 699:Generated_Source\PSoC5/UART.c ****             else
 700:Generated_Source\PSoC5/UART.c ****             {
 701:Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART.c ****             }
 703:Generated_Source\PSoC5/UART.c ****         }
 704:Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:Generated_Source\PSoC5/UART.c ****         {
 706:Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:Generated_Source\PSoC5/UART.c ****         }
 708:Generated_Source\PSoC5/UART.c ****         else
 709:Generated_Source\PSoC5/UART.c ****         {
 710:Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:Generated_Source\PSoC5/UART.c ****         }
 712:Generated_Source\PSoC5/UART.c **** 
 713:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:Generated_Source\PSoC5/UART.c **** 
 715:Generated_Source\PSoC5/UART.c ****     #else
 716:Generated_Source\PSoC5/UART.c **** 
 717:Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 471              		.loc 1 718 0
 472 0000 024B     		ldr	r3, .L40
 473 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 474              	.LVL23:
 719:Generated_Source\PSoC5/UART.c **** 
 720:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART.c **** 
 722:Generated_Source\PSoC5/UART.c ****         return(size);
 723:Generated_Source\PSoC5/UART.c ****     }
 475              		.loc 1 723 0
 476 0004 C0F34010 		ubfx	r0, r0, #5, #1
 477              	.LVL24:
 478 0008 7047     		bx	lr
 479              	.L41:
 480 000a 00BF     		.align	2
 481              	.L40:
 482 000c 68640040 		.word	1073767528
 483              		.cfi_endproc
 484              	.LFE11:
 485              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 486              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 487              		.align	1
 488              		.global	UART_ClearRxBuffer
 489              		.thumb
 490              		.thumb_func
 491              		.type	UART_ClearRxBuffer, %function
 492              	UART_ClearRxBuffer:
 493              	.LFB12:
 724:Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 23


 725:Generated_Source\PSoC5/UART.c **** 
 726:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART.c ****     *
 730:Generated_Source\PSoC5/UART.c ****     * Summary:
 731:Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART.c ****     *
 733:Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART.c ****     *  None.
 735:Generated_Source\PSoC5/UART.c ****     *
 736:Generated_Source\PSoC5/UART.c ****     * Return:
 737:Generated_Source\PSoC5/UART.c ****     *  None.
 738:Generated_Source\PSoC5/UART.c ****     *
 739:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART.c ****     *
 745:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART.c ****     *  No.
 747:Generated_Source\PSoC5/UART.c ****     *
 748:Generated_Source\PSoC5/UART.c ****     * Theory:
 749:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART.c ****     *
 753:Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART.c ****     *
 756:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART.c ****     {
 494              		.loc 1 758 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498 0000 08B5     		push	{r3, lr}
 499              		.cfi_def_cfa_offset 8
 500              		.cfi_offset 3, -8
 501              		.cfi_offset 14, -4
 759:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART.c **** 
 761:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 502              		.loc 1 762 0
 503 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 504              	.LVL25:
 763:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 505              		.loc 1 763 0
 506 0006 064B     		ldr	r3, .L43
 507 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 508 000a 42F00102 		orr	r2, r2, #1
 509 000e 1A70     		strb	r2, [r3]
 764:Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 510              		.loc 1 764 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 24


 511 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 512 0012 02F0FE02 		and	r2, r2, #254
 513 0016 1A70     		strb	r2, [r3]
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART.c **** 
 767:Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART.c **** 
 769:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:Generated_Source\PSoC5/UART.c **** 
 772:Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART.c **** 
 777:Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:Generated_Source\PSoC5/UART.c **** 
 779:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART.c **** 
 781:Generated_Source\PSoC5/UART.c ****     }
 514              		.loc 1 781 0
 515 0018 BDE80840 		pop	{r3, lr}
 516              		.cfi_restore 14
 517              		.cfi_restore 3
 518              		.cfi_def_cfa_offset 0
 765:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 519              		.loc 1 765 0
 520 001c FFF7FEBF 		b	CyExitCriticalSection
 521              	.LVL26:
 522              	.L44:
 523              		.align	2
 524              	.L43:
 525 0020 98640040 		.word	1073767576
 526              		.cfi_endproc
 527              	.LFE12:
 528              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 529              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 530              		.align	1
 531              		.global	UART_SetRxAddressMode
 532              		.thumb
 533              		.thumb_func
 534              		.type	UART_SetRxAddressMode, %function
 535              	UART_SetRxAddressMode:
 536              	.LFB13:
 782:Generated_Source\PSoC5/UART.c **** 
 783:Generated_Source\PSoC5/UART.c **** 
 784:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART.c ****     *
 788:Generated_Source\PSoC5/UART.c ****     * Summary:
 789:Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART.c ****     *  UART.
 791:Generated_Source\PSoC5/UART.c ****     *
 792:Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 25


 795:Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART.c ****     *
 804:Generated_Source\PSoC5/UART.c ****     * Return:
 805:Generated_Source\PSoC5/UART.c ****     *  None.
 806:Generated_Source\PSoC5/UART.c ****     *
 807:Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART.c ****     *
 812:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART.c ****                                                         
 815:Generated_Source\PSoC5/UART.c ****     {
 537              		.loc 1 815 0
 538              		.cfi_startproc
 539              		@ args = 0, pretend = 0, frame = 0
 540              		@ frame_needed = 0, uses_anonymous_args = 0
 541              		@ link register save eliminated.
 542              	.LVL27:
 543 0000 7047     		bx	lr
 544              		.cfi_endproc
 545              	.LFE13:
 546              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 547              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 548              		.align	1
 549              		.global	UART_SetRxAddress1
 550              		.thumb
 551              		.thumb_func
 552              		.type	UART_SetRxAddress1, %function
 553              	UART_SetRxAddress1:
 554              	.LFB14:
 816:Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART.c ****                 {
 820:Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART.c ****                 }
 822:Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART.c **** 
 828:Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 26


 834:Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART.c ****             {
 837:Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART.c ****             }
 839:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART.c ****     }
 841:Generated_Source\PSoC5/UART.c **** 
 842:Generated_Source\PSoC5/UART.c **** 
 843:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART.c ****     *
 847:Generated_Source\PSoC5/UART.c ****     * Summary:
 848:Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART.c ****     *
 850:Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART.c ****     *
 853:Generated_Source\PSoC5/UART.c ****     * Return:
 854:Generated_Source\PSoC5/UART.c ****     *  None.
 855:Generated_Source\PSoC5/UART.c ****     *
 856:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART.c ****     {
 555              		.loc 1 858 0
 556              		.cfi_startproc
 557              		@ args = 0, pretend = 0, frame = 0
 558              		@ frame_needed = 0, uses_anonymous_args = 0
 559              		@ link register save eliminated.
 560              	.LVL28:
 859:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 561              		.loc 1 859 0
 562 0000 014B     		ldr	r3, .L47
 563 0002 1870     		strb	r0, [r3]
 564 0004 7047     		bx	lr
 565              	.L48:
 566 0006 00BF     		.align	2
 567              	.L47:
 568 0008 28640040 		.word	1073767464
 569              		.cfi_endproc
 570              	.LFE14:
 571              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 572              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 573              		.align	1
 574              		.global	UART_SetRxAddress2
 575              		.thumb
 576              		.thumb_func
 577              		.type	UART_SetRxAddress2, %function
 578              	UART_SetRxAddress2:
 579              	.LFB15:
 860:Generated_Source\PSoC5/UART.c ****     }
 861:Generated_Source\PSoC5/UART.c **** 
 862:Generated_Source\PSoC5/UART.c **** 
 863:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 27


 866:Generated_Source\PSoC5/UART.c ****     *
 867:Generated_Source\PSoC5/UART.c ****     * Summary:
 868:Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART.c ****     *
 870:Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART.c ****     *
 873:Generated_Source\PSoC5/UART.c ****     * Return:
 874:Generated_Source\PSoC5/UART.c ****     *  None.
 875:Generated_Source\PSoC5/UART.c ****     *
 876:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART.c ****     {
 580              		.loc 1 878 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585              	.LVL29:
 879:Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 586              		.loc 1 879 0
 587 0000 014B     		ldr	r3, .L50
 588 0002 1870     		strb	r0, [r3]
 589 0004 7047     		bx	lr
 590              	.L51:
 591 0006 00BF     		.align	2
 592              	.L50:
 593 0008 38640040 		.word	1073767480
 594              		.cfi_endproc
 595              	.LFE15:
 596              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 597              		.section	.text.UART_SetTxInterruptMode,"ax",%progbits
 598              		.align	1
 599              		.global	UART_SetTxInterruptMode
 600              		.thumb
 601              		.thumb_func
 602              		.type	UART_SetTxInterruptMode, %function
 603              	UART_SetTxInterruptMode:
 604              	.LFB16:
 880:Generated_Source\PSoC5/UART.c ****     }
 881:Generated_Source\PSoC5/UART.c **** 
 882:Generated_Source\PSoC5/UART.c **** #endif  /* UART_RX_ENABLED || UART_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART.c **** 
 884:Generated_Source\PSoC5/UART.c **** 
 885:Generated_Source\PSoC5/UART.c **** #if( (UART_TX_ENABLED) || (UART_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART.c ****     *
 890:Generated_Source\PSoC5/UART.c ****     * Summary:
 891:Generated_Source\PSoC5/UART.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART.c ****     *
 894:Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 28


 898:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART.c ****     *   UART_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART.c ****     *
 901:Generated_Source\PSoC5/UART.c ****     * Return:
 902:Generated_Source\PSoC5/UART.c ****     *  None.
 903:Generated_Source\PSoC5/UART.c ****     *
 904:Generated_Source\PSoC5/UART.c ****     * Theory:
 905:Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART.c ****     *
 907:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART.c ****     void UART_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART.c ****     {
 605              		.loc 1 909 0
 606              		.cfi_startproc
 607              		@ args = 0, pretend = 0, frame = 0
 608              		@ frame_needed = 0, uses_anonymous_args = 0
 609              		@ link register save eliminated.
 610              	.LVL30:
 910:Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_MASK_REG = intSrc;
 611              		.loc 1 910 0
 612 0000 014B     		ldr	r3, .L53
 613 0002 1870     		strb	r0, [r3]
 614 0004 7047     		bx	lr
 615              	.L54:
 616 0006 00BF     		.align	2
 617              	.L53:
 618 0008 86640040 		.word	1073767558
 619              		.cfi_endproc
 620              	.LFE16:
 621              		.size	UART_SetTxInterruptMode, .-UART_SetTxInterruptMode
 622              		.section	.text.UART_WriteTxData,"ax",%progbits
 623              		.align	1
 624              		.global	UART_WriteTxData
 625              		.thumb
 626              		.thumb_func
 627              		.type	UART_WriteTxData, %function
 628              	UART_WriteTxData:
 629              	.LFB17:
 911:Generated_Source\PSoC5/UART.c ****     }
 912:Generated_Source\PSoC5/UART.c **** 
 913:Generated_Source\PSoC5/UART.c **** 
 914:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_WriteTxData
 916:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART.c ****     *
 918:Generated_Source\PSoC5/UART.c ****     * Summary:
 919:Generated_Source\PSoC5/UART.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART.c ****     *  separately.
 922:Generated_Source\PSoC5/UART.c ****     *
 923:Generated_Source\PSoC5/UART.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART.c ****     *
 926:Generated_Source\PSoC5/UART.c ****     * Return:
 927:Generated_Source\PSoC5/UART.c ****     * None.
 928:Generated_Source\PSoC5/UART.c ****     *
 929:Generated_Source\PSoC5/UART.c ****     * Global Variables:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 29


 930:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART.c ****     *
 938:Generated_Source\PSoC5/UART.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART.c ****     *  No.
 940:Generated_Source\PSoC5/UART.c ****     *
 941:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART.c ****     void UART_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART.c ****     {
 630              		.loc 1 943 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL31:
 944:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 636              		.loc 1 945 0
 637 0000 024B     		ldr	r3, .L60
 638 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 639 0004 0BB1     		cbz	r3, .L55
 946:Generated_Source\PSoC5/UART.c ****         {
 947:Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART.c **** 
 949:Generated_Source\PSoC5/UART.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 951:Generated_Source\PSoC5/UART.c **** 
 952:Generated_Source\PSoC5/UART.c ****             if( (UART_txBufferRead == UART_txBufferWrite) &&
 953:Generated_Source\PSoC5/UART.c ****                 ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
 954:Generated_Source\PSoC5/UART.c ****             {
 955:Generated_Source\PSoC5/UART.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = txDataByte;
 957:Generated_Source\PSoC5/UART.c ****             }
 958:Generated_Source\PSoC5/UART.c ****             else
 959:Generated_Source\PSoC5/UART.c ****             {
 960:Generated_Source\PSoC5/UART.c ****                 if(UART_txBufferWrite >= UART_TX_BUFFER_SIZE)
 961:Generated_Source\PSoC5/UART.c ****                 {
 962:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/UART.c ****                 }
 964:Generated_Source\PSoC5/UART.c **** 
 965:Generated_Source\PSoC5/UART.c ****                 UART_txBuffer[UART_txBufferWrite] = txDataByte;
 966:Generated_Source\PSoC5/UART.c **** 
 967:Generated_Source\PSoC5/UART.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART.c ****                 UART_txBufferWrite++;
 969:Generated_Source\PSoC5/UART.c ****             }
 970:Generated_Source\PSoC5/UART.c **** 
 971:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 972:Generated_Source\PSoC5/UART.c **** 
 973:Generated_Source\PSoC5/UART.c ****         #else
 974:Generated_Source\PSoC5/UART.c **** 
 975:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 30


 640              		.loc 1 976 0
 641 0006 024B     		ldr	r3, .L60+4
 642 0008 1870     		strb	r0, [r3]
 643              	.L55:
 644 000a 7047     		bx	lr
 645              	.L61:
 646              		.align	2
 647              	.L60:
 648 000c 00000000 		.word	.LANCHOR0
 649 0010 47640040 		.word	1073767495
 650              		.cfi_endproc
 651              	.LFE17:
 652              		.size	UART_WriteTxData, .-UART_WriteTxData
 653              		.section	.text.UART_ReadTxStatus,"ax",%progbits
 654              		.align	1
 655              		.global	UART_ReadTxStatus
 656              		.thumb
 657              		.thumb_func
 658              		.type	UART_ReadTxStatus, %function
 659              	UART_ReadTxStatus:
 660              	.LFB18:
 977:Generated_Source\PSoC5/UART.c **** 
 978:Generated_Source\PSoC5/UART.c ****         #endif /*(UART_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART.c ****         }
 980:Generated_Source\PSoC5/UART.c ****     }
 981:Generated_Source\PSoC5/UART.c **** 
 982:Generated_Source\PSoC5/UART.c **** 
 983:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadTxStatus
 985:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART.c ****     *
 987:Generated_Source\PSoC5/UART.c ****     * Summary:
 988:Generated_Source\PSoC5/UART.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART.c ****     *
 990:Generated_Source\PSoC5/UART.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART.c ****     *  None.
 992:Generated_Source\PSoC5/UART.c ****     *
 993:Generated_Source\PSoC5/UART.c ****     * Return:
 994:Generated_Source\PSoC5/UART.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART.c ****     *
 996:Generated_Source\PSoC5/UART.c ****     * Theory:
 997:Generated_Source\PSoC5/UART.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART.c ****     *
1002:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART.c ****     {
 661              		.loc 1 1004 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              		@ link register save eliminated.
1005:Generated_Source\PSoC5/UART.c ****         return(UART_TXSTATUS_REG);
 666              		.loc 1 1005 0
 667 0000 014B     		ldr	r3, .L63
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 31


 668 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1006:Generated_Source\PSoC5/UART.c ****     }
 669              		.loc 1 1006 0
 670 0004 7047     		bx	lr
 671              	.L64:
 672 0006 00BF     		.align	2
 673              	.L63:
 674 0008 66640040 		.word	1073767526
 675              		.cfi_endproc
 676              	.LFE18:
 677              		.size	UART_ReadTxStatus, .-UART_ReadTxStatus
 678              		.section	.text.UART_PutChar,"ax",%progbits
 679              		.align	1
 680              		.global	UART_PutChar
 681              		.thumb
 682              		.thumb_func
 683              		.type	UART_PutChar, %function
 684              	UART_PutChar:
 685              	.LFB19:
1007:Generated_Source\PSoC5/UART.c **** 
1008:Generated_Source\PSoC5/UART.c **** 
1009:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutChar
1011:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART.c ****     *
1013:Generated_Source\PSoC5/UART.c ****     * Summary:
1014:Generated_Source\PSoC5/UART.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART.c ****     *
1018:Generated_Source\PSoC5/UART.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART.c ****     *
1021:Generated_Source\PSoC5/UART.c ****     * Return:
1022:Generated_Source\PSoC5/UART.c ****     *  None.
1023:Generated_Source\PSoC5/UART.c ****     *
1024:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART.c ****     *  UART_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART.c ****     *
1034:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART.c ****     *  No.
1036:Generated_Source\PSoC5/UART.c ****     *
1037:Generated_Source\PSoC5/UART.c ****     * Theory:
1038:Generated_Source\PSoC5/UART.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART.c ****     *
1040:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART.c ****     void UART_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART.c ****     {
 686              		.loc 1 1042 0
 687              		.cfi_startproc
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 32


 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691              	.LVL32:
1043:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART.c ****         */
1048:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART.c ****         uint8 locTxBufferRead;
1050:Generated_Source\PSoC5/UART.c **** 
1051:Generated_Source\PSoC5/UART.c ****         do
1052:Generated_Source\PSoC5/UART.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART.c **** 
1054:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1057:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART.c **** 
1059:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite = UART_txBufferWrite;
1060:Generated_Source\PSoC5/UART.c ****             locTxBufferRead  = UART_txBufferRead;
1061:Generated_Source\PSoC5/UART.c **** 
1062:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
1065:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART.c ****         }
1067:Generated_Source\PSoC5/UART.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
1068:Generated_Source\PSoC5/UART.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
1069:Generated_Source\PSoC5/UART.c ****                                 (uint8)(UART_TX_BUFFER_SIZE - 1u)) );
1070:Generated_Source\PSoC5/UART.c **** 
1071:Generated_Source\PSoC5/UART.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
1072:Generated_Source\PSoC5/UART.c ****             ((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) == 0u) )
1073:Generated_Source\PSoC5/UART.c ****         {
1074:Generated_Source\PSoC5/UART.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART.c ****             UART_TXDATA_REG = txDataByte;
1076:Generated_Source\PSoC5/UART.c ****         }
1077:Generated_Source\PSoC5/UART.c ****         else
1078:Generated_Source\PSoC5/UART.c ****         {
1079:Generated_Source\PSoC5/UART.c ****             if(locTxBufferWrite >= UART_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART.c ****             {
1081:Generated_Source\PSoC5/UART.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART.c ****             }
1083:Generated_Source\PSoC5/UART.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART.c ****             UART_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART.c **** 
1087:Generated_Source\PSoC5/UART.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
1090:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART.c **** 
1092:Generated_Source\PSoC5/UART.c ****             UART_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART.c **** 
1094:Generated_Source\PSoC5/UART.c ****         #if ((UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 33


1096:Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_BUFFER_SIZE > UART_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART.c **** 
1098:Generated_Source\PSoC5/UART.c ****             if(0u != (UART_TXSTATUS_REG & UART_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART.c ****             {
1100:Generated_Source\PSoC5/UART.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART.c ****                 UART_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART.c ****             }
1103:Generated_Source\PSoC5/UART.c ****         }
1104:Generated_Source\PSoC5/UART.c **** 
1105:Generated_Source\PSoC5/UART.c ****     #else
1106:Generated_Source\PSoC5/UART.c **** 
1107:Generated_Source\PSoC5/UART.c ****         while((UART_TXSTATUS_REG & UART_TX_STS_FIFO_FULL) != 0u)
 692              		.loc 1 1107 0
 693 0000 034A     		ldr	r2, .L68
 694              	.L66:
 695              		.loc 1 1107 0 is_stmt 0 discriminator 1
 696 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 697 0004 5B07     		lsls	r3, r3, #29
 698 0006 FCD4     		bmi	.L66
1108:Generated_Source\PSoC5/UART.c ****         {
1109:Generated_Source\PSoC5/UART.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART.c ****         }
1111:Generated_Source\PSoC5/UART.c **** 
1112:Generated_Source\PSoC5/UART.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_REG = txDataByte;
 699              		.loc 1 1113 0 is_stmt 1
 700 0008 024B     		ldr	r3, .L68+4
 701 000a 1870     		strb	r0, [r3]
 702 000c 7047     		bx	lr
 703              	.L69:
 704 000e 00BF     		.align	2
 705              	.L68:
 706 0010 66640040 		.word	1073767526
 707 0014 47640040 		.word	1073767495
 708              		.cfi_endproc
 709              	.LFE19:
 710              		.size	UART_PutChar, .-UART_PutChar
 711              		.section	.text.UART_PutString,"ax",%progbits
 712              		.align	1
 713              		.global	UART_PutString
 714              		.thumb
 715              		.thumb_func
 716              		.type	UART_PutString, %function
 717              	UART_PutString:
 718              	.LFB20:
1114:Generated_Source\PSoC5/UART.c **** 
1115:Generated_Source\PSoC5/UART.c ****     #endif /* UART_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART.c ****     }
1117:Generated_Source\PSoC5/UART.c **** 
1118:Generated_Source\PSoC5/UART.c **** 
1119:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutString
1121:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART.c ****     *
1123:Generated_Source\PSoC5/UART.c ****     * Summary:
1124:Generated_Source\PSoC5/UART.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART.c ****     *
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 34


1126:Generated_Source\PSoC5/UART.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART.c ****     *
1129:Generated_Source\PSoC5/UART.c ****     * Return:
1130:Generated_Source\PSoC5/UART.c ****     *  None.
1131:Generated_Source\PSoC5/UART.c ****     *
1132:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART.c ****     *
1136:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART.c ****     *  No.
1138:Generated_Source\PSoC5/UART.c ****     *
1139:Generated_Source\PSoC5/UART.c ****     * Theory:
1140:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART.c ****     *
1144:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART.c ****     void UART_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART.c ****     {
 719              		.loc 1 1146 0
 720              		.cfi_startproc
 721              		@ args = 0, pretend = 0, frame = 0
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL33:
 724 0000 10B5     		push	{r4, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
1147:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
1148:Generated_Source\PSoC5/UART.c **** 
1149:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 728              		.loc 1 1150 0
 729 0002 064B     		ldr	r3, .L77
1146:Generated_Source\PSoC5/UART.c ****         uint16 bufIndex = 0u;
 730              		.loc 1 1146 0
 731 0004 0446     		mov	r4, r0
 732              		.loc 1 1150 0
 733 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 734 0008 3BB1     		cbz	r3, .L70
 735 000a 0021     		movs	r1, #0
 736              	.LVL34:
 737              	.L72:
1151:Generated_Source\PSoC5/UART.c ****         {
1152:Generated_Source\PSoC5/UART.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART.c ****             while(string[bufIndex] != (char8) 0)
 738              		.loc 1 1153 0
 739 000c 8BB2     		uxth	r3, r1
 740              	.LVL35:
 741 000e E05C     		ldrb	r0, [r4, r3]	@ zero_extendqisi2
 742 0010 0131     		adds	r1, r1, #1
 743 0012 10B1     		cbz	r0, .L70
1154:Generated_Source\PSoC5/UART.c ****             {
1155:Generated_Source\PSoC5/UART.c ****                 UART_PutChar((uint8)string[bufIndex]);
 744              		.loc 1 1155 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 35


 745 0014 FFF7FEFF 		bl	UART_PutChar
 746              	.LVL36:
 747 0018 F8E7     		b	.L72
 748              	.LVL37:
 749              	.L70:
 750 001a 10BD     		pop	{r4, pc}
 751              	.LVL38:
 752              	.L78:
 753              		.align	2
 754              	.L77:
 755 001c 00000000 		.word	.LANCHOR0
 756              		.cfi_endproc
 757              	.LFE20:
 758              		.size	UART_PutString, .-UART_PutString
 759              		.section	.text.UART_PutArray,"ax",%progbits
 760              		.align	1
 761              		.global	UART_PutArray
 762              		.thumb
 763              		.thumb_func
 764              		.type	UART_PutArray, %function
 765              	UART_PutArray:
 766              	.LFB21:
1156:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1157:Generated_Source\PSoC5/UART.c ****             }
1158:Generated_Source\PSoC5/UART.c ****         }
1159:Generated_Source\PSoC5/UART.c ****     }
1160:Generated_Source\PSoC5/UART.c **** 
1161:Generated_Source\PSoC5/UART.c **** 
1162:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutArray
1164:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART.c ****     *
1166:Generated_Source\PSoC5/UART.c ****     * Summary:
1167:Generated_Source\PSoC5/UART.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART.c ****     *
1170:Generated_Source\PSoC5/UART.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART.c ****     *
1175:Generated_Source\PSoC5/UART.c ****     * Return:
1176:Generated_Source\PSoC5/UART.c ****     *  None.
1177:Generated_Source\PSoC5/UART.c ****     *
1178:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART.c ****     *
1182:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART.c ****     *  No.
1184:Generated_Source\PSoC5/UART.c ****     *
1185:Generated_Source\PSoC5/UART.c ****     * Theory:
1186:Generated_Source\PSoC5/UART.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART.c ****     *
1190:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 36


1191:Generated_Source\PSoC5/UART.c ****     void UART_PutArray(const uint8 string[], uint8 byteCount)
1192:Generated_Source\PSoC5/UART.c ****                                                                     
1193:Generated_Source\PSoC5/UART.c ****     {
 767              		.loc 1 1193 0
 768              		.cfi_startproc
 769              		@ args = 0, pretend = 0, frame = 0
 770              		@ frame_needed = 0, uses_anonymous_args = 0
 771              	.LVL39:
 772 0000 10B5     		push	{r4, lr}
 773              		.cfi_def_cfa_offset 8
 774              		.cfi_offset 4, -8
 775              		.cfi_offset 14, -4
1194:Generated_Source\PSoC5/UART.c ****         uint8 bufIndex = 0u;
1195:Generated_Source\PSoC5/UART.c **** 
1196:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 776              		.loc 1 1197 0
 777 0002 074B     		ldr	r3, .L84
 778 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 779 0006 4BB1     		cbz	r3, .L79
 780 0008 0139     		subs	r1, r1, #1
 781              	.LVL40:
 782 000a 441E     		subs	r4, r0, #1
 783 000c 0144     		add	r1, r1, r0
 784              	.LVL41:
 785              	.L81:
1198:Generated_Source\PSoC5/UART.c ****         {
1199:Generated_Source\PSoC5/UART.c ****             while(bufIndex < byteCount)
 786              		.loc 1 1199 0
 787 000e 8C42     		cmp	r4, r1
 788 0010 04D0     		beq	.L79
1200:Generated_Source\PSoC5/UART.c ****             {
1201:Generated_Source\PSoC5/UART.c ****                 UART_PutChar(string[bufIndex]);
 789              		.loc 1 1201 0
 790 0012 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 791              	.LVL42:
 792 0016 FFF7FEFF 		bl	UART_PutChar
 793              	.LVL43:
 794 001a F8E7     		b	.L81
 795              	.LVL44:
 796              	.L79:
 797 001c 10BD     		pop	{r4, pc}
 798              	.L85:
 799 001e 00BF     		.align	2
 800              	.L84:
 801 0020 00000000 		.word	.LANCHOR0
 802              		.cfi_endproc
 803              	.LFE21:
 804              		.size	UART_PutArray, .-UART_PutArray
 805              		.section	.text.UART_PutCRLF,"ax",%progbits
 806              		.align	1
 807              		.global	UART_PutCRLF
 808              		.thumb
 809              		.thumb_func
 810              		.type	UART_PutCRLF, %function
 811              	UART_PutCRLF:
 812              	.LFB22:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 37


1202:Generated_Source\PSoC5/UART.c ****                 bufIndex++;
1203:Generated_Source\PSoC5/UART.c ****             }
1204:Generated_Source\PSoC5/UART.c ****         }
1205:Generated_Source\PSoC5/UART.c ****     }
1206:Generated_Source\PSoC5/UART.c **** 
1207:Generated_Source\PSoC5/UART.c **** 
1208:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_PutCRLF
1210:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART.c ****     *
1212:Generated_Source\PSoC5/UART.c ****     * Summary:
1213:Generated_Source\PSoC5/UART.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART.c ****     *
1216:Generated_Source\PSoC5/UART.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART.c ****     *
1219:Generated_Source\PSoC5/UART.c ****     * Return:
1220:Generated_Source\PSoC5/UART.c ****     *  None.
1221:Generated_Source\PSoC5/UART.c ****     *
1222:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART.c ****     *
1226:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART.c ****     *  No.
1228:Generated_Source\PSoC5/UART.c ****     *
1229:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART.c ****     void UART_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART.c ****     {
 813              		.loc 1 1231 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 0, uses_anonymous_args = 0
 817              	.LVL45:
 818 0000 08B5     		push	{r3, lr}
 819              		.cfi_def_cfa_offset 8
 820              		.cfi_offset 3, -8
 821              		.cfi_offset 14, -4
1232:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 822              		.loc 1 1233 0
 823 0002 074B     		ldr	r3, .L88
 824 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 0006 4BB1     		cbz	r3, .L86
1234:Generated_Source\PSoC5/UART.c ****         {
1235:Generated_Source\PSoC5/UART.c ****             UART_PutChar(txDataByte);
 826              		.loc 1 1235 0
 827 0008 FFF7FEFF 		bl	UART_PutChar
 828              	.LVL46:
1236:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Du);
 829              		.loc 1 1236 0
 830 000c 0D20     		movs	r0, #13
 831 000e FFF7FEFF 		bl	UART_PutChar
 832              	.LVL47:
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
1238:Generated_Source\PSoC5/UART.c ****         }
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 38


1239:Generated_Source\PSoC5/UART.c ****     }
 833              		.loc 1 1239 0
 834 0012 BDE80840 		pop	{r3, lr}
 835              		.cfi_remember_state
 836              		.cfi_restore 14
 837              		.cfi_restore 3
 838              		.cfi_def_cfa_offset 0
1237:Generated_Source\PSoC5/UART.c ****             UART_PutChar(0x0Au);
 839              		.loc 1 1237 0
 840 0016 0A20     		movs	r0, #10
 841 0018 FFF7FEBF 		b	UART_PutChar
 842              	.LVL48:
 843              	.L86:
 844              		.cfi_restore_state
 845 001c 08BD     		pop	{r3, pc}
 846              	.L89:
 847 001e 00BF     		.align	2
 848              	.L88:
 849 0020 00000000 		.word	.LANCHOR0
 850              		.cfi_endproc
 851              	.LFE22:
 852              		.size	UART_PutCRLF, .-UART_PutCRLF
 853              		.section	.text.UART_GetTxBufferSize,"ax",%progbits
 854              		.align	1
 855              		.global	UART_GetTxBufferSize
 856              		.thumb
 857              		.thumb_func
 858              		.type	UART_GetTxBufferSize, %function
 859              	UART_GetTxBufferSize:
 860              	.LFB23:
1240:Generated_Source\PSoC5/UART.c **** 
1241:Generated_Source\PSoC5/UART.c **** 
1242:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetTxBufferSize
1244:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART.c ****     *
1246:Generated_Source\PSoC5/UART.c ****     * Summary:
1247:Generated_Source\PSoC5/UART.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART.c ****     *
1255:Generated_Source\PSoC5/UART.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART.c ****     *  None.
1257:Generated_Source\PSoC5/UART.c ****     *
1258:Generated_Source\PSoC5/UART.c ****     * Return:
1259:Generated_Source\PSoC5/UART.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART.c ****     *
1262:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART.c ****     *
1266:Generated_Source\PSoC5/UART.c ****     * Reentrant:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 39


1267:Generated_Source\PSoC5/UART.c ****     *  No.
1268:Generated_Source\PSoC5/UART.c ****     *
1269:Generated_Source\PSoC5/UART.c ****     * Theory:
1270:Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART.c ****     *
1272:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART.c ****     uint8 UART_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART.c ****                                                             
1275:Generated_Source\PSoC5/UART.c ****     {
 861              		.loc 1 1275 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865              		@ link register save eliminated.
1276:Generated_Source\PSoC5/UART.c ****         uint8 size;
1277:Generated_Source\PSoC5/UART.c **** 
1278:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART.c **** 
1280:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1282:Generated_Source\PSoC5/UART.c **** 
1283:Generated_Source\PSoC5/UART.c ****         if(UART_txBufferRead == UART_txBufferWrite)
1284:Generated_Source\PSoC5/UART.c ****         {
1285:Generated_Source\PSoC5/UART.c ****             size = 0u;
1286:Generated_Source\PSoC5/UART.c ****         }
1287:Generated_Source\PSoC5/UART.c ****         else if(UART_txBufferRead < UART_txBufferWrite)
1288:Generated_Source\PSoC5/UART.c ****         {
1289:Generated_Source\PSoC5/UART.c ****             size = (UART_txBufferWrite - UART_txBufferRead);
1290:Generated_Source\PSoC5/UART.c ****         }
1291:Generated_Source\PSoC5/UART.c ****         else
1292:Generated_Source\PSoC5/UART.c ****         {
1293:Generated_Source\PSoC5/UART.c ****             size = (UART_TX_BUFFER_SIZE - UART_txBufferRead) +
1294:Generated_Source\PSoC5/UART.c ****                     UART_txBufferWrite;
1295:Generated_Source\PSoC5/UART.c ****         }
1296:Generated_Source\PSoC5/UART.c **** 
1297:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1298:Generated_Source\PSoC5/UART.c **** 
1299:Generated_Source\PSoC5/UART.c ****     #else
1300:Generated_Source\PSoC5/UART.c **** 
1301:Generated_Source\PSoC5/UART.c ****         size = UART_TXSTATUS_REG;
 866              		.loc 1 1301 0
 867 0000 054B     		ldr	r3, .L93
 868 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 869 0004 C0B2     		uxtb	r0, r0
 870              	.LVL49:
1302:Generated_Source\PSoC5/UART.c **** 
1303:Generated_Source\PSoC5/UART.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART.c ****         if((size & UART_TX_STS_FIFO_FULL) != 0u)
 871              		.loc 1 1304 0
 872 0006 4307     		lsls	r3, r0, #29
1305:Generated_Source\PSoC5/UART.c ****         {
1306:Generated_Source\PSoC5/UART.c ****             size = UART_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART.c ****         }
1308:Generated_Source\PSoC5/UART.c ****         else if((size & UART_TX_STS_FIFO_EMPTY) != 0u)
 873              		.loc 1 1308 0
 874 0008 5ABF     		itte	pl
 875 000a 80F00200 		eorpl	r0, r0, #2
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 40


 876              	.LVL50:
 877 000e C0F34000 		ubfxpl	r0, r0, #1, #1
1306:Generated_Source\PSoC5/UART.c ****         }
 878              		.loc 1 1306 0
 879 0012 0420     		movmi	r0, #4
 880              	.LVL51:
1309:Generated_Source\PSoC5/UART.c ****         {
1310:Generated_Source\PSoC5/UART.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART.c ****         }
1312:Generated_Source\PSoC5/UART.c ****         else
1313:Generated_Source\PSoC5/UART.c ****         {
1314:Generated_Source\PSoC5/UART.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART.c ****         }
1317:Generated_Source\PSoC5/UART.c **** 
1318:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART.c **** 
1320:Generated_Source\PSoC5/UART.c ****     return(size);
1321:Generated_Source\PSoC5/UART.c ****     }
 881              		.loc 1 1321 0
 882 0014 7047     		bx	lr
 883              	.L94:
 884 0016 00BF     		.align	2
 885              	.L93:
 886 0018 66640040 		.word	1073767526
 887              		.cfi_endproc
 888              	.LFE23:
 889              		.size	UART_GetTxBufferSize, .-UART_GetTxBufferSize
 890              		.section	.text.UART_ClearTxBuffer,"ax",%progbits
 891              		.align	1
 892              		.global	UART_ClearTxBuffer
 893              		.thumb
 894              		.thumb_func
 895              		.type	UART_ClearTxBuffer, %function
 896              	UART_ClearTxBuffer:
 897              	.LFB24:
1322:Generated_Source\PSoC5/UART.c **** 
1323:Generated_Source\PSoC5/UART.c **** 
1324:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearTxBuffer
1326:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART.c ****     *
1328:Generated_Source\PSoC5/UART.c ****     * Summary:
1329:Generated_Source\PSoC5/UART.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART.c ****     *
1331:Generated_Source\PSoC5/UART.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART.c ****     *  None.
1333:Generated_Source\PSoC5/UART.c ****     *
1334:Generated_Source\PSoC5/UART.c ****     * Return:
1335:Generated_Source\PSoC5/UART.c ****     *  None.
1336:Generated_Source\PSoC5/UART.c ****     *
1337:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART.c ****     *  UART_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART.c ****     *
1341:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART.c ****     *  No.
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 41


1343:Generated_Source\PSoC5/UART.c ****     *
1344:Generated_Source\PSoC5/UART.c ****     * Theory:
1345:Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART.c ****     *
1349:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART.c ****     *
1353:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART.c ****     void UART_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART.c ****     {
 898              		.loc 1 1355 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 0
 901              		@ frame_needed = 0, uses_anonymous_args = 0
 902 0000 08B5     		push	{r3, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 3, -8
 905              		.cfi_offset 14, -4
1356:Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART.c **** 
1358:Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 906              		.loc 1 1358 0
 907 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 908              	.LVL52:
1359:Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG |= (uint8)  UART_TX_FIFO_CLR;
 909              		.loc 1 1360 0
 910 0006 064B     		ldr	r3, .L96
 911 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 912 000a 42F00102 		orr	r2, r2, #1
 913 000e 1A70     		strb	r2, [r3]
1361:Generated_Source\PSoC5/UART.c ****         UART_TXDATA_AUX_CTL_REG &= (uint8) ~UART_TX_FIFO_CLR;
 914              		.loc 1 1361 0
 915 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 916 0012 02F0FE02 		and	r2, r2, #254
 917 0016 1A70     		strb	r2, [r3]
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
1363:Generated_Source\PSoC5/UART.c **** 
1364:Generated_Source\PSoC5/UART.c ****     #if (UART_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART.c **** 
1366:Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART.c ****         UART_DisableTxInt();
1368:Generated_Source\PSoC5/UART.c **** 
1369:Generated_Source\PSoC5/UART.c ****         UART_txBufferRead = 0u;
1370:Generated_Source\PSoC5/UART.c ****         UART_txBufferWrite = 0u;
1371:Generated_Source\PSoC5/UART.c **** 
1372:Generated_Source\PSoC5/UART.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART.c ****         UART_EnableTxInt();
1374:Generated_Source\PSoC5/UART.c **** 
1375:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART.c ****     }
 918              		.loc 1 1376 0
 919 0018 BDE80840 		pop	{r3, lr}
 920              		.cfi_restore 14
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 42


 921              		.cfi_restore 3
 922              		.cfi_def_cfa_offset 0
1362:Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 923              		.loc 1 1362 0
 924 001c FFF7FEBF 		b	CyExitCriticalSection
 925              	.LVL53:
 926              	.L97:
 927              		.align	2
 928              	.L96:
 929 0020 97640040 		.word	1073767575
 930              		.cfi_endproc
 931              	.LFE24:
 932              		.size	UART_ClearTxBuffer, .-UART_ClearTxBuffer
 933              		.section	.text.UART_SendBreak,"ax",%progbits
 934              		.align	1
 935              		.global	UART_SendBreak
 936              		.thumb
 937              		.thumb_func
 938              		.type	UART_SendBreak, %function
 939              	UART_SendBreak:
 940              	.LFB25:
1377:Generated_Source\PSoC5/UART.c **** 
1378:Generated_Source\PSoC5/UART.c **** 
1379:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SendBreak
1381:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART.c ****     *
1383:Generated_Source\PSoC5/UART.c ****     * Summary:
1384:Generated_Source\PSoC5/UART.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART.c ****     *
1386:Generated_Source\PSoC5/UART.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART.c ****     *   UART_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART.c ****     *   UART_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART.c ****     *       then return.
1394:Generated_Source\PSoC5/UART.c ****     *   UART_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART.c ****     *      UART_SEND_BREAK and UART_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART.c ****     *
1398:Generated_Source\PSoC5/UART.c ****     * Return:
1399:Generated_Source\PSoC5/UART.c ****     *  None.
1400:Generated_Source\PSoC5/UART.c ****     *
1401:Generated_Source\PSoC5/UART.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART.c ****     *  UART_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART.c ****     *
1406:Generated_Source\PSoC5/UART.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART.c ****     *  No.
1408:Generated_Source\PSoC5/UART.c ****     *
1409:Generated_Source\PSoC5/UART.c ****     * Theory:
1410:Generated_Source\PSoC5/UART.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART.c ****     *  operation.
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 43


1413:Generated_Source\PSoC5/UART.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART.c ****     *     complete.
1417:Generated_Source\PSoC5/UART.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART.c ****     *     operation
1419:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART.c ****     *
1432:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART.c ****     *  The UART_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART.c ****     *
1439:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART.c ****     void UART_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART.c ****     {
 941              		.loc 1 1441 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 945              		@ link register save eliminated.
 946              	.LVL54:
1442:Generated_Source\PSoC5/UART.c **** 
1443:Generated_Source\PSoC5/UART.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART.c ****         if(UART_initVar != 0u)
 947              		.loc 1 1444 0
 948 0000 174B     		ldr	r3, .L121
 949 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 950 0004 52B3     		cbz	r2, .L98
 951              	.LBB39:
1445:Generated_Source\PSoC5/UART.c ****         {
1446:Generated_Source\PSoC5/UART.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART.c **** 
1450:Generated_Source\PSoC5/UART.c ****         #if(UART_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART.c **** 
1452:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART.c ****             {
1455:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART.c ****                                                       UART_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 44


1459:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART.c **** 
1461:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART.c ****                 {
1463:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART.c ****                 }
1465:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART.c ****             }
1467:Generated_Source\PSoC5/UART.c **** 
1468:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART.c ****             {
1471:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART.c ****                 {
1473:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART.c ****                 }
1475:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART.c ****             }
1477:Generated_Source\PSoC5/UART.c **** 
1478:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1480:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART.c ****             {
1482:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART.c ****                                               (uint8)~UART_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART.c ****             }
1485:Generated_Source\PSoC5/UART.c **** 
1486:Generated_Source\PSoC5/UART.c ****         #else /* UART_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART.c **** 
1488:Generated_Source\PSoC5/UART.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART.c **** 
1490:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_SEND_BREAK) ||
 952              		.loc 1 1490 0
 953 0006 08B1     		cbz	r0, .L101
 954              		.loc 1 1490 0 is_stmt 0 discriminator 1
 955 0008 0328     		cmp	r0, #3
 956 000a 25D1     		bne	.L102
 957              	.L101:
 958              	.LBB40:
 959              	.LBB41:
 300:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 960              		.loc 1 300 0 is_stmt 1
 961 000c 1549     		ldr	r1, .L121+4
 962 000e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 963              	.LBE41:
 964              	.LBE40:
1491:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART.c ****             {
1493:Generated_Source\PSoC5/UART.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART.c ****                 #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART.c ****                                     (UART_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART.c ****                     UART_WriteControlRegister(UART_ReadControlRegister() |
 965              		.loc 1 1496 0
 966 0010 42F00202 		orr	r2, r2, #2
 967              	.LVL55:
 968              	.LBB42:
 969              	.LBB43:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 45


 327:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 970              		.loc 1 327 0
 971 0014 0A70     		strb	r2, [r1]
 972              	.LVL56:
 973              	.LBE43:
 974              	.LBE42:
1497:Generated_Source\PSoC5/UART.c ****                                                           UART_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_PARITY_TYPE != UART__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART.c **** 
1500:Generated_Source\PSoC5/UART.c ****                 #if(UART_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCLKTX_COMPLETE_REG;
 975              		.loc 1 1501 0
 976 0016 144A     		ldr	r2, .L121+8
 977 0018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 978 001a 5970     		strb	r1, [r3, #1]
1502:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCLKTX_COMPLETE_REG = UART_TXBITCTR_BREAKBITS;
 979              		.loc 1 1502 0
 980 001c 6721     		movs	r1, #103
 981 001e 1170     		strb	r1, [r2]
1503:Generated_Source\PSoC5/UART.c ****                 #else
1504:Generated_Source\PSoC5/UART.c ****                     txPeriod = UART_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART.c ****                     UART_TXBITCTR_PERIOD_REG = UART_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART.c **** 
1508:Generated_Source\PSoC5/UART.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART.c ****                 UART_TXDATA_REG = 0u;
 982              		.loc 1 1509 0
 983 0020 0021     		movs	r1, #0
 984 0022 5173     		strb	r1, [r2, #13]
1510:Generated_Source\PSoC5/UART.c **** 
1511:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART.c ****                 {
1513:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
 985              		.loc 1 1513 0
 986 0024 1149     		ldr	r1, .L121+12
 987              	.L103:
 988              		.loc 1 1513 0 is_stmt 0 discriminator 1
 989 0026 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 990              	.LVL57:
1514:Generated_Source\PSoC5/UART.c ****                 }
1515:Generated_Source\PSoC5/UART.c ****                 while((tmpStat & UART_TX_STS_FIFO_EMPTY) != 0u);
 991              		.loc 1 1515 0 is_stmt 1 discriminator 1
 992 0028 9207     		lsls	r2, r2, #30
 993              	.LVL58:
 994 002a FCD4     		bmi	.L103
1516:Generated_Source\PSoC5/UART.c ****             }
1517:Generated_Source\PSoC5/UART.c **** 
1518:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 995              		.loc 1 1518 0
 996 002c 00F0FD02 		and	r2, r0, #253
 997 0030 012A     		cmp	r2, #1
 998              	.L120:
 999 0032 03D0     		beq	.L104
 1000              	.L108:
1519:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART.c ****             {
1521:Generated_Source\PSoC5/UART.c ****                 do /* Wait until transmit complete */
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 46


1522:Generated_Source\PSoC5/UART.c ****                 {
1523:Generated_Source\PSoC5/UART.c ****                     tmpStat = UART_TXSTATUS_REG;
1524:Generated_Source\PSoC5/UART.c ****                 }
1525:Generated_Source\PSoC5/UART.c ****                 while(((uint8)~tmpStat & UART_TX_STS_COMPLETE) != 0u);
1526:Generated_Source\PSoC5/UART.c ****             }
1527:Generated_Source\PSoC5/UART.c **** 
1528:Generated_Source\PSoC5/UART.c ****             if( (retMode == UART_WAIT_FOR_COMPLETE_REINIT) ||
 1001              		.loc 1 1528 0
 1002 0034 0138     		subs	r0, r0, #1
 1003              	.LVL59:
 1004 0036 0228     		cmp	r0, #2
 1005 0038 05D9     		bls	.L105
 1006 003a 7047     		bx	lr
 1007              	.LVL60:
 1008              	.L104:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1009              		.loc 1 1523 0
 1010 003c 0B49     		ldr	r1, .L121+12
 1011              	.L107:
1523:Generated_Source\PSoC5/UART.c ****                 }
 1012              		.loc 1 1523 0 is_stmt 0 discriminator 1
 1013 003e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1014              	.LVL61:
1525:Generated_Source\PSoC5/UART.c ****             }
 1015              		.loc 1 1525 0 is_stmt 1 discriminator 1
 1016 0040 D207     		lsls	r2, r2, #31
 1017              	.LVL62:
 1018 0042 FCD5     		bpl	.L107
 1019 0044 F6E7     		b	.L108
 1020              	.LVL63:
 1021              	.L105:
1529:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_REINIT) ||
1530:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART.c ****             {
1532:Generated_Source\PSoC5/UART.c **** 
1533:Generated_Source\PSoC5/UART.c ****             #if(UART_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1022              		.loc 1 1534 0
 1023 0046 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1024 0048 074B     		ldr	r3, .L121+8
 1025 004a 1A70     		strb	r2, [r3]
 1026              	.LBB44:
 1027              	.LBB45:
 300:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 1028              		.loc 1 300 0
 1029 004c 054A     		ldr	r2, .L121+4
 1030 004e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1031              	.LBE45:
 1032              	.LBE44:
1535:Generated_Source\PSoC5/UART.c ****             #else
1536:Generated_Source\PSoC5/UART.c ****                 UART_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART.c **** 
1539:Generated_Source\PSoC5/UART.c ****             #if( (UART_PARITY_TYPE != UART__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART.c ****                  (UART_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART.c ****                 UART_WriteControlRegister(UART_ReadControlRegister() &
 1033              		.loc 1 1541 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 47


 1034 0050 03F0FD03 		and	r3, r3, #253
 1035              	.LVL64:
 1036              	.LBB46:
 1037              	.LBB47:
 327:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 1038              		.loc 1 327 0
 1039 0054 1370     		strb	r3, [r2]
 1040              	.LBE47:
 1041              	.LBE46:
 1042              	.LBE39:
1542:Generated_Source\PSoC5/UART.c ****                                                       (uint8) ~UART_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART.c ****             #endif /* End UART_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART.c ****             }
1545:Generated_Source\PSoC5/UART.c ****         #endif    /* End UART_HD_ENABLED */
1546:Generated_Source\PSoC5/UART.c ****         }
1547:Generated_Source\PSoC5/UART.c ****     }
 1043              		.loc 1 1547 0
 1044 0056 7047     		bx	lr
 1045              	.LVL65:
 1046              	.L102:
 1047              	.LBB48:
1518:Generated_Source\PSoC5/UART.c ****                 (retMode == UART_SEND_WAIT_REINIT) )
 1048              		.loc 1 1518 0
 1049 0058 0128     		cmp	r0, #1
 1050 005a EAE7     		b	.L120
 1051              	.L98:
 1052 005c 7047     		bx	lr
 1053              	.L122:
 1054 005e 00BF     		.align	2
 1055              	.L121:
 1056 0060 00000000 		.word	.LANCHOR0
 1057 0064 7E640040 		.word	1073767550
 1058 0068 3A640040 		.word	1073767482
 1059 006c 66640040 		.word	1073767526
 1060              	.LBE48:
 1061              		.cfi_endproc
 1062              	.LFE25:
 1063              		.size	UART_SendBreak, .-UART_SendBreak
 1064              		.section	.text.UART_SetTxAddressMode,"ax",%progbits
 1065              		.align	1
 1066              		.global	UART_SetTxAddressMode
 1067              		.thumb
 1068              		.thumb_func
 1069              		.type	UART_SetTxAddressMode, %function
 1070              	UART_SetTxAddressMode:
 1071              	.LFB26:
1548:Generated_Source\PSoC5/UART.c **** 
1549:Generated_Source\PSoC5/UART.c **** 
1550:Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetTxAddressMode
1552:Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART.c ****     *
1554:Generated_Source\PSoC5/UART.c ****     * Summary:
1555:Generated_Source\PSoC5/UART.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART.c ****     *
1557:Generated_Source\PSoC5/UART.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART.c ****     *  addressMode: 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 48


1559:Generated_Source\PSoC5/UART.c ****     *       UART_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART.c ****     *       UART_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART.c ****     *
1564:Generated_Source\PSoC5/UART.c ****     * Return:
1565:Generated_Source\PSoC5/UART.c ****     *  None.
1566:Generated_Source\PSoC5/UART.c ****     *
1567:Generated_Source\PSoC5/UART.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART.c ****     *  This function sets and clears UART_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART.c ****     *  register.
1570:Generated_Source\PSoC5/UART.c ****     *
1571:Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART.c ****     void UART_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART.c ****     {
 1072              		.loc 1 1573 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077              	.LVL66:
 1078 0000 044B     		ldr	r3, .L127
 1079              	.LBB49:
 1080              	.LBB50:
 300:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 1081              		.loc 1 300 0
 1082 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1083              	.LBE50:
 1084              	.LBE49:
1574:Generated_Source\PSoC5/UART.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART.c ****         if(addressMode != 0u)
 1085              		.loc 1 1575 0
 1086 0004 10B1     		cbz	r0, .L124
1576:Generated_Source\PSoC5/UART.c ****         {
1577:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() |
 1087              		.loc 1 1578 0
 1088 0006 42F00402 		orr	r2, r2, #4
 1089              	.LVL67:
 1090 000a 01E0     		b	.L126
 1091              	.LVL68:
 1092              	.L124:
1579:Generated_Source\PSoC5/UART.c ****                                                   UART_CTRL_MARK);
1580:Generated_Source\PSoC5/UART.c ****         #endif /* End UART_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART.c ****         }
1582:Generated_Source\PSoC5/UART.c ****         else
1583:Generated_Source\PSoC5/UART.c ****         {
1584:Generated_Source\PSoC5/UART.c ****         #if( UART_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART.c ****             UART_WriteControlRegister(UART_ReadControlRegister() &
 1093              		.loc 1 1585 0
 1094 000c 02F0FB02 		and	r2, r2, #251
 1095              	.L126:
 1096              	.LVL69:
 1097              	.LBB51:
 1098              	.LBB52:
 327:Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 1099              		.loc 1 327 0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 49


 1100 0010 1A70     		strb	r2, [r3]
 1101 0012 7047     		bx	lr
 1102              	.L128:
 1103              		.align	2
 1104              	.L127:
 1105 0014 7E640040 		.word	1073767550
 1106              	.LBE52:
 1107              	.LBE51:
 1108              		.cfi_endproc
 1109              	.LFE26:
 1110              		.size	UART_SetTxAddressMode, .-UART_SetTxAddressMode
 1111              		.global	UART_initVar
 1112              		.bss
 1113              		.set	.LANCHOR0,. + 0
 1114              		.type	UART_initVar, %object
 1115              		.size	UART_initVar, 1
 1116              	UART_initVar:
 1117 0000 00       		.space	1
 1118              		.type	txPeriod.5123, %object
 1119              		.size	txPeriod.5123, 1
 1120              	txPeriod.5123:
 1121 0001 00       		.space	1
 1122              		.text
 1123              	.Letext0:
 1124              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1125              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1126              		.file 4 "Generated_Source\\PSoC5\\UART_IntClock.h"
 1127              		.section	.debug_info,"",%progbits
 1128              	.Ldebug_info0:
 1129 0000 05070000 		.4byte	0x705
 1130 0004 0400     		.2byte	0x4
 1131 0006 00000000 		.4byte	.Ldebug_abbrev0
 1132 000a 04       		.byte	0x4
 1133 000b 01       		.uleb128 0x1
 1134 000c BA000000 		.4byte	.LASF61
 1135 0010 0C       		.byte	0xc
 1136 0011 FF020000 		.4byte	.LASF62
 1137 0015 51000000 		.4byte	.LASF63
 1138 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1139 001d 00000000 		.4byte	0
 1140 0021 00000000 		.4byte	.Ldebug_line0
 1141 0025 02       		.uleb128 0x2
 1142 0026 01       		.byte	0x1
 1143 0027 06       		.byte	0x6
 1144 0028 AE000000 		.4byte	.LASF0
 1145 002c 02       		.uleb128 0x2
 1146 002d 01       		.byte	0x1
 1147 002e 08       		.byte	0x8
 1148 002f 4D030000 		.4byte	.LASF1
 1149 0033 02       		.uleb128 0x2
 1150 0034 02       		.byte	0x2
 1151 0035 05       		.byte	0x5
 1152 0036 6C030000 		.4byte	.LASF2
 1153 003a 02       		.uleb128 0x2
 1154 003b 02       		.byte	0x2
 1155 003c 07       		.byte	0x7
 1156 003d 39020000 		.4byte	.LASF3
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 50


 1157 0041 02       		.uleb128 0x2
 1158 0042 04       		.byte	0x4
 1159 0043 05       		.byte	0x5
 1160 0044 51010000 		.4byte	.LASF4
 1161 0048 02       		.uleb128 0x2
 1162 0049 04       		.byte	0x4
 1163 004a 07       		.byte	0x7
 1164 004b FD010000 		.4byte	.LASF5
 1165 004f 02       		.uleb128 0x2
 1166 0050 08       		.byte	0x8
 1167 0051 05       		.byte	0x5
 1168 0052 A0000000 		.4byte	.LASF6
 1169 0056 02       		.uleb128 0x2
 1170 0057 08       		.byte	0x8
 1171 0058 07       		.byte	0x7
 1172 0059 2F000000 		.4byte	.LASF7
 1173 005d 03       		.uleb128 0x3
 1174 005e 04       		.byte	0x4
 1175 005f 05       		.byte	0x5
 1176 0060 696E7400 		.ascii	"int\000"
 1177 0064 02       		.uleb128 0x2
 1178 0065 04       		.byte	0x4
 1179 0066 07       		.byte	0x7
 1180 0067 D0010000 		.4byte	.LASF8
 1181 006b 04       		.uleb128 0x4
 1182 006c 77010000 		.4byte	.LASF9
 1183 0070 02       		.byte	0x2
 1184 0071 E901     		.2byte	0x1e9
 1185 0073 2C000000 		.4byte	0x2c
 1186 0077 04       		.uleb128 0x4
 1187 0078 00000000 		.4byte	.LASF10
 1188 007c 02       		.byte	0x2
 1189 007d EA01     		.2byte	0x1ea
 1190 007f 3A000000 		.4byte	0x3a
 1191 0083 02       		.uleb128 0x2
 1192 0084 04       		.byte	0x4
 1193 0085 04       		.byte	0x4
 1194 0086 28040000 		.4byte	.LASF11
 1195 008a 02       		.uleb128 0x2
 1196 008b 08       		.byte	0x8
 1197 008c 04       		.byte	0x4
 1198 008d 96010000 		.4byte	.LASF12
 1199 0091 04       		.uleb128 0x4
 1200 0092 B9030000 		.4byte	.LASF13
 1201 0096 02       		.byte	0x2
 1202 0097 FA01     		.2byte	0x1fa
 1203 0099 9D000000 		.4byte	0x9d
 1204 009d 02       		.uleb128 0x2
 1205 009e 01       		.byte	0x1
 1206 009f 08       		.byte	0x8
 1207 00a0 B4030000 		.4byte	.LASF14
 1208 00a4 04       		.uleb128 0x4
 1209 00a5 32030000 		.4byte	.LASF15
 1210 00a9 02       		.byte	0x2
 1211 00aa 9302     		.2byte	0x293
 1212 00ac B0000000 		.4byte	0xb0
 1213 00b0 05       		.uleb128 0x5
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 51


 1214 00b1 6B000000 		.4byte	0x6b
 1215 00b5 02       		.uleb128 0x2
 1216 00b6 08       		.byte	0x8
 1217 00b7 04       		.byte	0x4
 1218 00b8 A9020000 		.4byte	.LASF16
 1219 00bc 02       		.uleb128 0x2
 1220 00bd 04       		.byte	0x4
 1221 00be 07       		.byte	0x7
 1222 00bf A0020000 		.4byte	.LASF17
 1223 00c3 06       		.uleb128 0x6
 1224 00c4 3D040000 		.4byte	.LASF64
 1225 00c8 01       		.byte	0x1
 1226 00c9 3F01     		.2byte	0x13f
 1227 00cb 01       		.byte	0x1
 1228 00cc DD000000 		.4byte	0xdd
 1229 00d0 07       		.uleb128 0x7
 1230 00d1 A9010000 		.4byte	.LASF65
 1231 00d5 01       		.byte	0x1
 1232 00d6 3F01     		.2byte	0x13f
 1233 00d8 6B000000 		.4byte	0x6b
 1234 00dc 00       		.byte	0
 1235 00dd 08       		.uleb128 0x8
 1236 00de 7D010000 		.4byte	.LASF66
 1237 00e2 01       		.byte	0x1
 1238 00e3 2701     		.2byte	0x127
 1239 00e5 6B000000 		.4byte	0x6b
 1240 00e9 01       		.byte	0x1
 1241 00ea 09       		.uleb128 0x9
 1242 00eb 67010000 		.4byte	.LASF18
 1243 00ef 01       		.byte	0x1
 1244 00f0 8801     		.2byte	0x188
 1245 00f2 6B000000 		.4byte	0x6b
 1246 00f6 01       		.byte	0x1
 1247 00f7 08010000 		.4byte	0x108
 1248 00fb 0A       		.uleb128 0xa
 1249 00fc 8F030000 		.4byte	.LASF20
 1250 0100 01       		.byte	0x1
 1251 0101 8A01     		.2byte	0x18a
 1252 0103 6B000000 		.4byte	0x6b
 1253 0107 00       		.byte	0
 1254 0108 09       		.uleb128 0x9
 1255 0109 A2030000 		.4byte	.LASF19
 1256 010d 01       		.byte	0x1
 1257 010e E501     		.2byte	0x1e5
 1258 0110 6B000000 		.4byte	0x6b
 1259 0114 01       		.byte	0x1
 1260 0115 26010000 		.4byte	0x126
 1261 0119 0A       		.uleb128 0xa
 1262 011a 17040000 		.4byte	.LASF21
 1263 011e 01       		.byte	0x1
 1264 011f E701     		.2byte	0x1e7
 1265 0121 6B000000 		.4byte	0x6b
 1266 0125 00       		.byte	0
 1267 0126 0B       		.uleb128 0xb
 1268 0127 B1010000 		.4byte	.LASF22
 1269 012b 01       		.byte	0x1
 1270 012c 6A       		.byte	0x6a
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 52


 1271 012d 00000000 		.4byte	.LFB1
 1272 0131 34000000 		.4byte	.LFE1-.LFB1
 1273 0135 01       		.uleb128 0x1
 1274 0136 9C       		.byte	0x9c
 1275 0137 64010000 		.4byte	0x164
 1276 013b 0C       		.uleb128 0xc
 1277 013c DD000000 		.4byte	0xdd
 1278 0140 20000000 		.4byte	.LBB27
 1279 0144 04000000 		.4byte	.LBE27-.LBB27
 1280 0148 01       		.byte	0x1
 1281 0149 9D       		.byte	0x9d
 1282 014a 0D       		.uleb128 0xd
 1283 014b C3000000 		.4byte	0xc3
 1284 014f 28000000 		.4byte	.LBB29
 1285 0153 0C000000 		.4byte	.LBE29-.LBB29
 1286 0157 01       		.byte	0x1
 1287 0158 9C       		.byte	0x9c
 1288 0159 0E       		.uleb128 0xe
 1289 015a D0000000 		.4byte	0xd0
 1290 015e 00000000 		.4byte	.LLST0
 1291 0162 00       		.byte	0
 1292 0163 00       		.byte	0
 1293 0164 0B       		.uleb128 0xb
 1294 0165 96030000 		.4byte	.LASF23
 1295 0169 01       		.byte	0x1
 1296 016a B7       		.byte	0xb7
 1297 016b 00000000 		.4byte	.LFB2
 1298 016f 40000000 		.4byte	.LFE2-.LFB2
 1299 0173 01       		.uleb128 0x1
 1300 0174 9C       		.byte	0x9c
 1301 0175 A4010000 		.4byte	0x1a4
 1302 0179 0F       		.uleb128 0xf
 1303 017a E4030000 		.4byte	.LASF26
 1304 017e 01       		.byte	0x1
 1305 017f B9       		.byte	0xb9
 1306 0180 6B000000 		.4byte	0x6b
 1307 0184 13000000 		.4byte	.LLST1
 1308 0188 10       		.uleb128 0x10
 1309 0189 06000000 		.4byte	.LVL2
 1310 018d DC060000 		.4byte	0x6dc
 1311 0191 10       		.uleb128 0x10
 1312 0192 30000000 		.4byte	.LVL4
 1313 0196 E7060000 		.4byte	0x6e7
 1314 019a 11       		.uleb128 0x11
 1315 019b 3A000000 		.4byte	.LVL6
 1316 019f F2060000 		.4byte	0x6f2
 1317 01a3 00       		.byte	0
 1318 01a4 0B       		.uleb128 0xb
 1319 01a5 46000000 		.4byte	.LASF24
 1320 01a9 01       		.byte	0x1
 1321 01aa 4C       		.byte	0x4c
 1322 01ab 00000000 		.4byte	.LFB0
 1323 01af 1C000000 		.4byte	.LFE0-.LFB0
 1324 01b3 01       		.uleb128 0x1
 1325 01b4 9C       		.byte	0x9c
 1326 01b5 CC010000 		.4byte	0x1cc
 1327 01b9 10       		.uleb128 0x10
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 53


 1328 01ba 0C000000 		.4byte	.LVL7
 1329 01be 26010000 		.4byte	0x126
 1330 01c2 11       		.uleb128 0x11
 1331 01c3 18000000 		.4byte	.LVL8
 1332 01c7 64010000 		.4byte	0x164
 1333 01cb 00       		.byte	0
 1334 01cc 0B       		.uleb128 0xb
 1335 01cd 1E040000 		.4byte	.LASF25
 1336 01d1 01       		.byte	0x1
 1337 01d2 F0       		.byte	0xf0
 1338 01d3 00000000 		.4byte	.LFB3
 1339 01d7 40000000 		.4byte	.LFE3-.LFB3
 1340 01db 01       		.uleb128 0x1
 1341 01dc 9C       		.byte	0x9c
 1342 01dd 0C020000 		.4byte	0x20c
 1343 01e1 0F       		.uleb128 0xf
 1344 01e2 E4030000 		.4byte	.LASF26
 1345 01e6 01       		.byte	0x1
 1346 01e7 F2       		.byte	0xf2
 1347 01e8 6B000000 		.4byte	0x6b
 1348 01ec 26000000 		.4byte	.LLST2
 1349 01f0 10       		.uleb128 0x10
 1350 01f1 06000000 		.4byte	.LVL9
 1351 01f5 DC060000 		.4byte	0x6dc
 1352 01f9 10       		.uleb128 0x10
 1353 01fa 16000000 		.4byte	.LVL11
 1354 01fe FD060000 		.4byte	0x6fd
 1355 0202 11       		.uleb128 0x11
 1356 0203 36000000 		.4byte	.LVL13
 1357 0207 F2060000 		.4byte	0x6f2
 1358 020b 00       		.byte	0
 1359 020c 12       		.uleb128 0x12
 1360 020d DD000000 		.4byte	0xdd
 1361 0211 00000000 		.4byte	.LFB4
 1362 0215 0C000000 		.4byte	.LFE4-.LFB4
 1363 0219 01       		.uleb128 0x1
 1364 021a 9C       		.byte	0x9c
 1365 021b 13       		.uleb128 0x13
 1366 021c C3000000 		.4byte	0xc3
 1367 0220 00000000 		.4byte	.LFB5
 1368 0224 0C000000 		.4byte	.LFE5-.LFB5
 1369 0228 01       		.uleb128 0x1
 1370 0229 9C       		.byte	0x9c
 1371 022a 36020000 		.4byte	0x236
 1372 022e 14       		.uleb128 0x14
 1373 022f D0000000 		.4byte	0xd0
 1374 0233 01       		.uleb128 0x1
 1375 0234 50       		.byte	0x50
 1376 0235 00       		.byte	0
 1377 0236 15       		.uleb128 0x15
 1378 0237 BF030000 		.4byte	.LASF27
 1379 023b 01       		.byte	0x1
 1380 023c 6701     		.2byte	0x167
 1381 023e 00000000 		.4byte	.LFB6
 1382 0242 0C000000 		.4byte	.LFE6-.LFB6
 1383 0246 01       		.uleb128 0x1
 1384 0247 9C       		.byte	0x9c
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 54


 1385 0248 5B020000 		.4byte	0x25b
 1386 024c 16       		.uleb128 0x16
 1387 024d 55020000 		.4byte	.LASF35
 1388 0251 01       		.byte	0x1
 1389 0252 6701     		.2byte	0x167
 1390 0254 6B000000 		.4byte	0x6b
 1391 0258 01       		.uleb128 0x1
 1392 0259 50       		.byte	0x50
 1393 025a 00       		.byte	0
 1394 025b 13       		.uleb128 0x13
 1395 025c EA000000 		.4byte	0xea
 1396 0260 00000000 		.4byte	.LFB7
 1397 0264 0C000000 		.4byte	.LFE7-.LFB7
 1398 0268 01       		.uleb128 0x1
 1399 0269 9C       		.byte	0x9c
 1400 026a 76020000 		.4byte	0x276
 1401 026e 17       		.uleb128 0x17
 1402 026f FB000000 		.4byte	0xfb
 1403 0273 01       		.uleb128 0x1
 1404 0274 50       		.byte	0x50
 1405 0275 00       		.byte	0
 1406 0276 13       		.uleb128 0x13
 1407 0277 08010000 		.4byte	0x108
 1408 027b 00000000 		.4byte	.LFB8
 1409 027f 10000000 		.4byte	.LFE8-.LFB8
 1410 0283 01       		.uleb128 0x1
 1411 0284 9C       		.byte	0x9c
 1412 0285 93020000 		.4byte	0x293
 1413 0289 18       		.uleb128 0x18
 1414 028a 19010000 		.4byte	0x119
 1415 028e 39000000 		.4byte	.LLST3
 1416 0292 00       		.byte	0
 1417 0293 19       		.uleb128 0x19
 1418 0294 D7030000 		.4byte	.LASF29
 1419 0298 01       		.byte	0x1
 1420 0299 1402     		.2byte	0x214
 1421 029b 6B000000 		.4byte	0x6b
 1422 029f 00000000 		.4byte	.LFB9
 1423 02a3 28000000 		.4byte	.LFE9-.LFB9
 1424 02a7 01       		.uleb128 0x1
 1425 02a8 9C       		.byte	0x9c
 1426 02a9 CC020000 		.4byte	0x2cc
 1427 02ad 1A       		.uleb128 0x1a
 1428 02ae 8F030000 		.4byte	.LASF20
 1429 02b2 01       		.byte	0x1
 1430 02b3 1602     		.2byte	0x216
 1431 02b5 6B000000 		.4byte	0x6b
 1432 02b9 51000000 		.4byte	.LLST4
 1433 02bd 1B       		.uleb128 0x1b
 1434 02be E3020000 		.4byte	.LASF28
 1435 02c2 01       		.byte	0x1
 1436 02c3 1702     		.2byte	0x217
 1437 02c5 6B000000 		.4byte	0x6b
 1438 02c9 01       		.uleb128 0x1
 1439 02ca 53       		.byte	0x53
 1440 02cb 00       		.byte	0
 1441 02cc 19       		.uleb128 0x19
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 55


 1442 02cd C3010000 		.4byte	.LASF30
 1443 02d1 01       		.byte	0x1
 1444 02d2 7A02     		.2byte	0x27a
 1445 02d4 77000000 		.4byte	0x77
 1446 02d8 00000000 		.4byte	.LFB10
 1447 02dc 1C000000 		.4byte	.LFE10-.LFB10
 1448 02e0 01       		.uleb128 0x1
 1449 02e1 9C       		.byte	0x9c
 1450 02e2 23030000 		.4byte	0x323
 1451 02e6 1C       		.uleb128 0x1c
 1452 02e7 08010000 		.4byte	0x108
 1453 02eb 00000000 		.4byte	.LBB31
 1454 02ef 00000000 		.4byte	.Ldebug_ranges0+0
 1455 02f3 01       		.byte	0x1
 1456 02f4 8602     		.2byte	0x286
 1457 02f6 06030000 		.4byte	0x306
 1458 02fa 1D       		.uleb128 0x1d
 1459 02fb 00000000 		.4byte	.Ldebug_ranges0+0
 1460 02ff 1E       		.uleb128 0x1e
 1461 0300 19010000 		.4byte	0x119
 1462 0304 00       		.byte	0
 1463 0305 00       		.byte	0
 1464 0306 1F       		.uleb128 0x1f
 1465 0307 EA000000 		.4byte	0xea
 1466 030b 02000000 		.4byte	.LBB34
 1467 030f 18000000 		.4byte	.Ldebug_ranges0+0x18
 1468 0313 01       		.byte	0x1
 1469 0314 8602     		.2byte	0x286
 1470 0316 1D       		.uleb128 0x1d
 1471 0317 18000000 		.4byte	.Ldebug_ranges0+0x18
 1472 031b 1E       		.uleb128 0x1e
 1473 031c FB000000 		.4byte	0xfb
 1474 0320 00       		.byte	0
 1475 0321 00       		.byte	0
 1476 0322 00       		.byte	0
 1477 0323 19       		.uleb128 0x19
 1478 0324 02040000 		.4byte	.LASF31
 1479 0328 01       		.byte	0x1
 1480 0329 AB02     		.2byte	0x2ab
 1481 032b 6B000000 		.4byte	0x6b
 1482 032f 00000000 		.4byte	.LFB11
 1483 0333 10000000 		.4byte	.LFE11-.LFB11
 1484 0337 01       		.uleb128 0x1
 1485 0338 9C       		.byte	0x9c
 1486 0339 4E030000 		.4byte	0x34e
 1487 033d 1A       		.uleb128 0x1a
 1488 033e 34020000 		.4byte	.LASF32
 1489 0342 01       		.byte	0x1
 1490 0343 AE02     		.2byte	0x2ae
 1491 0345 6B000000 		.4byte	0x6b
 1492 0349 70000000 		.4byte	.LLST5
 1493 034d 00       		.byte	0
 1494 034e 15       		.uleb128 0x15
 1495 034f 57040000 		.4byte	.LASF33
 1496 0353 01       		.byte	0x1
 1497 0354 F502     		.2byte	0x2f5
 1498 0356 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 56


 1499 035a 24000000 		.4byte	.LFE12-.LFB12
 1500 035e 01       		.uleb128 0x1
 1501 035f 9C       		.byte	0x9c
 1502 0360 87030000 		.4byte	0x387
 1503 0364 1A       		.uleb128 0x1a
 1504 0365 E4030000 		.4byte	.LASF26
 1505 0369 01       		.byte	0x1
 1506 036a F702     		.2byte	0x2f7
 1507 036c 6B000000 		.4byte	0x6b
 1508 0370 8C000000 		.4byte	.LLST6
 1509 0374 10       		.uleb128 0x10
 1510 0375 06000000 		.4byte	.LVL25
 1511 0379 DC060000 		.4byte	0x6dc
 1512 037d 11       		.uleb128 0x11
 1513 037e 20000000 		.4byte	.LVL26
 1514 0382 F2060000 		.4byte	0x6f2
 1515 0386 00       		.byte	0
 1516 0387 15       		.uleb128 0x15
 1517 0388 37030000 		.4byte	.LASF34
 1518 038c 01       		.byte	0x1
 1519 038d 2D03     		.2byte	0x32d
 1520 038f 00000000 		.4byte	.LFB13
 1521 0393 02000000 		.4byte	.LFE13-.LFB13
 1522 0397 01       		.uleb128 0x1
 1523 0398 9C       		.byte	0x9c
 1524 0399 AC030000 		.4byte	0x3ac
 1525 039d 16       		.uleb128 0x16
 1526 039e 9D010000 		.4byte	.LASF36
 1527 03a2 01       		.byte	0x1
 1528 03a3 2D03     		.2byte	0x32d
 1529 03a5 6B000000 		.4byte	0x6b
 1530 03a9 01       		.uleb128 0x1
 1531 03aa 50       		.byte	0x50
 1532 03ab 00       		.byte	0
 1533 03ac 15       		.uleb128 0x15
 1534 03ad BD020000 		.4byte	.LASF37
 1535 03b1 01       		.byte	0x1
 1536 03b2 5903     		.2byte	0x359
 1537 03b4 00000000 		.4byte	.LFB14
 1538 03b8 0C000000 		.4byte	.LFE14-.LFB14
 1539 03bc 01       		.uleb128 0x1
 1540 03bd 9C       		.byte	0x9c
 1541 03be D1030000 		.4byte	0x3d1
 1542 03c2 16       		.uleb128 0x16
 1543 03c3 B5020000 		.4byte	.LASF38
 1544 03c7 01       		.byte	0x1
 1545 03c8 5903     		.2byte	0x359
 1546 03ca 6B000000 		.4byte	0x6b
 1547 03ce 01       		.uleb128 0x1
 1548 03cf 50       		.byte	0x50
 1549 03d0 00       		.byte	0
 1550 03d1 15       		.uleb128 0x15
 1551 03d2 D0020000 		.4byte	.LASF39
 1552 03d6 01       		.byte	0x1
 1553 03d7 6D03     		.2byte	0x36d
 1554 03d9 00000000 		.4byte	.LFB15
 1555 03dd 0C000000 		.4byte	.LFE15-.LFB15
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 57


 1556 03e1 01       		.uleb128 0x1
 1557 03e2 9C       		.byte	0x9c
 1558 03e3 F6030000 		.4byte	0x3f6
 1559 03e7 16       		.uleb128 0x16
 1560 03e8 B5020000 		.4byte	.LASF38
 1561 03ec 01       		.byte	0x1
 1562 03ed 6D03     		.2byte	0x36d
 1563 03ef 6B000000 		.4byte	0x6b
 1564 03f3 01       		.uleb128 0x1
 1565 03f4 50       		.byte	0x50
 1566 03f5 00       		.byte	0
 1567 03f6 15       		.uleb128 0x15
 1568 03f7 88000000 		.4byte	.LASF40
 1569 03fb 01       		.byte	0x1
 1570 03fc 8C03     		.2byte	0x38c
 1571 03fe 00000000 		.4byte	.LFB16
 1572 0402 0C000000 		.4byte	.LFE16-.LFB16
 1573 0406 01       		.uleb128 0x1
 1574 0407 9C       		.byte	0x9c
 1575 0408 1B040000 		.4byte	0x41b
 1576 040c 16       		.uleb128 0x16
 1577 040d 55020000 		.4byte	.LASF35
 1578 0411 01       		.byte	0x1
 1579 0412 8C03     		.2byte	0x38c
 1580 0414 6B000000 		.4byte	0x6b
 1581 0418 01       		.uleb128 0x1
 1582 0419 50       		.byte	0x50
 1583 041a 00       		.byte	0
 1584 041b 15       		.uleb128 0x15
 1585 041c 5B030000 		.4byte	.LASF41
 1586 0420 01       		.byte	0x1
 1587 0421 AE03     		.2byte	0x3ae
 1588 0423 00000000 		.4byte	.LFB17
 1589 0427 14000000 		.4byte	.LFE17-.LFB17
 1590 042b 01       		.uleb128 0x1
 1591 042c 9C       		.byte	0x9c
 1592 042d 40040000 		.4byte	0x440
 1593 0431 16       		.uleb128 0x16
 1594 0432 1D000000 		.4byte	.LASF42
 1595 0436 01       		.byte	0x1
 1596 0437 AE03     		.2byte	0x3ae
 1597 0439 6B000000 		.4byte	0x6b
 1598 043d 01       		.uleb128 0x1
 1599 043e 50       		.byte	0x50
 1600 043f 00       		.byte	0
 1601 0440 20       		.uleb128 0x20
 1602 0441 72020000 		.4byte	.LASF67
 1603 0445 01       		.byte	0x1
 1604 0446 EB03     		.2byte	0x3eb
 1605 0448 6B000000 		.4byte	0x6b
 1606 044c 00000000 		.4byte	.LFB18
 1607 0450 0C000000 		.4byte	.LFE18-.LFB18
 1608 0454 01       		.uleb128 0x1
 1609 0455 9C       		.byte	0x9c
 1610 0456 15       		.uleb128 0x15
 1611 0457 5A010000 		.4byte	.LASF43
 1612 045b 01       		.byte	0x1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 58


 1613 045c 1104     		.2byte	0x411
 1614 045e 00000000 		.4byte	.LFB19
 1615 0462 18000000 		.4byte	.LFE19-.LFB19
 1616 0466 01       		.uleb128 0x1
 1617 0467 9C       		.byte	0x9c
 1618 0468 7B040000 		.4byte	0x47b
 1619 046c 16       		.uleb128 0x16
 1620 046d 1D000000 		.4byte	.LASF42
 1621 0471 01       		.byte	0x1
 1622 0472 1104     		.2byte	0x411
 1623 0474 6B000000 		.4byte	0x6b
 1624 0478 01       		.uleb128 0x1
 1625 0479 50       		.byte	0x50
 1626 047a 00       		.byte	0
 1627 047b 15       		.uleb128 0x15
 1628 047c 2E040000 		.4byte	.LASF44
 1629 0480 01       		.byte	0x1
 1630 0481 7904     		.2byte	0x479
 1631 0483 00000000 		.4byte	.LFB20
 1632 0487 20000000 		.4byte	.LFE20-.LFB20
 1633 048b 01       		.uleb128 0x1
 1634 048c 9C       		.byte	0x9c
 1635 048d BB040000 		.4byte	0x4bb
 1636 0491 21       		.uleb128 0x21
 1637 0492 28000000 		.4byte	.LASF45
 1638 0496 01       		.byte	0x1
 1639 0497 7904     		.2byte	0x479
 1640 0499 BB040000 		.4byte	0x4bb
 1641 049d 9F000000 		.4byte	.LLST7
 1642 04a1 1A       		.uleb128 0x1a
 1643 04a2 4C020000 		.4byte	.LASF46
 1644 04a6 01       		.byte	0x1
 1645 04a7 7B04     		.2byte	0x47b
 1646 04a9 77000000 		.4byte	0x77
 1647 04ad CB000000 		.4byte	.LLST8
 1648 04b1 10       		.uleb128 0x10
 1649 04b2 18000000 		.4byte	.LVL36
 1650 04b6 56040000 		.4byte	0x456
 1651 04ba 00       		.byte	0
 1652 04bb 22       		.uleb128 0x22
 1653 04bc 04       		.byte	0x4
 1654 04bd C1040000 		.4byte	0x4c1
 1655 04c1 23       		.uleb128 0x23
 1656 04c2 91000000 		.4byte	0x91
 1657 04c6 15       		.uleb128 0x15
 1658 04c7 0F020000 		.4byte	.LASF47
 1659 04cb 01       		.byte	0x1
 1660 04cc A704     		.2byte	0x4a7
 1661 04ce 00000000 		.4byte	.LFB21
 1662 04d2 24000000 		.4byte	.LFE21-.LFB21
 1663 04d6 01       		.uleb128 0x1
 1664 04d7 9C       		.byte	0x9c
 1665 04d8 16050000 		.4byte	0x516
 1666 04dc 21       		.uleb128 0x21
 1667 04dd 28000000 		.4byte	.LASF45
 1668 04e1 01       		.byte	0x1
 1669 04e2 A704     		.2byte	0x4a7
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 59


 1670 04e4 16050000 		.4byte	0x516
 1671 04e8 00010000 		.4byte	.LLST9
 1672 04ec 21       		.uleb128 0x21
 1673 04ed 85030000 		.4byte	.LASF48
 1674 04f1 01       		.byte	0x1
 1675 04f2 A704     		.2byte	0x4a7
 1676 04f4 6B000000 		.4byte	0x6b
 1677 04f8 21010000 		.4byte	.LLST10
 1678 04fc 1A       		.uleb128 0x1a
 1679 04fd 4C020000 		.4byte	.LASF46
 1680 0501 01       		.byte	0x1
 1681 0502 AA04     		.2byte	0x4aa
 1682 0504 6B000000 		.4byte	0x6b
 1683 0508 42010000 		.4byte	.LLST11
 1684 050c 10       		.uleb128 0x10
 1685 050d 1A000000 		.4byte	.LVL43
 1686 0511 56040000 		.4byte	0x456
 1687 0515 00       		.byte	0
 1688 0516 22       		.uleb128 0x22
 1689 0517 04       		.byte	0x4
 1690 0518 1C050000 		.4byte	0x51c
 1691 051c 23       		.uleb128 0x23
 1692 051d 6B000000 		.4byte	0x6b
 1693 0521 15       		.uleb128 0x15
 1694 0522 F0010000 		.4byte	.LASF49
 1695 0526 01       		.byte	0x1
 1696 0527 CE04     		.2byte	0x4ce
 1697 0529 00000000 		.4byte	.LFB22
 1698 052d 24000000 		.4byte	.LFE22-.LFB22
 1699 0531 01       		.uleb128 0x1
 1700 0532 9C       		.byte	0x9c
 1701 0533 73050000 		.4byte	0x573
 1702 0537 21       		.uleb128 0x21
 1703 0538 1D000000 		.4byte	.LASF42
 1704 053c 01       		.byte	0x1
 1705 053d CE04     		.2byte	0x4ce
 1706 053f 6B000000 		.4byte	0x6b
 1707 0543 7C010000 		.4byte	.LLST12
 1708 0547 10       		.uleb128 0x10
 1709 0548 0C000000 		.4byte	.LVL46
 1710 054c 56040000 		.4byte	0x456
 1711 0550 24       		.uleb128 0x24
 1712 0551 12000000 		.4byte	.LVL47
 1713 0555 56040000 		.4byte	0x456
 1714 0559 63050000 		.4byte	0x563
 1715 055d 25       		.uleb128 0x25
 1716 055e 01       		.uleb128 0x1
 1717 055f 50       		.byte	0x50
 1718 0560 01       		.uleb128 0x1
 1719 0561 3D       		.byte	0x3d
 1720 0562 00       		.byte	0
 1721 0563 26       		.uleb128 0x26
 1722 0564 1C000000 		.4byte	.LVL48
 1723 0568 56040000 		.4byte	0x456
 1724 056c 25       		.uleb128 0x25
 1725 056d 01       		.uleb128 0x1
 1726 056e 50       		.byte	0x50
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 60


 1727 056f 01       		.uleb128 0x1
 1728 0570 3A       		.byte	0x3a
 1729 0571 00       		.byte	0
 1730 0572 00       		.byte	0
 1731 0573 19       		.uleb128 0x19
 1732 0574 1D030000 		.4byte	.LASF50
 1733 0578 01       		.byte	0x1
 1734 0579 F904     		.2byte	0x4f9
 1735 057b 6B000000 		.4byte	0x6b
 1736 057f 00000000 		.4byte	.LFB23
 1737 0583 1C000000 		.4byte	.LFE23-.LFB23
 1738 0587 01       		.uleb128 0x1
 1739 0588 9C       		.byte	0x9c
 1740 0589 9E050000 		.4byte	0x59e
 1741 058d 1A       		.uleb128 0x1a
 1742 058e 34020000 		.4byte	.LASF32
 1743 0592 01       		.byte	0x1
 1744 0593 FC04     		.2byte	0x4fc
 1745 0595 6B000000 		.4byte	0x6b
 1746 0599 A8010000 		.4byte	.LLST13
 1747 059d 00       		.byte	0
 1748 059e 15       		.uleb128 0x15
 1749 059f DD010000 		.4byte	.LASF51
 1750 05a3 01       		.byte	0x1
 1751 05a4 4A05     		.2byte	0x54a
 1752 05a6 00000000 		.4byte	.LFB24
 1753 05aa 24000000 		.4byte	.LFE24-.LFB24
 1754 05ae 01       		.uleb128 0x1
 1755 05af 9C       		.byte	0x9c
 1756 05b0 D7050000 		.4byte	0x5d7
 1757 05b4 1A       		.uleb128 0x1a
 1758 05b5 E4030000 		.4byte	.LASF26
 1759 05b9 01       		.byte	0x1
 1760 05ba 4C05     		.2byte	0x54c
 1761 05bc 6B000000 		.4byte	0x6b
 1762 05c0 C6010000 		.4byte	.LLST14
 1763 05c4 10       		.uleb128 0x10
 1764 05c5 06000000 		.4byte	.LVL52
 1765 05c9 DC060000 		.4byte	0x6dc
 1766 05cd 11       		.uleb128 0x11
 1767 05ce 20000000 		.4byte	.LVL53
 1768 05d2 F2060000 		.4byte	0x6f2
 1769 05d6 00       		.byte	0
 1770 05d7 15       		.uleb128 0x15
 1771 05d8 76030000 		.4byte	.LASF52
 1772 05dc 01       		.byte	0x1
 1773 05dd A005     		.2byte	0x5a0
 1774 05df 00000000 		.4byte	.LFB25
 1775 05e3 70000000 		.4byte	.LFE25-.LFB25
 1776 05e7 01       		.uleb128 0x1
 1777 05e8 9C       		.byte	0x9c
 1778 05e9 7E060000 		.4byte	0x67e
 1779 05ed 21       		.uleb128 0x21
 1780 05ee BB010000 		.4byte	.LASF53
 1781 05f2 01       		.byte	0x1
 1782 05f3 A005     		.2byte	0x5a0
 1783 05f5 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 61


 1784 05f9 D9010000 		.4byte	.LLST15
 1785 05fd 1D       		.uleb128 0x1d
 1786 05fe 30000000 		.4byte	.Ldebug_ranges0+0x30
 1787 0602 1A       		.uleb128 0x1a
 1788 0603 98020000 		.4byte	.LASF54
 1789 0607 01       		.byte	0x1
 1790 0608 A805     		.2byte	0x5a8
 1791 060a 6B000000 		.4byte	0x6b
 1792 060e 1E020000 		.4byte	.LLST16
 1793 0612 1B       		.uleb128 0x1b
 1794 0613 48010000 		.4byte	.LASF55
 1795 0617 01       		.byte	0x1
 1796 0618 D005     		.2byte	0x5d0
 1797 061a 6B000000 		.4byte	0x6b
 1798 061e 05       		.uleb128 0x5
 1799 061f 03       		.byte	0x3
 1800 0620 01000000 		.4byte	txPeriod.5123
 1801 0624 27       		.uleb128 0x27
 1802 0625 DD000000 		.4byte	0xdd
 1803 0629 0C000000 		.4byte	.LBB40
 1804 062d 04000000 		.4byte	.LBE40-.LBB40
 1805 0631 01       		.byte	0x1
 1806 0632 D805     		.2byte	0x5d8
 1807 0634 28       		.uleb128 0x28
 1808 0635 C3000000 		.4byte	0xc3
 1809 0639 14000000 		.4byte	.LBB42
 1810 063d 02000000 		.4byte	.LBE42-.LBB42
 1811 0641 01       		.byte	0x1
 1812 0642 D805     		.2byte	0x5d8
 1813 0644 52060000 		.4byte	0x652
 1814 0648 0E       		.uleb128 0xe
 1815 0649 D0000000 		.4byte	0xd0
 1816 064d 3C020000 		.4byte	.LLST17
 1817 0651 00       		.byte	0
 1818 0652 27       		.uleb128 0x27
 1819 0653 DD000000 		.4byte	0xdd
 1820 0657 4C000000 		.4byte	.LBB44
 1821 065b 04000000 		.4byte	.LBE44-.LBB44
 1822 065f 01       		.byte	0x1
 1823 0660 0506     		.2byte	0x605
 1824 0662 29       		.uleb128 0x29
 1825 0663 C3000000 		.4byte	0xc3
 1826 0667 54000000 		.4byte	.LBB46
 1827 066b 02000000 		.4byte	.LBE46-.LBB46
 1828 066f 01       		.byte	0x1
 1829 0670 0506     		.2byte	0x605
 1830 0672 0E       		.uleb128 0xe
 1831 0673 D0000000 		.4byte	0xd0
 1832 0677 4F020000 		.4byte	.LLST18
 1833 067b 00       		.byte	0
 1834 067c 00       		.byte	0
 1835 067d 00       		.byte	0
 1836 067e 15       		.uleb128 0x15
 1837 067f 5C020000 		.4byte	.LASF56
 1838 0683 01       		.byte	0x1
 1839 0684 2406     		.2byte	0x624
 1840 0686 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 62


 1841 068a 18000000 		.4byte	.LFE26-.LFB26
 1842 068e 01       		.uleb128 0x1
 1843 068f 9C       		.byte	0x9c
 1844 0690 CB060000 		.4byte	0x6cb
 1845 0694 16       		.uleb128 0x16
 1846 0695 9D010000 		.4byte	.LASF36
 1847 0699 01       		.byte	0x1
 1848 069a 2406     		.2byte	0x624
 1849 069c 6B000000 		.4byte	0x6b
 1850 06a0 01       		.uleb128 0x1
 1851 06a1 50       		.byte	0x50
 1852 06a2 27       		.uleb128 0x27
 1853 06a3 DD000000 		.4byte	0xdd
 1854 06a7 02000000 		.4byte	.LBB49
 1855 06ab 02000000 		.4byte	.LBE49-.LBB49
 1856 06af 01       		.byte	0x1
 1857 06b0 2A06     		.2byte	0x62a
 1858 06b2 29       		.uleb128 0x29
 1859 06b3 C3000000 		.4byte	0xc3
 1860 06b7 10000000 		.4byte	.LBB51
 1861 06bb 08000000 		.4byte	.LBE51-.LBB51
 1862 06bf 01       		.byte	0x1
 1863 06c0 3106     		.2byte	0x631
 1864 06c2 14       		.uleb128 0x14
 1865 06c3 D0000000 		.4byte	0xd0
 1866 06c7 01       		.uleb128 0x1
 1867 06c8 52       		.byte	0x52
 1868 06c9 00       		.byte	0
 1869 06ca 00       		.byte	0
 1870 06cb 2A       		.uleb128 0x2a
 1871 06cc F5030000 		.4byte	.LASF68
 1872 06d0 01       		.byte	0x1
 1873 06d1 1B       		.byte	0x1b
 1874 06d2 6B000000 		.4byte	0x6b
 1875 06d6 05       		.uleb128 0x5
 1876 06d7 03       		.byte	0x3
 1877 06d8 00000000 		.4byte	UART_initVar
 1878 06dc 2B       		.uleb128 0x2b
 1879 06dd 1D020000 		.4byte	.LASF57
 1880 06e1 1D020000 		.4byte	.LASF57
 1881 06e5 03       		.byte	0x3
 1882 06e6 7D       		.byte	0x7d
 1883 06e7 2B       		.uleb128 0x2b
 1884 06e8 84020000 		.4byte	.LASF58
 1885 06ec 84020000 		.4byte	.LASF58
 1886 06f0 04       		.byte	0x4
 1887 06f1 27       		.byte	0x27
 1888 06f2 2B       		.uleb128 0x2b
 1889 06f3 07000000 		.4byte	.LASF59
 1890 06f7 07000000 		.4byte	.LASF59
 1891 06fb 03       		.byte	0x3
 1892 06fc 7E       		.byte	0x7e
 1893 06fd 2B       		.uleb128 0x2b
 1894 06fe EC020000 		.4byte	.LASF60
 1895 0702 EC020000 		.4byte	.LASF60
 1896 0706 04       		.byte	0x4
 1897 0707 28       		.byte	0x28
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 63


 1898 0708 00       		.byte	0
 1899              		.section	.debug_abbrev,"",%progbits
 1900              	.Ldebug_abbrev0:
 1901 0000 01       		.uleb128 0x1
 1902 0001 11       		.uleb128 0x11
 1903 0002 01       		.byte	0x1
 1904 0003 25       		.uleb128 0x25
 1905 0004 0E       		.uleb128 0xe
 1906 0005 13       		.uleb128 0x13
 1907 0006 0B       		.uleb128 0xb
 1908 0007 03       		.uleb128 0x3
 1909 0008 0E       		.uleb128 0xe
 1910 0009 1B       		.uleb128 0x1b
 1911 000a 0E       		.uleb128 0xe
 1912 000b 55       		.uleb128 0x55
 1913 000c 17       		.uleb128 0x17
 1914 000d 11       		.uleb128 0x11
 1915 000e 01       		.uleb128 0x1
 1916 000f 10       		.uleb128 0x10
 1917 0010 17       		.uleb128 0x17
 1918 0011 00       		.byte	0
 1919 0012 00       		.byte	0
 1920 0013 02       		.uleb128 0x2
 1921 0014 24       		.uleb128 0x24
 1922 0015 00       		.byte	0
 1923 0016 0B       		.uleb128 0xb
 1924 0017 0B       		.uleb128 0xb
 1925 0018 3E       		.uleb128 0x3e
 1926 0019 0B       		.uleb128 0xb
 1927 001a 03       		.uleb128 0x3
 1928 001b 0E       		.uleb128 0xe
 1929 001c 00       		.byte	0
 1930 001d 00       		.byte	0
 1931 001e 03       		.uleb128 0x3
 1932 001f 24       		.uleb128 0x24
 1933 0020 00       		.byte	0
 1934 0021 0B       		.uleb128 0xb
 1935 0022 0B       		.uleb128 0xb
 1936 0023 3E       		.uleb128 0x3e
 1937 0024 0B       		.uleb128 0xb
 1938 0025 03       		.uleb128 0x3
 1939 0026 08       		.uleb128 0x8
 1940 0027 00       		.byte	0
 1941 0028 00       		.byte	0
 1942 0029 04       		.uleb128 0x4
 1943 002a 16       		.uleb128 0x16
 1944 002b 00       		.byte	0
 1945 002c 03       		.uleb128 0x3
 1946 002d 0E       		.uleb128 0xe
 1947 002e 3A       		.uleb128 0x3a
 1948 002f 0B       		.uleb128 0xb
 1949 0030 3B       		.uleb128 0x3b
 1950 0031 05       		.uleb128 0x5
 1951 0032 49       		.uleb128 0x49
 1952 0033 13       		.uleb128 0x13
 1953 0034 00       		.byte	0
 1954 0035 00       		.byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 64


 1955 0036 05       		.uleb128 0x5
 1956 0037 35       		.uleb128 0x35
 1957 0038 00       		.byte	0
 1958 0039 49       		.uleb128 0x49
 1959 003a 13       		.uleb128 0x13
 1960 003b 00       		.byte	0
 1961 003c 00       		.byte	0
 1962 003d 06       		.uleb128 0x6
 1963 003e 2E       		.uleb128 0x2e
 1964 003f 01       		.byte	0x1
 1965 0040 3F       		.uleb128 0x3f
 1966 0041 19       		.uleb128 0x19
 1967 0042 03       		.uleb128 0x3
 1968 0043 0E       		.uleb128 0xe
 1969 0044 3A       		.uleb128 0x3a
 1970 0045 0B       		.uleb128 0xb
 1971 0046 3B       		.uleb128 0x3b
 1972 0047 05       		.uleb128 0x5
 1973 0048 27       		.uleb128 0x27
 1974 0049 19       		.uleb128 0x19
 1975 004a 20       		.uleb128 0x20
 1976 004b 0B       		.uleb128 0xb
 1977 004c 01       		.uleb128 0x1
 1978 004d 13       		.uleb128 0x13
 1979 004e 00       		.byte	0
 1980 004f 00       		.byte	0
 1981 0050 07       		.uleb128 0x7
 1982 0051 05       		.uleb128 0x5
 1983 0052 00       		.byte	0
 1984 0053 03       		.uleb128 0x3
 1985 0054 0E       		.uleb128 0xe
 1986 0055 3A       		.uleb128 0x3a
 1987 0056 0B       		.uleb128 0xb
 1988 0057 3B       		.uleb128 0x3b
 1989 0058 05       		.uleb128 0x5
 1990 0059 49       		.uleb128 0x49
 1991 005a 13       		.uleb128 0x13
 1992 005b 00       		.byte	0
 1993 005c 00       		.byte	0
 1994 005d 08       		.uleb128 0x8
 1995 005e 2E       		.uleb128 0x2e
 1996 005f 00       		.byte	0
 1997 0060 3F       		.uleb128 0x3f
 1998 0061 19       		.uleb128 0x19
 1999 0062 03       		.uleb128 0x3
 2000 0063 0E       		.uleb128 0xe
 2001 0064 3A       		.uleb128 0x3a
 2002 0065 0B       		.uleb128 0xb
 2003 0066 3B       		.uleb128 0x3b
 2004 0067 05       		.uleb128 0x5
 2005 0068 27       		.uleb128 0x27
 2006 0069 19       		.uleb128 0x19
 2007 006a 49       		.uleb128 0x49
 2008 006b 13       		.uleb128 0x13
 2009 006c 20       		.uleb128 0x20
 2010 006d 0B       		.uleb128 0xb
 2011 006e 00       		.byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 65


 2012 006f 00       		.byte	0
 2013 0070 09       		.uleb128 0x9
 2014 0071 2E       		.uleb128 0x2e
 2015 0072 01       		.byte	0x1
 2016 0073 3F       		.uleb128 0x3f
 2017 0074 19       		.uleb128 0x19
 2018 0075 03       		.uleb128 0x3
 2019 0076 0E       		.uleb128 0xe
 2020 0077 3A       		.uleb128 0x3a
 2021 0078 0B       		.uleb128 0xb
 2022 0079 3B       		.uleb128 0x3b
 2023 007a 05       		.uleb128 0x5
 2024 007b 27       		.uleb128 0x27
 2025 007c 19       		.uleb128 0x19
 2026 007d 49       		.uleb128 0x49
 2027 007e 13       		.uleb128 0x13
 2028 007f 20       		.uleb128 0x20
 2029 0080 0B       		.uleb128 0xb
 2030 0081 01       		.uleb128 0x1
 2031 0082 13       		.uleb128 0x13
 2032 0083 00       		.byte	0
 2033 0084 00       		.byte	0
 2034 0085 0A       		.uleb128 0xa
 2035 0086 34       		.uleb128 0x34
 2036 0087 00       		.byte	0
 2037 0088 03       		.uleb128 0x3
 2038 0089 0E       		.uleb128 0xe
 2039 008a 3A       		.uleb128 0x3a
 2040 008b 0B       		.uleb128 0xb
 2041 008c 3B       		.uleb128 0x3b
 2042 008d 05       		.uleb128 0x5
 2043 008e 49       		.uleb128 0x49
 2044 008f 13       		.uleb128 0x13
 2045 0090 00       		.byte	0
 2046 0091 00       		.byte	0
 2047 0092 0B       		.uleb128 0xb
 2048 0093 2E       		.uleb128 0x2e
 2049 0094 01       		.byte	0x1
 2050 0095 3F       		.uleb128 0x3f
 2051 0096 19       		.uleb128 0x19
 2052 0097 03       		.uleb128 0x3
 2053 0098 0E       		.uleb128 0xe
 2054 0099 3A       		.uleb128 0x3a
 2055 009a 0B       		.uleb128 0xb
 2056 009b 3B       		.uleb128 0x3b
 2057 009c 0B       		.uleb128 0xb
 2058 009d 27       		.uleb128 0x27
 2059 009e 19       		.uleb128 0x19
 2060 009f 11       		.uleb128 0x11
 2061 00a0 01       		.uleb128 0x1
 2062 00a1 12       		.uleb128 0x12
 2063 00a2 06       		.uleb128 0x6
 2064 00a3 40       		.uleb128 0x40
 2065 00a4 18       		.uleb128 0x18
 2066 00a5 9742     		.uleb128 0x2117
 2067 00a7 19       		.uleb128 0x19
 2068 00a8 01       		.uleb128 0x1
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 66


 2069 00a9 13       		.uleb128 0x13
 2070 00aa 00       		.byte	0
 2071 00ab 00       		.byte	0
 2072 00ac 0C       		.uleb128 0xc
 2073 00ad 1D       		.uleb128 0x1d
 2074 00ae 00       		.byte	0
 2075 00af 31       		.uleb128 0x31
 2076 00b0 13       		.uleb128 0x13
 2077 00b1 11       		.uleb128 0x11
 2078 00b2 01       		.uleb128 0x1
 2079 00b3 12       		.uleb128 0x12
 2080 00b4 06       		.uleb128 0x6
 2081 00b5 58       		.uleb128 0x58
 2082 00b6 0B       		.uleb128 0xb
 2083 00b7 59       		.uleb128 0x59
 2084 00b8 0B       		.uleb128 0xb
 2085 00b9 00       		.byte	0
 2086 00ba 00       		.byte	0
 2087 00bb 0D       		.uleb128 0xd
 2088 00bc 1D       		.uleb128 0x1d
 2089 00bd 01       		.byte	0x1
 2090 00be 31       		.uleb128 0x31
 2091 00bf 13       		.uleb128 0x13
 2092 00c0 11       		.uleb128 0x11
 2093 00c1 01       		.uleb128 0x1
 2094 00c2 12       		.uleb128 0x12
 2095 00c3 06       		.uleb128 0x6
 2096 00c4 58       		.uleb128 0x58
 2097 00c5 0B       		.uleb128 0xb
 2098 00c6 59       		.uleb128 0x59
 2099 00c7 0B       		.uleb128 0xb
 2100 00c8 00       		.byte	0
 2101 00c9 00       		.byte	0
 2102 00ca 0E       		.uleb128 0xe
 2103 00cb 05       		.uleb128 0x5
 2104 00cc 00       		.byte	0
 2105 00cd 31       		.uleb128 0x31
 2106 00ce 13       		.uleb128 0x13
 2107 00cf 02       		.uleb128 0x2
 2108 00d0 17       		.uleb128 0x17
 2109 00d1 00       		.byte	0
 2110 00d2 00       		.byte	0
 2111 00d3 0F       		.uleb128 0xf
 2112 00d4 34       		.uleb128 0x34
 2113 00d5 00       		.byte	0
 2114 00d6 03       		.uleb128 0x3
 2115 00d7 0E       		.uleb128 0xe
 2116 00d8 3A       		.uleb128 0x3a
 2117 00d9 0B       		.uleb128 0xb
 2118 00da 3B       		.uleb128 0x3b
 2119 00db 0B       		.uleb128 0xb
 2120 00dc 49       		.uleb128 0x49
 2121 00dd 13       		.uleb128 0x13
 2122 00de 02       		.uleb128 0x2
 2123 00df 17       		.uleb128 0x17
 2124 00e0 00       		.byte	0
 2125 00e1 00       		.byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 67


 2126 00e2 10       		.uleb128 0x10
 2127 00e3 898201   		.uleb128 0x4109
 2128 00e6 00       		.byte	0
 2129 00e7 11       		.uleb128 0x11
 2130 00e8 01       		.uleb128 0x1
 2131 00e9 31       		.uleb128 0x31
 2132 00ea 13       		.uleb128 0x13
 2133 00eb 00       		.byte	0
 2134 00ec 00       		.byte	0
 2135 00ed 11       		.uleb128 0x11
 2136 00ee 898201   		.uleb128 0x4109
 2137 00f1 00       		.byte	0
 2138 00f2 11       		.uleb128 0x11
 2139 00f3 01       		.uleb128 0x1
 2140 00f4 9542     		.uleb128 0x2115
 2141 00f6 19       		.uleb128 0x19
 2142 00f7 31       		.uleb128 0x31
 2143 00f8 13       		.uleb128 0x13
 2144 00f9 00       		.byte	0
 2145 00fa 00       		.byte	0
 2146 00fb 12       		.uleb128 0x12
 2147 00fc 2E       		.uleb128 0x2e
 2148 00fd 00       		.byte	0
 2149 00fe 31       		.uleb128 0x31
 2150 00ff 13       		.uleb128 0x13
 2151 0100 11       		.uleb128 0x11
 2152 0101 01       		.uleb128 0x1
 2153 0102 12       		.uleb128 0x12
 2154 0103 06       		.uleb128 0x6
 2155 0104 40       		.uleb128 0x40
 2156 0105 18       		.uleb128 0x18
 2157 0106 9742     		.uleb128 0x2117
 2158 0108 19       		.uleb128 0x19
 2159 0109 00       		.byte	0
 2160 010a 00       		.byte	0
 2161 010b 13       		.uleb128 0x13
 2162 010c 2E       		.uleb128 0x2e
 2163 010d 01       		.byte	0x1
 2164 010e 31       		.uleb128 0x31
 2165 010f 13       		.uleb128 0x13
 2166 0110 11       		.uleb128 0x11
 2167 0111 01       		.uleb128 0x1
 2168 0112 12       		.uleb128 0x12
 2169 0113 06       		.uleb128 0x6
 2170 0114 40       		.uleb128 0x40
 2171 0115 18       		.uleb128 0x18
 2172 0116 9742     		.uleb128 0x2117
 2173 0118 19       		.uleb128 0x19
 2174 0119 01       		.uleb128 0x1
 2175 011a 13       		.uleb128 0x13
 2176 011b 00       		.byte	0
 2177 011c 00       		.byte	0
 2178 011d 14       		.uleb128 0x14
 2179 011e 05       		.uleb128 0x5
 2180 011f 00       		.byte	0
 2181 0120 31       		.uleb128 0x31
 2182 0121 13       		.uleb128 0x13
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 68


 2183 0122 02       		.uleb128 0x2
 2184 0123 18       		.uleb128 0x18
 2185 0124 00       		.byte	0
 2186 0125 00       		.byte	0
 2187 0126 15       		.uleb128 0x15
 2188 0127 2E       		.uleb128 0x2e
 2189 0128 01       		.byte	0x1
 2190 0129 3F       		.uleb128 0x3f
 2191 012a 19       		.uleb128 0x19
 2192 012b 03       		.uleb128 0x3
 2193 012c 0E       		.uleb128 0xe
 2194 012d 3A       		.uleb128 0x3a
 2195 012e 0B       		.uleb128 0xb
 2196 012f 3B       		.uleb128 0x3b
 2197 0130 05       		.uleb128 0x5
 2198 0131 27       		.uleb128 0x27
 2199 0132 19       		.uleb128 0x19
 2200 0133 11       		.uleb128 0x11
 2201 0134 01       		.uleb128 0x1
 2202 0135 12       		.uleb128 0x12
 2203 0136 06       		.uleb128 0x6
 2204 0137 40       		.uleb128 0x40
 2205 0138 18       		.uleb128 0x18
 2206 0139 9742     		.uleb128 0x2117
 2207 013b 19       		.uleb128 0x19
 2208 013c 01       		.uleb128 0x1
 2209 013d 13       		.uleb128 0x13
 2210 013e 00       		.byte	0
 2211 013f 00       		.byte	0
 2212 0140 16       		.uleb128 0x16
 2213 0141 05       		.uleb128 0x5
 2214 0142 00       		.byte	0
 2215 0143 03       		.uleb128 0x3
 2216 0144 0E       		.uleb128 0xe
 2217 0145 3A       		.uleb128 0x3a
 2218 0146 0B       		.uleb128 0xb
 2219 0147 3B       		.uleb128 0x3b
 2220 0148 05       		.uleb128 0x5
 2221 0149 49       		.uleb128 0x49
 2222 014a 13       		.uleb128 0x13
 2223 014b 02       		.uleb128 0x2
 2224 014c 18       		.uleb128 0x18
 2225 014d 00       		.byte	0
 2226 014e 00       		.byte	0
 2227 014f 17       		.uleb128 0x17
 2228 0150 34       		.uleb128 0x34
 2229 0151 00       		.byte	0
 2230 0152 31       		.uleb128 0x31
 2231 0153 13       		.uleb128 0x13
 2232 0154 02       		.uleb128 0x2
 2233 0155 18       		.uleb128 0x18
 2234 0156 00       		.byte	0
 2235 0157 00       		.byte	0
 2236 0158 18       		.uleb128 0x18
 2237 0159 34       		.uleb128 0x34
 2238 015a 00       		.byte	0
 2239 015b 31       		.uleb128 0x31
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 69


 2240 015c 13       		.uleb128 0x13
 2241 015d 02       		.uleb128 0x2
 2242 015e 17       		.uleb128 0x17
 2243 015f 00       		.byte	0
 2244 0160 00       		.byte	0
 2245 0161 19       		.uleb128 0x19
 2246 0162 2E       		.uleb128 0x2e
 2247 0163 01       		.byte	0x1
 2248 0164 3F       		.uleb128 0x3f
 2249 0165 19       		.uleb128 0x19
 2250 0166 03       		.uleb128 0x3
 2251 0167 0E       		.uleb128 0xe
 2252 0168 3A       		.uleb128 0x3a
 2253 0169 0B       		.uleb128 0xb
 2254 016a 3B       		.uleb128 0x3b
 2255 016b 05       		.uleb128 0x5
 2256 016c 27       		.uleb128 0x27
 2257 016d 19       		.uleb128 0x19
 2258 016e 49       		.uleb128 0x49
 2259 016f 13       		.uleb128 0x13
 2260 0170 11       		.uleb128 0x11
 2261 0171 01       		.uleb128 0x1
 2262 0172 12       		.uleb128 0x12
 2263 0173 06       		.uleb128 0x6
 2264 0174 40       		.uleb128 0x40
 2265 0175 18       		.uleb128 0x18
 2266 0176 9742     		.uleb128 0x2117
 2267 0178 19       		.uleb128 0x19
 2268 0179 01       		.uleb128 0x1
 2269 017a 13       		.uleb128 0x13
 2270 017b 00       		.byte	0
 2271 017c 00       		.byte	0
 2272 017d 1A       		.uleb128 0x1a
 2273 017e 34       		.uleb128 0x34
 2274 017f 00       		.byte	0
 2275 0180 03       		.uleb128 0x3
 2276 0181 0E       		.uleb128 0xe
 2277 0182 3A       		.uleb128 0x3a
 2278 0183 0B       		.uleb128 0xb
 2279 0184 3B       		.uleb128 0x3b
 2280 0185 05       		.uleb128 0x5
 2281 0186 49       		.uleb128 0x49
 2282 0187 13       		.uleb128 0x13
 2283 0188 02       		.uleb128 0x2
 2284 0189 17       		.uleb128 0x17
 2285 018a 00       		.byte	0
 2286 018b 00       		.byte	0
 2287 018c 1B       		.uleb128 0x1b
 2288 018d 34       		.uleb128 0x34
 2289 018e 00       		.byte	0
 2290 018f 03       		.uleb128 0x3
 2291 0190 0E       		.uleb128 0xe
 2292 0191 3A       		.uleb128 0x3a
 2293 0192 0B       		.uleb128 0xb
 2294 0193 3B       		.uleb128 0x3b
 2295 0194 05       		.uleb128 0x5
 2296 0195 49       		.uleb128 0x49
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 70


 2297 0196 13       		.uleb128 0x13
 2298 0197 02       		.uleb128 0x2
 2299 0198 18       		.uleb128 0x18
 2300 0199 00       		.byte	0
 2301 019a 00       		.byte	0
 2302 019b 1C       		.uleb128 0x1c
 2303 019c 1D       		.uleb128 0x1d
 2304 019d 01       		.byte	0x1
 2305 019e 31       		.uleb128 0x31
 2306 019f 13       		.uleb128 0x13
 2307 01a0 52       		.uleb128 0x52
 2308 01a1 01       		.uleb128 0x1
 2309 01a2 55       		.uleb128 0x55
 2310 01a3 17       		.uleb128 0x17
 2311 01a4 58       		.uleb128 0x58
 2312 01a5 0B       		.uleb128 0xb
 2313 01a6 59       		.uleb128 0x59
 2314 01a7 05       		.uleb128 0x5
 2315 01a8 01       		.uleb128 0x1
 2316 01a9 13       		.uleb128 0x13
 2317 01aa 00       		.byte	0
 2318 01ab 00       		.byte	0
 2319 01ac 1D       		.uleb128 0x1d
 2320 01ad 0B       		.uleb128 0xb
 2321 01ae 01       		.byte	0x1
 2322 01af 55       		.uleb128 0x55
 2323 01b0 17       		.uleb128 0x17
 2324 01b1 00       		.byte	0
 2325 01b2 00       		.byte	0
 2326 01b3 1E       		.uleb128 0x1e
 2327 01b4 34       		.uleb128 0x34
 2328 01b5 00       		.byte	0
 2329 01b6 31       		.uleb128 0x31
 2330 01b7 13       		.uleb128 0x13
 2331 01b8 00       		.byte	0
 2332 01b9 00       		.byte	0
 2333 01ba 1F       		.uleb128 0x1f
 2334 01bb 1D       		.uleb128 0x1d
 2335 01bc 01       		.byte	0x1
 2336 01bd 31       		.uleb128 0x31
 2337 01be 13       		.uleb128 0x13
 2338 01bf 52       		.uleb128 0x52
 2339 01c0 01       		.uleb128 0x1
 2340 01c1 55       		.uleb128 0x55
 2341 01c2 17       		.uleb128 0x17
 2342 01c3 58       		.uleb128 0x58
 2343 01c4 0B       		.uleb128 0xb
 2344 01c5 59       		.uleb128 0x59
 2345 01c6 05       		.uleb128 0x5
 2346 01c7 00       		.byte	0
 2347 01c8 00       		.byte	0
 2348 01c9 20       		.uleb128 0x20
 2349 01ca 2E       		.uleb128 0x2e
 2350 01cb 00       		.byte	0
 2351 01cc 3F       		.uleb128 0x3f
 2352 01cd 19       		.uleb128 0x19
 2353 01ce 03       		.uleb128 0x3
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 71


 2354 01cf 0E       		.uleb128 0xe
 2355 01d0 3A       		.uleb128 0x3a
 2356 01d1 0B       		.uleb128 0xb
 2357 01d2 3B       		.uleb128 0x3b
 2358 01d3 05       		.uleb128 0x5
 2359 01d4 27       		.uleb128 0x27
 2360 01d5 19       		.uleb128 0x19
 2361 01d6 49       		.uleb128 0x49
 2362 01d7 13       		.uleb128 0x13
 2363 01d8 11       		.uleb128 0x11
 2364 01d9 01       		.uleb128 0x1
 2365 01da 12       		.uleb128 0x12
 2366 01db 06       		.uleb128 0x6
 2367 01dc 40       		.uleb128 0x40
 2368 01dd 18       		.uleb128 0x18
 2369 01de 9742     		.uleb128 0x2117
 2370 01e0 19       		.uleb128 0x19
 2371 01e1 00       		.byte	0
 2372 01e2 00       		.byte	0
 2373 01e3 21       		.uleb128 0x21
 2374 01e4 05       		.uleb128 0x5
 2375 01e5 00       		.byte	0
 2376 01e6 03       		.uleb128 0x3
 2377 01e7 0E       		.uleb128 0xe
 2378 01e8 3A       		.uleb128 0x3a
 2379 01e9 0B       		.uleb128 0xb
 2380 01ea 3B       		.uleb128 0x3b
 2381 01eb 05       		.uleb128 0x5
 2382 01ec 49       		.uleb128 0x49
 2383 01ed 13       		.uleb128 0x13
 2384 01ee 02       		.uleb128 0x2
 2385 01ef 17       		.uleb128 0x17
 2386 01f0 00       		.byte	0
 2387 01f1 00       		.byte	0
 2388 01f2 22       		.uleb128 0x22
 2389 01f3 0F       		.uleb128 0xf
 2390 01f4 00       		.byte	0
 2391 01f5 0B       		.uleb128 0xb
 2392 01f6 0B       		.uleb128 0xb
 2393 01f7 49       		.uleb128 0x49
 2394 01f8 13       		.uleb128 0x13
 2395 01f9 00       		.byte	0
 2396 01fa 00       		.byte	0
 2397 01fb 23       		.uleb128 0x23
 2398 01fc 26       		.uleb128 0x26
 2399 01fd 00       		.byte	0
 2400 01fe 49       		.uleb128 0x49
 2401 01ff 13       		.uleb128 0x13
 2402 0200 00       		.byte	0
 2403 0201 00       		.byte	0
 2404 0202 24       		.uleb128 0x24
 2405 0203 898201   		.uleb128 0x4109
 2406 0206 01       		.byte	0x1
 2407 0207 11       		.uleb128 0x11
 2408 0208 01       		.uleb128 0x1
 2409 0209 31       		.uleb128 0x31
 2410 020a 13       		.uleb128 0x13
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 72


 2411 020b 01       		.uleb128 0x1
 2412 020c 13       		.uleb128 0x13
 2413 020d 00       		.byte	0
 2414 020e 00       		.byte	0
 2415 020f 25       		.uleb128 0x25
 2416 0210 8A8201   		.uleb128 0x410a
 2417 0213 00       		.byte	0
 2418 0214 02       		.uleb128 0x2
 2419 0215 18       		.uleb128 0x18
 2420 0216 9142     		.uleb128 0x2111
 2421 0218 18       		.uleb128 0x18
 2422 0219 00       		.byte	0
 2423 021a 00       		.byte	0
 2424 021b 26       		.uleb128 0x26
 2425 021c 898201   		.uleb128 0x4109
 2426 021f 01       		.byte	0x1
 2427 0220 11       		.uleb128 0x11
 2428 0221 01       		.uleb128 0x1
 2429 0222 9542     		.uleb128 0x2115
 2430 0224 19       		.uleb128 0x19
 2431 0225 31       		.uleb128 0x31
 2432 0226 13       		.uleb128 0x13
 2433 0227 00       		.byte	0
 2434 0228 00       		.byte	0
 2435 0229 27       		.uleb128 0x27
 2436 022a 1D       		.uleb128 0x1d
 2437 022b 00       		.byte	0
 2438 022c 31       		.uleb128 0x31
 2439 022d 13       		.uleb128 0x13
 2440 022e 11       		.uleb128 0x11
 2441 022f 01       		.uleb128 0x1
 2442 0230 12       		.uleb128 0x12
 2443 0231 06       		.uleb128 0x6
 2444 0232 58       		.uleb128 0x58
 2445 0233 0B       		.uleb128 0xb
 2446 0234 59       		.uleb128 0x59
 2447 0235 05       		.uleb128 0x5
 2448 0236 00       		.byte	0
 2449 0237 00       		.byte	0
 2450 0238 28       		.uleb128 0x28
 2451 0239 1D       		.uleb128 0x1d
 2452 023a 01       		.byte	0x1
 2453 023b 31       		.uleb128 0x31
 2454 023c 13       		.uleb128 0x13
 2455 023d 11       		.uleb128 0x11
 2456 023e 01       		.uleb128 0x1
 2457 023f 12       		.uleb128 0x12
 2458 0240 06       		.uleb128 0x6
 2459 0241 58       		.uleb128 0x58
 2460 0242 0B       		.uleb128 0xb
 2461 0243 59       		.uleb128 0x59
 2462 0244 05       		.uleb128 0x5
 2463 0245 01       		.uleb128 0x1
 2464 0246 13       		.uleb128 0x13
 2465 0247 00       		.byte	0
 2466 0248 00       		.byte	0
 2467 0249 29       		.uleb128 0x29
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 73


 2468 024a 1D       		.uleb128 0x1d
 2469 024b 01       		.byte	0x1
 2470 024c 31       		.uleb128 0x31
 2471 024d 13       		.uleb128 0x13
 2472 024e 11       		.uleb128 0x11
 2473 024f 01       		.uleb128 0x1
 2474 0250 12       		.uleb128 0x12
 2475 0251 06       		.uleb128 0x6
 2476 0252 58       		.uleb128 0x58
 2477 0253 0B       		.uleb128 0xb
 2478 0254 59       		.uleb128 0x59
 2479 0255 05       		.uleb128 0x5
 2480 0256 00       		.byte	0
 2481 0257 00       		.byte	0
 2482 0258 2A       		.uleb128 0x2a
 2483 0259 34       		.uleb128 0x34
 2484 025a 00       		.byte	0
 2485 025b 03       		.uleb128 0x3
 2486 025c 0E       		.uleb128 0xe
 2487 025d 3A       		.uleb128 0x3a
 2488 025e 0B       		.uleb128 0xb
 2489 025f 3B       		.uleb128 0x3b
 2490 0260 0B       		.uleb128 0xb
 2491 0261 49       		.uleb128 0x49
 2492 0262 13       		.uleb128 0x13
 2493 0263 3F       		.uleb128 0x3f
 2494 0264 19       		.uleb128 0x19
 2495 0265 02       		.uleb128 0x2
 2496 0266 18       		.uleb128 0x18
 2497 0267 00       		.byte	0
 2498 0268 00       		.byte	0
 2499 0269 2B       		.uleb128 0x2b
 2500 026a 2E       		.uleb128 0x2e
 2501 026b 00       		.byte	0
 2502 026c 3F       		.uleb128 0x3f
 2503 026d 19       		.uleb128 0x19
 2504 026e 3C       		.uleb128 0x3c
 2505 026f 19       		.uleb128 0x19
 2506 0270 6E       		.uleb128 0x6e
 2507 0271 0E       		.uleb128 0xe
 2508 0272 03       		.uleb128 0x3
 2509 0273 0E       		.uleb128 0xe
 2510 0274 3A       		.uleb128 0x3a
 2511 0275 0B       		.uleb128 0xb
 2512 0276 3B       		.uleb128 0x3b
 2513 0277 0B       		.uleb128 0xb
 2514 0278 00       		.byte	0
 2515 0279 00       		.byte	0
 2516 027a 00       		.byte	0
 2517              		.section	.debug_loc,"",%progbits
 2518              	.Ldebug_loc0:
 2519              	.LLST0:
 2520 0000 28000000 		.4byte	.LVL0
 2521 0004 2A000000 		.4byte	.LVL1
 2522 0008 0100     		.2byte	0x1
 2523 000a 53       		.byte	0x53
 2524 000b 00000000 		.4byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 74


 2525 000f 00000000 		.4byte	0
 2526              	.LLST1:
 2527 0013 08000000 		.4byte	.LVL3
 2528 0017 36000000 		.4byte	.LVL5
 2529 001b 0100     		.2byte	0x1
 2530 001d 54       		.byte	0x54
 2531 001e 00000000 		.4byte	0
 2532 0022 00000000 		.4byte	0
 2533              	.LLST2:
 2534 0026 08000000 		.4byte	.LVL10
 2535 002a 32000000 		.4byte	.LVL12
 2536 002e 0100     		.2byte	0x1
 2537 0030 54       		.byte	0x54
 2538 0031 00000000 		.4byte	0
 2539 0035 00000000 		.4byte	0
 2540              	.LLST3:
 2541 0039 04000000 		.4byte	.LVL17
 2542 003d 08000000 		.4byte	.LVL18
 2543 0041 0600     		.2byte	0x6
 2544 0043 70       		.byte	0x70
 2545 0044 00       		.sleb128 0
 2546 0045 08       		.byte	0x8
 2547 0046 7F       		.byte	0x7f
 2548 0047 1A       		.byte	0x1a
 2549 0048 9F       		.byte	0x9f
 2550 0049 00000000 		.4byte	0
 2551 004d 00000000 		.4byte	0
 2552              	.LLST4:
 2553 0051 00000000 		.4byte	.LVL19
 2554 0055 18000000 		.4byte	.LVL21
 2555 0059 0200     		.2byte	0x2
 2556 005b 30       		.byte	0x30
 2557 005c 9F       		.byte	0x9f
 2558 005d 18000000 		.4byte	.LVL21
 2559 0061 28000000 		.4byte	.LFE9
 2560 0065 0100     		.2byte	0x1
 2561 0067 50       		.byte	0x50
 2562 0068 00000000 		.4byte	0
 2563 006c 00000000 		.4byte	0
 2564              	.LLST5:
 2565 0070 04000000 		.4byte	.LVL23
 2566 0074 08000000 		.4byte	.LVL24
 2567 0078 0A00     		.2byte	0xa
 2568 007a 70       		.byte	0x70
 2569 007b 00       		.sleb128 0
 2570 007c 08       		.byte	0x8
 2571 007d 20       		.byte	0x20
 2572 007e 1A       		.byte	0x1a
 2573 007f 48       		.byte	0x48
 2574 0080 24       		.byte	0x24
 2575 0081 30       		.byte	0x30
 2576 0082 2E       		.byte	0x2e
 2577 0083 9F       		.byte	0x9f
 2578 0084 00000000 		.4byte	0
 2579 0088 00000000 		.4byte	0
 2580              	.LLST6:
 2581 008c 06000000 		.4byte	.LVL25
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 75


 2582 0090 1F000000 		.4byte	.LVL26-1
 2583 0094 0100     		.2byte	0x1
 2584 0096 50       		.byte	0x50
 2585 0097 00000000 		.4byte	0
 2586 009b 00000000 		.4byte	0
 2587              	.LLST7:
 2588 009f 00000000 		.4byte	.LVL33
 2589 00a3 0C000000 		.4byte	.LVL34
 2590 00a7 0100     		.2byte	0x1
 2591 00a9 50       		.byte	0x50
 2592 00aa 0C000000 		.4byte	.LVL34
 2593 00ae 1C000000 		.4byte	.LVL38
 2594 00b2 0100     		.2byte	0x1
 2595 00b4 54       		.byte	0x54
 2596 00b5 1C000000 		.4byte	.LVL38
 2597 00b9 20000000 		.4byte	.LFE20
 2598 00bd 0400     		.2byte	0x4
 2599 00bf F3       		.byte	0xf3
 2600 00c0 01       		.uleb128 0x1
 2601 00c1 50       		.byte	0x50
 2602 00c2 9F       		.byte	0x9f
 2603 00c3 00000000 		.4byte	0
 2604 00c7 00000000 		.4byte	0
 2605              	.LLST8:
 2606 00cb 00000000 		.4byte	.LVL33
 2607 00cf 0C000000 		.4byte	.LVL34
 2608 00d3 0200     		.2byte	0x2
 2609 00d5 30       		.byte	0x30
 2610 00d6 9F       		.byte	0x9f
 2611 00d7 0C000000 		.4byte	.LVL34
 2612 00db 0E000000 		.4byte	.LVL35
 2613 00df 0100     		.2byte	0x1
 2614 00e1 51       		.byte	0x51
 2615 00e2 0E000000 		.4byte	.LVL35
 2616 00e6 17000000 		.4byte	.LVL36-1
 2617 00ea 0100     		.2byte	0x1
 2618 00ec 53       		.byte	0x53
 2619 00ed 18000000 		.4byte	.LVL36
 2620 00f1 1A000000 		.4byte	.LVL37
 2621 00f5 0100     		.2byte	0x1
 2622 00f7 51       		.byte	0x51
 2623 00f8 00000000 		.4byte	0
 2624 00fc 00000000 		.4byte	0
 2625              	.LLST9:
 2626 0100 00000000 		.4byte	.LVL39
 2627 0104 0E000000 		.4byte	.LVL41
 2628 0108 0100     		.2byte	0x1
 2629 010a 50       		.byte	0x50
 2630 010b 0E000000 		.4byte	.LVL41
 2631 010f 24000000 		.4byte	.LFE21
 2632 0113 0400     		.2byte	0x4
 2633 0115 F3       		.byte	0xf3
 2634 0116 01       		.uleb128 0x1
 2635 0117 50       		.byte	0x50
 2636 0118 9F       		.byte	0x9f
 2637 0119 00000000 		.4byte	0
 2638 011d 00000000 		.4byte	0
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 76


 2639              	.LLST10:
 2640 0121 00000000 		.4byte	.LVL39
 2641 0125 0A000000 		.4byte	.LVL40
 2642 0129 0100     		.2byte	0x1
 2643 012b 51       		.byte	0x51
 2644 012c 0A000000 		.4byte	.LVL40
 2645 0130 24000000 		.4byte	.LFE21
 2646 0134 0400     		.2byte	0x4
 2647 0136 F3       		.byte	0xf3
 2648 0137 01       		.uleb128 0x1
 2649 0138 51       		.byte	0x51
 2650 0139 9F       		.byte	0x9f
 2651 013a 00000000 		.4byte	0
 2652 013e 00000000 		.4byte	0
 2653              	.LLST11:
 2654 0142 00000000 		.4byte	.LVL39
 2655 0146 0E000000 		.4byte	.LVL41
 2656 014a 0200     		.2byte	0x2
 2657 014c 30       		.byte	0x30
 2658 014d 9F       		.byte	0x9f
 2659 014e 0E000000 		.4byte	.LVL41
 2660 0152 16000000 		.4byte	.LVL42
 2661 0156 0900     		.2byte	0x9
 2662 0158 74       		.byte	0x74
 2663 0159 00       		.sleb128 0
 2664 015a F3       		.byte	0xf3
 2665 015b 01       		.uleb128 0x1
 2666 015c 50       		.byte	0x50
 2667 015d 31       		.byte	0x31
 2668 015e 1C       		.byte	0x1c
 2669 015f 1C       		.byte	0x1c
 2670 0160 9F       		.byte	0x9f
 2671 0161 1A000000 		.4byte	.LVL43
 2672 0165 1C000000 		.4byte	.LVL44
 2673 0169 0900     		.2byte	0x9
 2674 016b 74       		.byte	0x74
 2675 016c 00       		.sleb128 0
 2676 016d F3       		.byte	0xf3
 2677 016e 01       		.uleb128 0x1
 2678 016f 50       		.byte	0x50
 2679 0170 31       		.byte	0x31
 2680 0171 1C       		.byte	0x1c
 2681 0172 1C       		.byte	0x1c
 2682 0173 9F       		.byte	0x9f
 2683 0174 00000000 		.4byte	0
 2684 0178 00000000 		.4byte	0
 2685              	.LLST12:
 2686 017c 00000000 		.4byte	.LVL45
 2687 0180 0B000000 		.4byte	.LVL46-1
 2688 0184 0100     		.2byte	0x1
 2689 0186 50       		.byte	0x50
 2690 0187 0B000000 		.4byte	.LVL46-1
 2691 018b 1C000000 		.4byte	.LVL48
 2692 018f 0400     		.2byte	0x4
 2693 0191 F3       		.byte	0xf3
 2694 0192 01       		.uleb128 0x1
 2695 0193 50       		.byte	0x50
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 77


 2696 0194 9F       		.byte	0x9f
 2697 0195 1C000000 		.4byte	.LVL48
 2698 0199 24000000 		.4byte	.LFE22
 2699 019d 0100     		.2byte	0x1
 2700 019f 50       		.byte	0x50
 2701 01a0 00000000 		.4byte	0
 2702 01a4 00000000 		.4byte	0
 2703              	.LLST13:
 2704 01a8 06000000 		.4byte	.LVL49
 2705 01ac 0E000000 		.4byte	.LVL50
 2706 01b0 0100     		.2byte	0x1
 2707 01b2 50       		.byte	0x50
 2708 01b3 14000000 		.4byte	.LVL51
 2709 01b7 1C000000 		.4byte	.LFE23
 2710 01bb 0100     		.2byte	0x1
 2711 01bd 50       		.byte	0x50
 2712 01be 00000000 		.4byte	0
 2713 01c2 00000000 		.4byte	0
 2714              	.LLST14:
 2715 01c6 06000000 		.4byte	.LVL52
 2716 01ca 1F000000 		.4byte	.LVL53-1
 2717 01ce 0100     		.2byte	0x1
 2718 01d0 50       		.byte	0x50
 2719 01d1 00000000 		.4byte	0
 2720 01d5 00000000 		.4byte	0
 2721              	.LLST15:
 2722 01d9 00000000 		.4byte	.LVL54
 2723 01dd 36000000 		.4byte	.LVL59
 2724 01e1 0100     		.2byte	0x1
 2725 01e3 50       		.byte	0x50
 2726 01e4 36000000 		.4byte	.LVL59
 2727 01e8 3C000000 		.4byte	.LVL60
 2728 01ec 0400     		.2byte	0x4
 2729 01ee F3       		.byte	0xf3
 2730 01ef 01       		.uleb128 0x1
 2731 01f0 50       		.byte	0x50
 2732 01f1 9F       		.byte	0x9f
 2733 01f2 3C000000 		.4byte	.LVL60
 2734 01f6 46000000 		.4byte	.LVL63
 2735 01fa 0100     		.2byte	0x1
 2736 01fc 50       		.byte	0x50
 2737 01fd 46000000 		.4byte	.LVL63
 2738 0201 58000000 		.4byte	.LVL65
 2739 0205 0400     		.2byte	0x4
 2740 0207 F3       		.byte	0xf3
 2741 0208 01       		.uleb128 0x1
 2742 0209 50       		.byte	0x50
 2743 020a 9F       		.byte	0x9f
 2744 020b 58000000 		.4byte	.LVL65
 2745 020f 70000000 		.4byte	.LFE25
 2746 0213 0100     		.2byte	0x1
 2747 0215 50       		.byte	0x50
 2748 0216 00000000 		.4byte	0
 2749 021a 00000000 		.4byte	0
 2750              	.LLST16:
 2751 021e 28000000 		.4byte	.LVL57
 2752 0222 2A000000 		.4byte	.LVL58
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 78


 2753 0226 0100     		.2byte	0x1
 2754 0228 52       		.byte	0x52
 2755 0229 40000000 		.4byte	.LVL61
 2756 022d 42000000 		.4byte	.LVL62
 2757 0231 0100     		.2byte	0x1
 2758 0233 52       		.byte	0x52
 2759 0234 00000000 		.4byte	0
 2760 0238 00000000 		.4byte	0
 2761              	.LLST17:
 2762 023c 14000000 		.4byte	.LVL55
 2763 0240 16000000 		.4byte	.LVL56
 2764 0244 0100     		.2byte	0x1
 2765 0246 52       		.byte	0x52
 2766 0247 00000000 		.4byte	0
 2767 024b 00000000 		.4byte	0
 2768              	.LLST18:
 2769 024f 54000000 		.4byte	.LVL64
 2770 0253 58000000 		.4byte	.LVL65
 2771 0257 0100     		.2byte	0x1
 2772 0259 53       		.byte	0x53
 2773 025a 00000000 		.4byte	0
 2774 025e 00000000 		.4byte	0
 2775              		.section	.debug_aranges,"",%progbits
 2776 0000 EC000000 		.4byte	0xec
 2777 0004 0200     		.2byte	0x2
 2778 0006 00000000 		.4byte	.Ldebug_info0
 2779 000a 04       		.byte	0x4
 2780 000b 00       		.byte	0
 2781 000c 0000     		.2byte	0
 2782 000e 0000     		.2byte	0
 2783 0010 00000000 		.4byte	.LFB1
 2784 0014 34000000 		.4byte	.LFE1-.LFB1
 2785 0018 00000000 		.4byte	.LFB2
 2786 001c 40000000 		.4byte	.LFE2-.LFB2
 2787 0020 00000000 		.4byte	.LFB0
 2788 0024 1C000000 		.4byte	.LFE0-.LFB0
 2789 0028 00000000 		.4byte	.LFB3
 2790 002c 40000000 		.4byte	.LFE3-.LFB3
 2791 0030 00000000 		.4byte	.LFB4
 2792 0034 0C000000 		.4byte	.LFE4-.LFB4
 2793 0038 00000000 		.4byte	.LFB5
 2794 003c 0C000000 		.4byte	.LFE5-.LFB5
 2795 0040 00000000 		.4byte	.LFB6
 2796 0044 0C000000 		.4byte	.LFE6-.LFB6
 2797 0048 00000000 		.4byte	.LFB7
 2798 004c 0C000000 		.4byte	.LFE7-.LFB7
 2799 0050 00000000 		.4byte	.LFB8
 2800 0054 10000000 		.4byte	.LFE8-.LFB8
 2801 0058 00000000 		.4byte	.LFB9
 2802 005c 28000000 		.4byte	.LFE9-.LFB9
 2803 0060 00000000 		.4byte	.LFB10
 2804 0064 1C000000 		.4byte	.LFE10-.LFB10
 2805 0068 00000000 		.4byte	.LFB11
 2806 006c 10000000 		.4byte	.LFE11-.LFB11
 2807 0070 00000000 		.4byte	.LFB12
 2808 0074 24000000 		.4byte	.LFE12-.LFB12
 2809 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 79


 2810 007c 02000000 		.4byte	.LFE13-.LFB13
 2811 0080 00000000 		.4byte	.LFB14
 2812 0084 0C000000 		.4byte	.LFE14-.LFB14
 2813 0088 00000000 		.4byte	.LFB15
 2814 008c 0C000000 		.4byte	.LFE15-.LFB15
 2815 0090 00000000 		.4byte	.LFB16
 2816 0094 0C000000 		.4byte	.LFE16-.LFB16
 2817 0098 00000000 		.4byte	.LFB17
 2818 009c 14000000 		.4byte	.LFE17-.LFB17
 2819 00a0 00000000 		.4byte	.LFB18
 2820 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2821 00a8 00000000 		.4byte	.LFB19
 2822 00ac 18000000 		.4byte	.LFE19-.LFB19
 2823 00b0 00000000 		.4byte	.LFB20
 2824 00b4 20000000 		.4byte	.LFE20-.LFB20
 2825 00b8 00000000 		.4byte	.LFB21
 2826 00bc 24000000 		.4byte	.LFE21-.LFB21
 2827 00c0 00000000 		.4byte	.LFB22
 2828 00c4 24000000 		.4byte	.LFE22-.LFB22
 2829 00c8 00000000 		.4byte	.LFB23
 2830 00cc 1C000000 		.4byte	.LFE23-.LFB23
 2831 00d0 00000000 		.4byte	.LFB24
 2832 00d4 24000000 		.4byte	.LFE24-.LFB24
 2833 00d8 00000000 		.4byte	.LFB25
 2834 00dc 70000000 		.4byte	.LFE25-.LFB25
 2835 00e0 00000000 		.4byte	.LFB26
 2836 00e4 18000000 		.4byte	.LFE26-.LFB26
 2837 00e8 00000000 		.4byte	0
 2838 00ec 00000000 		.4byte	0
 2839              		.section	.debug_ranges,"",%progbits
 2840              	.Ldebug_ranges0:
 2841 0000 00000000 		.4byte	.LBB31
 2842 0004 02000000 		.4byte	.LBE31
 2843 0008 04000000 		.4byte	.LBB37
 2844 000c 06000000 		.4byte	.LBE37
 2845 0010 00000000 		.4byte	0
 2846 0014 00000000 		.4byte	0
 2847 0018 02000000 		.4byte	.LBB34
 2848 001c 04000000 		.4byte	.LBE34
 2849 0020 06000000 		.4byte	.LBB38
 2850 0024 08000000 		.4byte	.LBE38
 2851 0028 00000000 		.4byte	0
 2852 002c 00000000 		.4byte	0
 2853 0030 06000000 		.4byte	.LBB39
 2854 0034 56000000 		.4byte	.LBE39
 2855 0038 58000000 		.4byte	.LBB48
 2856 003c 70000000 		.4byte	.LBE48
 2857 0040 00000000 		.4byte	0
 2858 0044 00000000 		.4byte	0
 2859 0048 00000000 		.4byte	.LFB1
 2860 004c 34000000 		.4byte	.LFE1
 2861 0050 00000000 		.4byte	.LFB2
 2862 0054 40000000 		.4byte	.LFE2
 2863 0058 00000000 		.4byte	.LFB0
 2864 005c 1C000000 		.4byte	.LFE0
 2865 0060 00000000 		.4byte	.LFB3
 2866 0064 40000000 		.4byte	.LFE3
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 80


 2867 0068 00000000 		.4byte	.LFB4
 2868 006c 0C000000 		.4byte	.LFE4
 2869 0070 00000000 		.4byte	.LFB5
 2870 0074 0C000000 		.4byte	.LFE5
 2871 0078 00000000 		.4byte	.LFB6
 2872 007c 0C000000 		.4byte	.LFE6
 2873 0080 00000000 		.4byte	.LFB7
 2874 0084 0C000000 		.4byte	.LFE7
 2875 0088 00000000 		.4byte	.LFB8
 2876 008c 10000000 		.4byte	.LFE8
 2877 0090 00000000 		.4byte	.LFB9
 2878 0094 28000000 		.4byte	.LFE9
 2879 0098 00000000 		.4byte	.LFB10
 2880 009c 1C000000 		.4byte	.LFE10
 2881 00a0 00000000 		.4byte	.LFB11
 2882 00a4 10000000 		.4byte	.LFE11
 2883 00a8 00000000 		.4byte	.LFB12
 2884 00ac 24000000 		.4byte	.LFE12
 2885 00b0 00000000 		.4byte	.LFB13
 2886 00b4 02000000 		.4byte	.LFE13
 2887 00b8 00000000 		.4byte	.LFB14
 2888 00bc 0C000000 		.4byte	.LFE14
 2889 00c0 00000000 		.4byte	.LFB15
 2890 00c4 0C000000 		.4byte	.LFE15
 2891 00c8 00000000 		.4byte	.LFB16
 2892 00cc 0C000000 		.4byte	.LFE16
 2893 00d0 00000000 		.4byte	.LFB17
 2894 00d4 14000000 		.4byte	.LFE17
 2895 00d8 00000000 		.4byte	.LFB18
 2896 00dc 0C000000 		.4byte	.LFE18
 2897 00e0 00000000 		.4byte	.LFB19
 2898 00e4 18000000 		.4byte	.LFE19
 2899 00e8 00000000 		.4byte	.LFB20
 2900 00ec 20000000 		.4byte	.LFE20
 2901 00f0 00000000 		.4byte	.LFB21
 2902 00f4 24000000 		.4byte	.LFE21
 2903 00f8 00000000 		.4byte	.LFB22
 2904 00fc 24000000 		.4byte	.LFE22
 2905 0100 00000000 		.4byte	.LFB23
 2906 0104 1C000000 		.4byte	.LFE23
 2907 0108 00000000 		.4byte	.LFB24
 2908 010c 24000000 		.4byte	.LFE24
 2909 0110 00000000 		.4byte	.LFB25
 2910 0114 70000000 		.4byte	.LFE25
 2911 0118 00000000 		.4byte	.LFB26
 2912 011c 18000000 		.4byte	.LFE26
 2913 0120 00000000 		.4byte	0
 2914 0124 00000000 		.4byte	0
 2915              		.section	.debug_line,"",%progbits
 2916              	.Ldebug_line0:
 2917 0000 13030000 		.section	.debug_str,"MS",%progbits,1
 2917      02005F00 
 2917      00000201 
 2917      FB0E0D00 
 2917      01010101 
 2918              	.LASF10:
 2919 0000 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 81


 2919      313600
 2920              	.LASF59:
 2921 0007 43794578 		.ascii	"CyExitCriticalSection\000"
 2921      69744372 
 2921      69746963 
 2921      616C5365 
 2921      6374696F 
 2922              	.LASF42:
 2923 001d 74784461 		.ascii	"txDataByte\000"
 2923      74614279 
 2923      746500
 2924              	.LASF45:
 2925 0028 73747269 		.ascii	"string\000"
 2925      6E6700
 2926              	.LASF7:
 2927 002f 6C6F6E67 		.ascii	"long long unsigned int\000"
 2927      206C6F6E 
 2927      6720756E 
 2927      7369676E 
 2927      65642069 
 2928              	.LASF24:
 2929 0046 55415254 		.ascii	"UART_Start\000"
 2929      5F537461 
 2929      727400
 2930              	.LASF63:
 2931 0051 433A5C55 		.ascii	"C:\\Users\\Kiwi\\Documents\\PSoC Creator\\DTR-1 v2 "
 2931      73657273 
 2931      5C4B6977 
 2931      695C446F 
 2931      63756D65 
 2932 007f 48572E63 		.ascii	"HW.cydsn\000"
 2932      7964736E 
 2932      00
 2933              	.LASF40:
 2934 0088 55415254 		.ascii	"UART_SetTxInterruptMode\000"
 2934      5F536574 
 2934      5478496E 
 2934      74657272 
 2934      7570744D 
 2935              	.LASF6:
 2936 00a0 6C6F6E67 		.ascii	"long long int\000"
 2936      206C6F6E 
 2936      6720696E 
 2936      7400
 2937              	.LASF0:
 2938 00ae 7369676E 		.ascii	"signed char\000"
 2938      65642063 
 2938      68617200 
 2939              	.LASF61:
 2940 00ba 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2940      43313120 
 2940      352E342E 
 2940      31203230 
 2940      31363036 
 2941 00ed 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2941      20726576 
 2941      6973696F 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 82


 2941      6E203233 
 2941      37373135 
 2942 0120 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 2942      66756E63 
 2942      74696F6E 
 2942      2D736563 
 2942      74696F6E 
 2943              	.LASF55:
 2944 0148 74785065 		.ascii	"txPeriod\000"
 2944      72696F64 
 2944      00
 2945              	.LASF4:
 2946 0151 6C6F6E67 		.ascii	"long int\000"
 2946      20696E74 
 2946      00
 2947              	.LASF43:
 2948 015a 55415254 		.ascii	"UART_PutChar\000"
 2948      5F507574 
 2948      43686172 
 2948      00
 2949              	.LASF18:
 2950 0167 55415254 		.ascii	"UART_ReadRxData\000"
 2950      5F526561 
 2950      64527844 
 2950      61746100 
 2951              	.LASF9:
 2952 0177 75696E74 		.ascii	"uint8\000"
 2952      3800
 2953              	.LASF66:
 2954 017d 55415254 		.ascii	"UART_ReadControlRegister\000"
 2954      5F526561 
 2954      64436F6E 
 2954      74726F6C 
 2954      52656769 
 2955              	.LASF12:
 2956 0196 646F7562 		.ascii	"double\000"
 2956      6C6500
 2957              	.LASF36:
 2958 019d 61646472 		.ascii	"addressMode\000"
 2958      6573734D 
 2958      6F646500 
 2959              	.LASF65:
 2960 01a9 636F6E74 		.ascii	"control\000"
 2960      726F6C00 
 2961              	.LASF22:
 2962 01b1 55415254 		.ascii	"UART_Init\000"
 2962      5F496E69 
 2962      7400
 2963              	.LASF53:
 2964 01bb 7265744D 		.ascii	"retMode\000"
 2964      6F646500 
 2965              	.LASF30:
 2966 01c3 55415254 		.ascii	"UART_GetByte\000"
 2966      5F476574 
 2966      42797465 
 2966      00
 2967              	.LASF8:
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 83


 2968 01d0 756E7369 		.ascii	"unsigned int\000"
 2968      676E6564 
 2968      20696E74 
 2968      00
 2969              	.LASF51:
 2970 01dd 55415254 		.ascii	"UART_ClearTxBuffer\000"
 2970      5F436C65 
 2970      61725478 
 2970      42756666 
 2970      657200
 2971              	.LASF49:
 2972 01f0 55415254 		.ascii	"UART_PutCRLF\000"
 2972      5F507574 
 2972      43524C46 
 2972      00
 2973              	.LASF5:
 2974 01fd 6C6F6E67 		.ascii	"long unsigned int\000"
 2974      20756E73 
 2974      69676E65 
 2974      6420696E 
 2974      7400
 2975              	.LASF47:
 2976 020f 55415254 		.ascii	"UART_PutArray\000"
 2976      5F507574 
 2976      41727261 
 2976      7900
 2977              	.LASF57:
 2978 021d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2978      74657243 
 2978      72697469 
 2978      63616C53 
 2978      65637469 
 2979              	.LASF32:
 2980 0234 73697A65 		.ascii	"size\000"
 2980      00
 2981              	.LASF3:
 2982 0239 73686F72 		.ascii	"short unsigned int\000"
 2982      7420756E 
 2982      7369676E 
 2982      65642069 
 2982      6E7400
 2983              	.LASF46:
 2984 024c 62756649 		.ascii	"bufIndex\000"
 2984      6E646578 
 2984      00
 2985              	.LASF35:
 2986 0255 696E7453 		.ascii	"intSrc\000"
 2986      726300
 2987              	.LASF56:
 2988 025c 55415254 		.ascii	"UART_SetTxAddressMode\000"
 2988      5F536574 
 2988      54784164 
 2988      64726573 
 2988      734D6F64 
 2989              	.LASF67:
 2990 0272 55415254 		.ascii	"UART_ReadTxStatus\000"
 2990      5F526561 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 84


 2990      64547853 
 2990      74617475 
 2990      7300
 2991              	.LASF58:
 2992 0284 55415254 		.ascii	"UART_IntClock_Start\000"
 2992      5F496E74 
 2992      436C6F63 
 2992      6B5F5374 
 2992      61727400 
 2993              	.LASF54:
 2994 0298 746D7053 		.ascii	"tmpStat\000"
 2994      74617400 
 2995              	.LASF17:
 2996 02a0 73697A65 		.ascii	"sizetype\000"
 2996      74797065 
 2996      00
 2997              	.LASF16:
 2998 02a9 6C6F6E67 		.ascii	"long double\000"
 2998      20646F75 
 2998      626C6500 
 2999              	.LASF38:
 3000 02b5 61646472 		.ascii	"address\000"
 3000      65737300 
 3001              	.LASF37:
 3002 02bd 55415254 		.ascii	"UART_SetRxAddress1\000"
 3002      5F536574 
 3002      52784164 
 3002      64726573 
 3002      733100
 3003              	.LASF39:
 3004 02d0 55415254 		.ascii	"UART_SetRxAddress2\000"
 3004      5F536574 
 3004      52784164 
 3004      64726573 
 3004      733200
 3005              	.LASF28:
 3006 02e3 72785374 		.ascii	"rxStatus\000"
 3006      61747573 
 3006      00
 3007              	.LASF60:
 3008 02ec 55415254 		.ascii	"UART_IntClock_Stop\000"
 3008      5F496E74 
 3008      436C6F63 
 3008      6B5F5374 
 3008      6F7000
 3009              	.LASF62:
 3010 02ff 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART.c\000"
 3010      72617465 
 3010      645F536F 
 3010      75726365 
 3010      5C50536F 
 3011              	.LASF50:
 3012 031d 55415254 		.ascii	"UART_GetTxBufferSize\000"
 3012      5F476574 
 3012      54784275 
 3012      66666572 
 3012      53697A65 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 85


 3013              	.LASF15:
 3014 0332 72656738 		.ascii	"reg8\000"
 3014      00
 3015              	.LASF34:
 3016 0337 55415254 		.ascii	"UART_SetRxAddressMode\000"
 3016      5F536574 
 3016      52784164 
 3016      64726573 
 3016      734D6F64 
 3017              	.LASF1:
 3018 034d 756E7369 		.ascii	"unsigned char\000"
 3018      676E6564 
 3018      20636861 
 3018      7200
 3019              	.LASF41:
 3020 035b 55415254 		.ascii	"UART_WriteTxData\000"
 3020      5F577269 
 3020      74655478 
 3020      44617461 
 3020      00
 3021              	.LASF2:
 3022 036c 73686F72 		.ascii	"short int\000"
 3022      7420696E 
 3022      7400
 3023              	.LASF52:
 3024 0376 55415254 		.ascii	"UART_SendBreak\000"
 3024      5F53656E 
 3024      64427265 
 3024      616B00
 3025              	.LASF48:
 3026 0385 62797465 		.ascii	"byteCount\000"
 3026      436F756E 
 3026      7400
 3027              	.LASF20:
 3028 038f 72784461 		.ascii	"rxData\000"
 3028      746100
 3029              	.LASF23:
 3030 0396 55415254 		.ascii	"UART_Enable\000"
 3030      5F456E61 
 3030      626C6500 
 3031              	.LASF19:
 3032 03a2 55415254 		.ascii	"UART_ReadRxStatus\000"
 3032      5F526561 
 3032      64527853 
 3032      74617475 
 3032      7300
 3033              	.LASF14:
 3034 03b4 63686172 		.ascii	"char\000"
 3034      00
 3035              	.LASF13:
 3036 03b9 63686172 		.ascii	"char8\000"
 3036      3800
 3037              	.LASF27:
 3038 03bf 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 3038      5F536574 
 3038      5278496E 
 3038      74657272 
ARM GAS  C:\Users\Kiwi\AppData\Local\Temp\ccv3D4Re.s 			page 86


 3038      7570744D 
 3039              	.LASF29:
 3040 03d7 55415254 		.ascii	"UART_GetChar\000"
 3040      5F476574 
 3040      43686172 
 3040      00
 3041              	.LASF26:
 3042 03e4 656E6162 		.ascii	"enableInterrupts\000"
 3042      6C65496E 
 3042      74657272 
 3042      75707473 
 3042      00
 3043              	.LASF68:
 3044 03f5 55415254 		.ascii	"UART_initVar\000"
 3044      5F696E69 
 3044      74566172 
 3044      00
 3045              	.LASF31:
 3046 0402 55415254 		.ascii	"UART_GetRxBufferSize\000"
 3046      5F476574 
 3046      52784275 
 3046      66666572 
 3046      53697A65 
 3047              	.LASF21:
 3048 0417 73746174 		.ascii	"status\000"
 3048      757300
 3049              	.LASF25:
 3050 041e 55415254 		.ascii	"UART_Stop\000"
 3050      5F53746F 
 3050      7000
 3051              	.LASF11:
 3052 0428 666C6F61 		.ascii	"float\000"
 3052      7400
 3053              	.LASF44:
 3054 042e 55415254 		.ascii	"UART_PutString\000"
 3054      5F507574 
 3054      53747269 
 3054      6E6700
 3055              	.LASF64:
 3056 043d 55415254 		.ascii	"UART_WriteControlRegister\000"
 3056      5F577269 
 3056      7465436F 
 3056      6E74726F 
 3056      6C526567 
 3057              	.LASF33:
 3058 0457 55415254 		.ascii	"UART_ClearRxBuffer\000"
 3058      5F436C65 
 3058      61725278 
 3058      42756666 
 3058      657200
 3059              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
